import{a as d,g as y,k as m,b as s,z as i}from"./index.BuGYwc2n.js";import{u as o}from"./useMutation.BDr3YMGm.js";import{a as u}from"./queryToast.CdxJb5Yw.js";const p=async t=>(await s.get("/cart-items",{params:t})).data||[],f=({cart_id:t="",type:a="through_cart"})=>{const n={...t&&{cart_id:t},type:a};return d({queryKey:["cart",n],queryFn:()=>p(n),enabled:!!y()})},l=async t=>(await s.post("/add-to-cart",t)).data,q=()=>{const t=m(),a=o({mutationFn:r=>s.put("/cart-update",{...r}),onSuccess:()=>{t.invalidateQueries({queryKey:["cart"]})}}),n=o({mutationFn:l}),c=o({mutationFn:r=>s.delete(`/cart-delete/${r}`),onSuccess:()=>{t.invalidateQueries({queryKey:["cart"]})}});return{updateQuantity:a,addIteamMutation:n,removeItem:c}},k=t=>{const{updateQuantity:a,removeItem:n}=q();return{handleRemove:e=>n.mutate(e._id,u(t)),handleIncrease:e=>{if(e.quantity<e.product_id.stock)return a.mutate({cartId:e._id,quantity:e.quantity+1},u(t));i.error("Out Of Stock")},handleDecrease:e=>{if(e.quantity>1)return a.mutate({cartId:e._id,quantity:e.quantity-1},u(t));i.error("Out Of Stock")},isPending:a.isPending||n.isPending}};export{q as a,k as b,f as u};
