import{u as s,m as o,a,o as u,z as n}from"./index.BKgSVtDm.js";const c=async(e={})=>(await a.get("/get-category",{params:e})).data,p=e=>s({queryKey:["get-category",e],queryFn:()=>c(e||{}),staleTime:1e3*60}),b=()=>{const e=u();return o({mutationFn:async({id:t,isActive:r})=>(await a.put(`/update-category/${t}`,{isActive:r})).data,onSuccess:()=>{n.success("Category status updated!"),e.invalidateQueries({queryKey:["get-category"]})},onError:()=>{n.error("Failed to update category status")}})},y=async e=>{const t=e?`/subcategory?category=${e}`:"/subcategory";return(await a.get(t)).data},C=(e,t=!1)=>s({queryKey:["sub-category",e],queryFn:()=>y(e),enabled:!0,placeholderData:t?r=>r:void 0}),i=async e=>(await a.get("/get-brand",{params:e})).data,m=(e={})=>{const t=Object.fromEntries(Object.entries(e).filter(([,r])=>r!=null));return s({queryKey:["get-brand",t],queryFn:()=>i(t),staleTime:1e3*60})},g=async e=>(await a.post("/create-product",e)).data,q=()=>o({mutationFn:e=>g(e)});export{C as a,m as b,q as c,b as d,p as u};
