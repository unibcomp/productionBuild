{"version":3,"file":"static/js/840.ae1e1fd4.chunk.js","mappings":"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","sources":["pages/admin/userlist/Userlist.js","pages/admin/userlist/UserlistOtp.js","../node_modules/react-html-table-to-excel/index.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Modal, Button, Form, Table, Col, Row, Card, Badge } from 'react-bootstrap';\r\nimport { Pagination } from 'antd';\r\nimport { FaEye, FaChevronDown, FaChevronUp, FaTimes } from 'react-icons/fa';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport {  toast } from 'react-toastify';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport Loader from '../../../common/loader/Loader';\r\nimport { getDownstreamList, fundtransferToRefer, confirmReverseTransfer, Getprofile, getDownstreamListReport } from '../../../api/login/Login';\r\nimport \"./Userlist.css\";\r\nimport { WalletsShow } from '../../../api/login/Login';\r\nimport { Popconfirm } from 'antd';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../../../baseUrl';\r\nimport OtpVerificationPage from './UserlistOtp';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Userlist({ walletShowHeader }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [totalCount, setTotalCount] = useState(0);\r\n    const [page, setPage] = useState(0);\r\n    const [count, setCount] = useState(10);\r\n    const [showTransferModal, setShowTransferModal] = useState(false);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [expandedUserId, setExpandedUserId] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const navigate = useNavigate();\r\n    const [transferAmount, setTransferAmount] = useState('');\r\n    const [walletData, setWalletData] = useState({});\r\n    const [filterData, setFilterData] = useState({\r\n        userId: '',\r\n        name: '',\r\n        email: '',\r\n        mobile: '',\r\n        is_approved: '',\r\n        refer_id: ''\r\n    });\r\n\r\n    const [isTransferValid, setIsTransferValid] = useState(false);\r\n    const storedUserType = localStorage.getItem('userType');\r\n    const storedUserTypeId = localStorage.getItem('userTypeId');\r\n    const userToken = window.localStorage.getItem('userToken')\r\n    const [showTpinModal, setShowTpinModal] = useState(false);\r\n    const [showReverseTpinModal, setShowReverseTpinModal] = useState(false);\r\n    const [tpin, setTpin] = useState('');\r\n    const [tpinError, setTpinError] = useState('');\r\n    const [showReverseTransferModal, setShowReverseTransferModal] = useState(false);\r\n    const [reverseTransferAmount, setReverseTransferAmount] = useState('');\r\n    const [showOtpModal, setShowOtpModal] = useState(false);\r\n    const [otp, setOtp] = useState(['', '', '', '', '', '']);\r\n    const [timeLeft, setTimeLeft] = useState(120);\r\n    const [isTimerEnded, setIsTimerEnded] = useState(false);\r\n    const [resendLoading, setResendLoading] = useState(false);\r\n    const [otpLoading, setOtpLoading] = useState(false);\r\n    const [otpError, setOtpError] = useState('');\r\n    const [otpMessage, setOtpMessage] = useState('');\r\n    const [storetoken, setStoreToken] = useState();\r\n    const length1 = 6;\r\n    const [otp1, setOtp1] = useState(new Array(length1).fill(''));\r\n    const inputs1 = useRef([]);\r\n    const [latitude, setLatitude] = useState(null);\r\n    const [longitude, setLongitude] = useState(null);\r\n    const [locationError, setLocationError] = useState(null);\r\n    const [maskedTpin, setMaskedTpin] = useState('');\r\n    const [walletlockdata, setLockWAletData] = useState({})\r\n    const [isPopconfirmOpen, setIsPopconfirmOpen] = useState(false);\r\n    const [subUsersPage, setSubUsersPage] = useState(1);\r\n    const subUsersPerPage = 10;\r\n    const staticUserData = Array(30).fill().map((_, userIndex) => ({\r\n        _id: `user${userIndex + 1}`,\r\n        refer_id: `REF00${userIndex + 1}`,\r\n        name: `User ${userIndex + 1}`,\r\n        is_approved: userIndex % 2 === 0,  // Alternates between approved and not approved\r\n        main_wallet: 3000 + (userIndex * 500),  // Incremental wallet amounts\r\n        subUsers: Array(Math.floor(Math.random() * 20) + 10).fill().map((_, subIndex) => ({\r\n          _id: `subuser${userIndex + 1}_${subIndex + 1}`,\r\n          refer_id: `SUB00${userIndex + 1}_${subIndex + 1}`,\r\n          name: `Retailer ${userIndex + 1}-${subIndex + 1}`,\r\n          is_approved: subIndex % 2 === 0,  // Alternates approval for sub-users\r\n          main_wallet: 1000 + (subIndex * 200),  // Incremental wallet amounts for sub-users\r\n        }))\r\n      }));\r\n\r\n\r\n    const getCurrentLocation = () => {\r\n        return new Promise((resolve, reject) => {\r\n            if (\"geolocation\" in navigator) {\r\n                navigator.geolocation.getCurrentPosition(\r\n                    (position) => {\r\n                        setLatitude(position.coords.latitude);\r\n                        setLongitude(position.coords.longitude);\r\n                        setLocationError(null);\r\n                        resolve(true);\r\n                    },\r\n                    (error) => {\r\n                        setLocationError(\"Unable to retrieve your location\");\r\n\r\n                    }\r\n                );\r\n            } else {\r\n                setLocationError(\"Geolocation is not supported by your browser\");\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const otpChandleChange1 = (index, value) => {\r\n        const newOtp = [...otp1];\r\n        if (value.length === 2) {\r\n            return;\r\n        }\r\n        newOtp[index] = value;\r\n        setOtp1(newOtp);\r\n\r\n        if (value && index < length1 - 1 && inputs1.current[index + 1]) {\r\n            inputs1.current[index + 1].focus();\r\n        }\r\n    };\r\n\r\n    const handleKeyDown1 = (index, e) => {\r\n        if (e.key === 'Backspace' && !otp1[index] && index > 0 && inputs1.current[index - 1]) {\r\n            inputs1.current[index - 1].focus();\r\n        }\r\n    };\r\n\r\n    const isAllInputsFilled = !otp1.includes('');\r\n\r\n    console.log(\"walletData\", walletData)\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [currentPage, count]);\r\n\r\n\r\n\r\n    const fetchData = async (resetFilters = false) => {\r\n        setLoading(true);\r\n        try {\r\n            let response;\r\n            if (storedUserType === \"Distributor\") {\r\n                response = await getDownstreamList(currentPage - 1, count, storedUserTypeId, filterData);\r\n            } else {\r\n                response = await getDownstreamList(currentPage - 1, count, '', filterData);\r\n            }\r\n            setData(response?.data?.data || []);\r\n            setTotalCount(response?.data?.totalCount || 0);\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n            toast.error('Failed to fetch users');\r\n            setData([]);\r\n            setTotalCount(0);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    // const handlePageChange = (newPage) => {\r\n    //     setPage(newPage - 1);\r\n    // };\r\n    const handlePageChange = (newPage) => {\r\n        setCurrentPage(newPage);\r\n    };\r\n\r\n    const handleTransferClick = (user) => {\r\n        setSelectedUser(user);\r\n        setShowTransferModal(true);\r\n    };\r\n\r\n    const validateTpin = async (tpin) => {\r\n\r\n        return { isValid: tpin === '1234' };\r\n    };\r\n\r\n    const handleUserClick = async (userId) => {\r\n        console.log(\"userId\", userId)\r\n        if (expandedUserId === userId) {\r\n            setExpandedUserId(null);\r\n        } else {\r\n            setExpandedUserId(userId);\r\n            setLoading(true);\r\n            try {\r\n                const response = await getDownstreamList(page, count, userId,);\r\n                const updatedData = data.map(user =>\r\n                    user._id === userId ? { ...user, subUsers: response?.data?.data || [] } : user\r\n                );\r\n                setData(updatedData);\r\n                console.log(\"subdata\", data)\r\n            } catch (error) {\r\n                console.error('Error fetching sub-users:', error);\r\n                toast.error('Failed to fetch sub-users');\r\n            }\r\n            setLoading(false);\r\n        }\r\n    };\r\n    const handleSubUsersPageChange = (newPage) => {\r\n        setSubUsersPage(newPage -1);\r\n    };\r\n\r\n    // Add a function to get paginated subUsers\r\n    const getPaginatedSubUsers = (subUsers) => {\r\n        const startIndex = (subUsersPage - 1) * subUsersPerPage;\r\n        const endIndex = startIndex + subUsersPerPage;\r\n        return subUsers.slice(startIndex, endIndex);\r\n    };\r\n\r\n    const handleFilterChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFilterData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleFilterSubmit = (e) => {\r\n        e.preventDefault();\r\n        setPage(0);\r\n        fetchData();\r\n    };\r\n\r\n\r\n    const resetFilter = () => {\r\n        setFilterData({\r\n            userId: '',\r\n            name: '',\r\n            email: '',\r\n            mobile: '',\r\n            is_approved: '',\r\n            refer_id: ''\r\n        });\r\n        setCurrentPage(1);\r\n        fetchData();\r\n    };\r\n    const walletShow = async () => {\r\n        try {\r\n            const res = await WalletsShow()\r\n            console.log(\"Wallet\", res)\r\n            setWalletData(res?.data?.data);\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n    const getDataProfile = async () => {\r\n        try {\r\n            const res = await Getprofile()\r\n            setLockWAletData(res?.data?.data)\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        walletShow();\r\n        getDataProfile();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (showTpinModal || showReverseTpinModal) {\r\n            getCurrentLocation();\r\n        }\r\n    }, [showTpinModal, showReverseTpinModal]);\r\n\r\n    const handleTransferAmountChange = (e) => {\r\n        const amount = e.target.value;\r\n        setTransferAmount(amount);\r\n        setIsTransferValid(Number(amount) >= 0\r\n            && Number(amount) <= Number(walletData?.main_wallet - walletlockdata?.locking_amt)\r\n        );\r\n    };\r\n\r\n\r\n    const handleReverseTransferClick = (user) => {\r\n        setSelectedUser(user);\r\n        setShowReverseTransferModal(true);\r\n    };\r\n\r\n    const handleReverseTransferAmountChange = (e) => {\r\n        const amount = e.target.value;\r\n        setReverseTransferAmount(amount);\r\n\r\n    };\r\n\r\n    const handleReverseTransferSubmit = async () => {\r\n        try {\r\n            await getCurrentLocation();\r\n\r\n            if (locationError) {\r\n                toast.error(locationError);\r\n                return;\r\n            }\r\n\r\n            const response = await fundtransferToRefer({\r\n                transferTo: selectedUser._id,\r\n                amount: Number(reverseTransferAmount),\r\n                tpin: tpin,\r\n                trans_type: \"refund\",\r\n                lat: latitude,\r\n                long: longitude\r\n            });\r\n\r\n            if (response.data.statusCode == \"200\") {\r\n                const token = response.data.data.token;\r\n                setStoreToken(token);\r\n                setShowReverseTpinModal(false);\r\n                setShowOtpModal(true);\r\n                // startOtpTimer();\r\n            } else if (response.data.statusCode == \"403\") {\r\n                setTpinError(response?.data?.message);\r\n                toast.error(response?.data?.message);\r\n            } else {\r\n                toast.error(response.data.message || 'Reverse transfer failed. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error reverse transferring money:', error);\r\n            toast.error('Reverse transfer failed. Please try again.');\r\n        }\r\n    };\r\n\r\n    const startOtpTimer = () => {\r\n        setTimeLeft(120);\r\n        setIsTimerEnded(false);\r\n        const timer = setInterval(() => {\r\n            setTimeLeft((prevTime) => {\r\n                if (prevTime <= 1) {\r\n                    clearInterval(timer);\r\n                    setIsTimerEnded(true);\r\n                    return 0;\r\n                }\r\n                return prevTime - 1;\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    const handleOtpChange = (index, value) => {\r\n        const newOtp = [...otp];\r\n        newOtp[index] = value;\r\n        setOtp(newOtp);\r\n    };\r\n\r\n    const handleSubmitOTP = async (e) => {\r\n        if (e) e.preventDefault();\r\n        setOtpLoading(true);\r\n        try {\r\n            const otpValue = otp1.join('');\r\n\r\n            const response = await confirmReverseTransfer({\r\n                token: storetoken,\r\n                otp: otpValue,\r\n                lat: latitude,\r\n                long: longitude\r\n            });\r\n\r\n            if (response.data.statusCode == \"200\") {\r\n                setOtpLoading(false);\r\n                setShowOtpModal(false);\r\n                toast.success('Reverse transfer successful');\r\n                fetchData();\r\n                resetModalStates()\r\n                walletShow();\r\n                if (walletShowHeader) walletShowHeader();\r\n            } else {\r\n                setOtpError(response.data.message || 'Invalid OTP. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error confirming reverse transfer:', error);\r\n            setOtpError('An error occurred. Please try again.');\r\n        }\r\n        setOtpLoading(false);\r\n    };\r\n    const handleOtpKeyDown = (e, index) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            if (isAllInputsFilled && !otpLoading) {\r\n                handleSubmitOTP();\r\n            } else if (index < length1 - 1 && inputs1.current[index + 1]) {\r\n                inputs1.current[index + 1].focus();\r\n            }\r\n        }\r\n        if (e.key === 'Backspace' && !otp1[index] && index > 0 && inputs1.current[index - 1]) {\r\n            inputs1.current[index - 1].focus();\r\n        }\r\n    };\r\n\r\n    const handleResendOTP = () => {\r\n        setResendLoading(true);\r\n\r\n        startOtpTimer();\r\n        setResendLoading(false);\r\n    };\r\n\r\n    const resetModalStates = () => {\r\n        setTransferAmount('');\r\n        setReverseTransferAmount('');\r\n        setTpin('');\r\n        setMaskedTpin('');\r\n        setTpinError('');\r\n        setOtp1(new Array(length1).fill(''));\r\n        setOtpError('');\r\n        setOtpMessage('');\r\n        setIsTransferValid(false);\r\n        setIsPopconfirmOpen(false);\r\n    };\r\n    const handleTransferSubmit = async () => {\r\n        try {\r\n            await getCurrentLocation();\r\n\r\n            if (locationError) {\r\n                toast.error(\"Location access is required for this transaction. Please enable location services and try again.\");\r\n                return;\r\n            }\r\n\r\n            const response = await fundtransferToRefer({\r\n                transferTo: selectedUser._id,\r\n                amount: Number(transferAmount),\r\n                tpin: tpin,\r\n                trans_type: \"transfer\",\r\n                lat: latitude,\r\n                long: longitude\r\n            });\r\n\r\n            if (response.data.statusCode == \"200\") {\r\n                toast.success('Money transferred successfully');\r\n                setShowTpinModal(false);\r\n                resetModalStates();\r\n                fetchData();\r\n                walletShow();\r\n                if (walletShowHeader) walletShowHeader();\r\n            } else if (response.data.statusCode == \"403\") {\r\n                setTpinError(response?.data?.message);\r\n                toast.error(response?.data?.message);\r\n            } else {\r\n                toast.error(response.data.message || 'Transfer failed. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error transferring money:', error);\r\n            if (error.name === 'GeolocationPositionError') {\r\n                toast.error(\"Unable to access location. Please enable location services and try again.\");\r\n            } else {\r\n                toast.error('Transfer failed. Please try again.');\r\n            }\r\n        }\r\n    };\r\n    const handleCloseTransferModal = () => {\r\n        setShowTransferModal(false);\r\n        resetModalStates();\r\n        // setTransferAmount('');\r\n    };\r\n\r\n    const handleCloseTpinModal = () => {\r\n        setShowTpinModal(false);\r\n        resetModalStates();\r\n        // setTpin('');\r\n    };\r\n\r\n    const handleCloseReverseTransferModal = () => {\r\n        setShowReverseTransferModal(false);\r\n        resetModalStates();\r\n        // setReverseTransferAmount('');\r\n    };\r\n\r\n    const handleCloseReverseTpinModal = () => {\r\n        setShowReverseTpinModal(false);\r\n        resetModalStates();\r\n        setTpin('');\r\n    };\r\n\r\n    const handleCloseOtpModal = () => {\r\n        setShowOtpModal(false);\r\n        resetModalStates();\r\n        // setOtp1();\r\n    };\r\n\r\n    const handleTransferModalKeyDown = (e) => {\r\n        if (e.key === 'Enter' && isTransferValid) {\r\n            e.preventDefault();\r\n            if (Number(transferAmount) < 100) {\r\n                toast.error('Amount must be at least 100 rupees');\r\n            } else {\r\n                setShowTransferModal(false);\r\n                setShowTpinModal(true);\r\n            }\r\n        }\r\n    };\r\n    const handleTpinModalKeyDown = (e) => {\r\n        if (e.key === 'Enter' && tpin.length === 4 && !locationError) {\r\n            e.preventDefault();\r\n            setIsPopconfirmOpen(true);\r\n        }\r\n    };\r\n    const handleReverseTransferModalKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            setShowReverseTransferModal(false);\r\n            setShowReverseTpinModal(true);\r\n        }\r\n    };\r\n    const handleReverseTpinModalKeyDown = (e) => {\r\n        if (e.key === 'Enter' && tpin.length === 4 && !locationError) {\r\n            e.preventDefault();\r\n            setIsPopconfirmOpen(true);\r\n        }\r\n    };\r\n    const handleReportClick = (userId) => {\r\n        navigate(`/user-report/${userId}`);\r\n    };\r\n    return (\r\n        <>\r\n            {loading && <Loader />}\r\n            <div className=\"container-fluid\">\r\n                <h1 className=\"h3 mb-2 text-gray-800\">Downstream Users</h1>\r\n\r\n                {/* <Card className=\"shadow mb-4\">\r\n                    <Card.Header className=\"py-3 bg-primary text-white\">\r\n                        <h6 className=\"m-0 font-weight-bold\">Filter</h6>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form onSubmit={handleFilterSubmit}>\r\n                            <Row>\r\n                                <Row>\r\n                                    <Col md={3}>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Refer ID</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                name=\"refer_id\"\r\n                                                value={filterData.refer_id}\r\n                                                onChange={handleFilterChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                name=\"name\"\r\n                                                value={filterData.name}\r\n                                                onChange={handleFilterChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"email\"\r\n                                                name=\"email\"\r\n                                                value={filterData.email}\r\n                                                onChange={handleFilterChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Mobile</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                name=\"mobile\"\r\n                                                value={filterData.mobile}\r\n                                                onChange={handleFilterChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Row>\r\n                            <Row>\r\n\r\n                                <Col md={12} className=\"d-flex align-items-end justify-content-end\">\r\n                                    <Button variant=\"primary\" type=\"submit\" className=\"me-2\">\r\n                                        Apply Filter\r\n                                    </Button>\r\n                                    <Button variant=\"warning\" onClick={resetFilter}>\r\n                                        Reset\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card> */}\r\n\r\n                {/* User List Table */}\r\n                <Card className=\"shadow mb-4\">\r\n                    {/* <Card.Header className=\"py-3 d-flex justify-content-between align-items-center bg-primary text-white\"> */}\r\n                    {/* <h6 className=\"m-0 font-weight-bold\">User List</h6> */}\r\n                    <div className=\"card-header py-3 d-flex justify-content-between align-items-center\">\r\n                        <span> {storedUserType === 'Super Distributor' ? 'Distributor' : 'Retailer'}</span>\r\n                        {/* <ReactHTMLTableToExcel\r\n                            id=\"test-table-xls-button\"\r\n                            className=\"btn btn-light\"\r\n                            table=\"table-to-xlsx\"\r\n                            filename=\"downstream_users\"\r\n                            sheet=\"tablexls\"\r\n                            buttonText=\"Download Excel\"\r\n                        /> */}\r\n                    </div>\r\n                    <Card.Body>\r\n                        <div className=\"table-responsive\">\r\n                            {storedUserType === 'Super Distributor' ? (\r\n                                <Table className=\"table-hover\" id=\"dataTable\">\r\n                                    <thead className=\"bg-light\">\r\n                                        <tr>\r\n                                            <th>S.No</th>\r\n                                            <th>Refer ID</th>\r\n                                            <th>Name</th>\r\n                                            <th>Approved</th>\r\n                                            <th>Userlist</th>\r\n                                            <th>Transfer</th>\r\n                                            <th>Reverse Transfer</th>\r\n                                            <th>Wallet Balance</th>\r\n                                            <th>Report</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {data.length > 0 ? data.map((user, index) => (\r\n                                            <React.Fragment key={user._id}>\r\n                                                <tr>\r\n                                                    <td>{index + 1 + (page * count)}</td>\r\n                                                    <td>{user.refer_id}</td>\r\n                                                    <td>{user.name}</td>\r\n                                                    <td className={user.is_approved ? 'approvedstatusindownstrip' : 'pendingstatusindownstrip'}>\r\n                                                        {user.is_approved ? 'Approved' : 'Pending'}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Button\r\n                                                            variant=\"link\"\r\n                                                            onClick={() => handleUserClick(user._id)}\r\n                                                            className=\"d-flex align-items-center\"\r\n                                                        >\r\n                                                            Retailers\r\n                                                            {expandedUserId === user._id ? <FaChevronUp className=\"ms-1\" /> : <FaChevronDown className=\"ms-1\" />}\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Button variant=\"outline-primary\" size=\"sm\" onClick={() => handleTransferClick(user)}>\r\n                                                            Transfer Money\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => handleReverseTransferClick(user)}>\r\n                                                            Reverse Transfer\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                    <td>{user?.main_wallet || 0}</td>\r\n                                                    <td>\r\n                                                        <Button variant=\"link\" onClick={() => handleReportClick(user._id)}>\r\n                                                            <FaEye className=\"text-primary\" />\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                {expandedUserId === user._id && user.subUsers && (\r\n                                                    <tr>\r\n                                                        <td colSpan=\"6\" className=\"p-0\">\r\n                                                            <div className=\"bg-light p-3 rounded\">\r\n                                                                <h6 className=\"mb-3\">Retailer List</h6>\r\n                                                                <Table className=\"table-sm table-bordered\">\r\n                                                                    <thead>\r\n                                                                        <tr>\r\n                                                                            <th>S.No</th>\r\n                                                                            <th>Refer Id</th>\r\n                                                                            <th>Name</th>\r\n                                                                            <th>Status</th>\r\n                                                                            <th>Wallet Balance</th>\r\n                                                                        </tr>\r\n                                                                    </thead>\r\n                                                                    <tbody>\r\n                                                                        {user.subUsers.length > 0 ? (\r\n                                                                            getPaginatedSubUsers(user.subUsers).map((subUser, index) => (\r\n                                                                                <tr key={subUser._id}>\r\n                                                                                    <td>{((subUsersPage - 1) * subUsersPerPage) + index + 1}</td>\r\n                                                                                    <td>{subUser.refer_id}</td>\r\n                                                                                    <td>{subUser.name}</td>\r\n                                                                                    <td>\r\n                                                                                        {subUser.is_approved ? (\r\n                                                                                            <span className=\"badge bg-success\">Approved</span>\r\n                                                                                        ) : (\r\n                                                                                            <span className=\"badge bg-warning text-dark\">Not Approved</span>\r\n                                                                                        )}\r\n                                                                                    </td>\r\n                                                                                    <td>{subUser.main_wallet || 0}</td>\r\n                                                                                </tr>\r\n                                                                            ))\r\n                                                                        ) : (\r\n                                                                            <tr>\r\n                                                                                <td colSpan=\"5\" className=\"text-center\">No data available</td>\r\n                                                                            </tr>\r\n                                                                        )}\r\n                                                                    </tbody>\r\n                                                                </Table>\r\n                                                                {/* {user.subUsers.length > subUsersPerPage && ( */}\r\n                                                                    <Pagination\r\n                                                                        current={subUsersPage}\r\n                                                                        total={user.subUsers.length}\r\n                                                                        pageSize={subUsersPerPage}\r\n                                                                        onChange={handleSubUsersPageChange}\r\n                                                                        showSizeChanger={false}\r\n                                                                        className=\"mt-3 justify-content-end\"\r\n                                                                    />\r\n                                                                {/* )} */}\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )}\r\n                                            </React.Fragment>\r\n                                        )) : (\r\n                                            <tr>\r\n                                                <td colSpan=\"6\" className=\"text-center\">No data available</td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </Table>\r\n                            ) : storedUserType === 'Distributor' ? (\r\n                                <Table className=\"table-hover\" id=\"dataTable\">\r\n                                    <thead className=\"bg-light\">\r\n                                        <tr>\r\n                                            <th>S.No</th>\r\n                                            <th>Refer ID</th>\r\n                                            <th>Name</th>\r\n                                            <th>Approved</th>\r\n\r\n                                            <th>Transfer</th>\r\n                                            <th>Reverse Transfer</th>\r\n                                            <th>Wallet Balance</th>\r\n                                            <th>Report</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {data.length > 0 ? data.map((user, index) => (\r\n                                            <tr>\r\n                                                <td>{index + 1 + (page * count)}</td>\r\n                                                <td>{user.refer_id}</td>\r\n                                                <td>{user.name}</td>\r\n                                                <td className={user.is_approved ? 'approvedstatusindownstrip' : 'pendingstatusindownstrip'}>\r\n                                                    {user.is_approved ? 'Approved' : 'Pending'}\r\n                                                </td>\r\n\r\n                                                <td>\r\n                                                    <Button variant=\"outline-primary\" size=\"sm\" onClick={() => handleTransferClick(user)}>\r\n                                                        Transfer Money\r\n                                                    </Button>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => handleReverseTransferClick(user)}>\r\n                                                        Reverse Transfer\r\n                                                    </Button>\r\n                                                </td>\r\n                                                <td>{user.main_wallet || 0}</td>\r\n                                                <td>\r\n                                                    <Button variant=\"link\" onClick={() => handleReportClick(user._id)}>\r\n                                                        <FaEye className=\"text-primary\" />\r\n                                                    </Button>\r\n                                                </td>\r\n                                            </tr>\r\n\r\n                                        )) : (\r\n                                            <tr>\r\n                                                <td colSpan=\"5\" className=\"text-center\">No data available</td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </Table>\r\n                            ) : (\r\n                                <div className=\"text-center\">No records available .</div>\r\n                            )}\r\n                        </div>\r\n                        {totalCount > 0 && (\r\n                            <Pagination\r\n                                current={currentPage}\r\n                                total={totalCount}\r\n                                pageSize={count}\r\n                                onChange={handlePageChange}\r\n                                showSizeChanger={false}\r\n                                className=\"mt-3 justify-content-end\"\r\n                            />\r\n                        )}\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n\r\n            <Modal style={{\r\n                zIndex: 1050,\r\n\r\n            }} show={showTransferModal} onHide={handleCloseTransferModal} onKeyDown={handleTransferModalKeyDown}>\r\n                <Modal.Header closeButton className='d-flex justify-content-between'>\r\n                    <Modal.Title>Transfer Money</Modal.Title>\r\n                    <span id=\"baldiv\" style={{ marginLeft: '20%' }}>\r\n                        Balance: {Math.max(0, (walletData?.main_wallet || 0) - (walletlockdata?.locking_amt || 0))}\r\n                    </span>\r\n\r\n                </Modal.Header>\r\n                <Modal.Body style={{\r\n                    backgroundColor: '#ffffff',\r\n                    transform: 'translateZ(0)',\r\n                    backfaceVisibility: 'hidden',\r\n                }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Refer ID</Form.Label>\r\n                            <Form.Control type=\"text\" value={selectedUser?.refer_id || ''} readOnly />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" value={selectedUser?.name || ''} readOnly />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Mobile</Form.Label>\r\n                            <Form.Control type=\"text\" value={selectedUser?.mobile || ''} readOnly />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Amount</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Enter amount (minimum 100)\"\r\n                                required\r\n                                value={transferAmount}\r\n                                onChange={handleTransferAmountChange}\r\n                            />\r\n                            {!isTransferValid && transferAmount !== '' && (\r\n                                <Form.Text className=\"text-danger\">\r\n                                    {Number(transferAmount) < 100\r\n                                        ? 'Amount must be at least 100 rupees'\r\n                                        : 'Insufficient balance'}\r\n                                </Form.Text>\r\n                            )}\r\n                        </Form.Group>\r\n                        <div className='text-center'>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                onClick={() => {\r\n                                    if (Number(transferAmount) < 100) {\r\n                                        toast.error('Amount must be at least 100 rupees');\r\n                                    } else {\r\n                                        setShowTransferModal(false);\r\n                                        setShowTpinModal(true);\r\n                                    }\r\n                                }}\r\n                                disabled={!isTransferValid}\r\n                            >\r\n                                Transfer\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal style={{\r\n                zIndex: 1050,\r\n\r\n            }} show={showTpinModal} onHide={handleCloseTpinModal} onKeyDown={handleTpinModalKeyDown}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Enter TPIN</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body style={{\r\n                    backgroundColor: '#ffffff',\r\n                    transform: 'translateZ(0)',\r\n                    backfaceVisibility: 'hidden',\r\n                }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>TPIN</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Enter your TPIN\"\r\n                                value={tpin}\r\n                                onChange={(e) => {\r\n                                    const newValue = e.target.value.replace(/[^0-9]/g, '').slice(0, 4);\r\n                                    setTpin(newValue);\r\n                                    setMaskedTpin('*'.repeat(newValue.length));\r\n                                }}\r\n                                maxLength={4}\r\n                            />\r\n                            {locationError && <Form.Text className=\"text-danger\">{locationError}</Form.Text>}\r\n                            {tpinError && <Form.Text className=\"text-danger\">{tpinError}</Form.Text>}\r\n                        </Form.Group>\r\n                        <div className='text-center'>\r\n                            <Popconfirm\r\n                                title=\"Are you sure you want to transfer this money?\"\r\n                                onConfirm={handleTransferSubmit}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                                onCancel={() => setIsPopconfirmOpen(false)}\r\n\r\n                                open={isPopconfirmOpen}\r\n                                okButtonProps={{ disabled: tpin.length !== 4 || locationError }}\r\n                            >\r\n                                <Button onClick={() => setIsPopconfirmOpen(true)} variant=\"primary\" disabled={tpin.length !== 4 || locationError}>\r\n                                    Submit\r\n                                </Button>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n\r\n            <Modal show={showReverseTransferModal} onHide={handleCloseReverseTransferModal} onKeyDown={handleReverseTransferModalKeyDown} style={{\r\n                zIndex: 1050,\r\n\r\n            }} >\r\n                <Modal.Header closeButton className='d-flex justify-content-between'>\r\n                    <Modal.Title>Reverse Transfer</Modal.Title>\r\n                    <span id=\"baldiv\" style={{ marginLeft: '20%' }}>\r\n                        Balance: {selectedUser?.main_wallet || 0}\r\n                    </span>\r\n                </Modal.Header>\r\n                <Modal.Body style={{\r\n                    backgroundColor: '#ffffff',\r\n                    transform: 'translateZ(0)',\r\n                    backfaceVisibility: 'hidden',\r\n                }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Refer ID</Form.Label>\r\n                            <Form.Control type=\"text\" value={selectedUser?.refer_id || ''} readOnly />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" value={selectedUser?.name || ''} readOnly />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Mobile</Form.Label>\r\n                            <Form.Control type=\"text\" value={selectedUser?.mobile || ''} readOnly />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Amount</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Enter amount (minimum 100)\"\r\n                                required\r\n                                value={reverseTransferAmount}\r\n                                onChange={handleReverseTransferAmountChange}\r\n                            />\r\n                            {Number(reverseTransferAmount) > Number(selectedUser?.main_wallet) && (\r\n                                <Form.Text className=\"text-danger\">\r\n                                    Insufficient balance\r\n                                </Form.Text>\r\n                            )}\r\n                            {Number(reverseTransferAmount) < 100 && reverseTransferAmount !== '' && (\r\n                                <Form.Text className=\"text-danger\">\r\n                                    Amount must be at least 100 rupees\r\n                                </Form.Text>\r\n                            )}\r\n                        </Form.Group>\r\n                        <div className='text-center'>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                onClick={() => {\r\n                                    setShowReverseTransferModal(false);\r\n                                    setShowReverseTpinModal(true);\r\n\r\n                                }}\r\n                                disabled={Number(reverseTransferAmount) > Number(selectedUser?.main_wallet) || Number(reverseTransferAmount) < 100}\r\n                            >\r\n                                Reverse Transfer\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal show={showReverseTpinModal} onHide={handleCloseReverseTpinModal} onKeyDown={handleReverseTpinModalKeyDown} style={{\r\n                zIndex: 1050,\r\n\r\n            }}  >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Enter TPIN for Reverse Transfer</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body style={{\r\n                    backgroundColor: '#ffffff',\r\n                    transform: 'translateZ(0)',\r\n                    backfaceVisibility: 'hidden',\r\n                }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>TPIN</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Enter your TPIN\"\r\n                                value={tpin}\r\n                                onChange={(e) => {\r\n                                    const newValue = e.target.value.replace(/[^0-9]/g, '').slice(0, 4);\r\n                                    setTpin(newValue);\r\n                                    setMaskedTpin('*'.repeat(newValue.length));\r\n                                }}\r\n                                maxLength={4}\r\n                            />\r\n                            {locationError && <Form.Text className=\"text-danger\">{locationError}</Form.Text>}\r\n                            {tpinError && <Form.Text className=\"text-danger\">{tpinError}</Form.Text>}\r\n                        </Form.Group>\r\n                        <div className='text-center'>\r\n                            <Popconfirm\r\n                                title=\"Are you sure you want to reverse transfer this money?\"\r\n                                onConfirm={handleReverseTransferSubmit}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n\r\n                                onCancel={() => setIsPopconfirmOpen(false)}\r\n\r\n                                open={isPopconfirmOpen}\r\n                                okButtonProps={{ disabled: tpin.length !== 4 || locationError }}\r\n                            >\r\n                                <Button onClick={() => setIsPopconfirmOpen(true)} variant=\"primary\" disabled={tpin.length !== 4 || locationError}>\r\n                                    Submit\r\n                                </Button>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* <div className={`modal fade modal-cssclasss mediaqurymodalpop ${showOtpModal ? 'show d-block' : ''}`} tabIndex=\"-1\" role=\"dialog\">\r\n                <div className=\"modal-dialog\" role=\"document\" style={{\r\n                    zIndex: 1050,\r\n\r\n                }} >\r\n                    <div className=\"modal-content modal-content-otp\">\r\n                        <div className=\"modal-header text-center\">\r\n                            <h5 className=\"modal-title modaltitle-otp\">OTP Verification</h5>\r\n\r\n                            <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={handleCloseOtpModal}></button>\r\n                        </div>\r\n                        <div className=\"modal-body\" style={{\r\n                            backgroundColor: '#ffffff',\r\n                            transform: 'translateZ(0)',\r\n                            backfaceVisibility: 'hidden',\r\n                        }}>\r\n                            {isTimerEnded ? (\r\n                                <>\r\n                                    <p>We've sent a 6-digit verification code to your mobile number, please enter it here!</p>\r\n                                    <button type=\"button\" className=\"btn btn-resend-otp\" onClick={handleResendOTP}>\r\n                                        {resendLoading ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : 'Resend OTP'}\r\n                                    </button>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <p>We've sent a 6-digit verification code to your mobile number, please enter it here!</p>\r\n                                    <div className=\"verification-timer\">OTP expires in {timeLeft} <span className=\"resend-otp\" onClick={handleResendOTP}>Resend OTP</span></div>\r\n                                    <div className=\"otp-inputs\">\r\n                                        {otp1.map((value, index) => (\r\n                                            <input\r\n                                                key={index}\r\n                                                type=\"passwordr\"\r\n                                                maxLength=\"1\"\r\n                                                value={value}\r\n                                                onChange={(e) => otpChandleChange1(index, e.target.value)}\r\n                                                onKeyDown={(e) => {\r\n\r\n                                                    handleOtpKeyDown(e, index);\r\n                                                }}\r\n                                                ref={(input) => (inputs1.current[index] = input)}\r\n                                                className=\"otp-input\"\r\n                                            />\r\n                                        ))}\r\n                                    </div>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-submit-otp\"\r\n                                        onClick={(e) => handleSubmitOTP(e)}\r\n                                        disabled={!isAllInputsFilled || otpLoading}\r\n                                    >\r\n                                        {otpLoading ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : 'Submit OTP'}\r\n                                    </button>\r\n                                    {otpMessage && <div className=\"alert alert-success mt-3\">{otpMessage}</div>}\r\n                                    {otpError && <div className=\"alert alert-danger mt-3\">{otpError}</div>}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n              {/* {showOtpPage && (\r\n        <OtpVerificationPage\r\n          userId={selectedUserId}\r\n          onClose={() => setShowOtpPage(false)}\r\n          \r\n        />\r\n      )} */}\r\n     \r\n      <OtpVerificationPage\r\n        open={showOtpModal}\r\n        userId={storetoken}\r\n        onClose={handleCloseOtpModal} // Corrected function call\r\n        longitude={longitude}\r\n        latitude={latitude}\r\n        transferAmount={reverseTransferAmount}\r\n      />\r\n   \r\n\r\n\r\n          \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Userlist;\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { verifyotprevsertrans, generateOtpForResendReverseTpin } from \"../../../api/login/Login\";\r\nimport { toast } from 'react-toastify';\r\nimport \"./Userlist.css\";\r\nconst OtpVerificationPage = ({ userId, onClose, longitude, latitude, transferAmount ,open, walletShowHeader ,fetchData,resetModalStates}) => {\r\n  const [otp, setOtp] = useState(new Array(6).fill(''));\r\n  const [timeLeft, setTimeLeft] = useState(120);\r\n  const [isTimerEnded, setIsTimerEnded] = useState(false);\r\n  const [resendLoading, setResendLoading] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const inputs = useRef([]);\r\n  const timerRef = useRef(null);\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const startTimer = useCallback(() => {\r\n    if (timerRef.current) clearInterval(timerRef.current);\r\n    \r\n    setTimeLeft(120);\r\n    setIsTimerEnded(false);\r\n\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft((prevTime) => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(timerRef.current);\r\n          setIsTimerEnded(true);\r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const resetTimer = useCallback(() => {\r\n    if (timerRef.current) clearInterval(timerRef.current);\r\n    setTimeLeft(0);\r\n    setIsTimerEnded(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      startTimer();\r\n    } else {\r\n      resetTimer();\r\n    }\r\n    return () => clearInterval(timerRef.current);\r\n  }, [open, startTimer, resetTimer]);\r\n\r\n  const handleClose = useCallback(() => {\r\n    resetTimer();\r\n    setOtp(new Array(6).fill(''));\r\n    setMessage('');\r\n    setError('');\r\n    onClose();\r\n  }, [onClose, resetTimer]);\r\n\r\n  const otpHandleChange = useCallback((index, value) => {\r\n    const newOtp = [...otp];\r\n    newOtp[index] = value.slice(0, 1);\r\n    setOtp(newOtp);\r\n\r\n    if (value && index < 5 && inputs.current[index + 1]) {\r\n      inputs.current[index + 1].focus();\r\n    }\r\n  }, [otp]);\r\n\r\n  const handleKeyDown = useCallback((e, index) => {\r\n    if (e.key === 'Backspace' && !otp[index] && index > 0) {\r\n      // Move focus to the previous input and clear its value\r\n      const newOtp = [...otp];\r\n      newOtp[index - 1] = '';\r\n      setOtp(newOtp);\r\n      inputs.current[index - 1].focus();\r\n    }\r\n  }, [otp]);\r\n\r\n  const handleResendOTP = useCallback(async () => {\r\n    setResendLoading(true);\r\n    setError('');\r\n    setMessage('');\r\n\r\n    try {\r\n      const response = await generateOtpForResendReverseTpin({ token: userId, amount: Number(transferAmount), });\r\n      if (response.status == 200) {\r\n        setMessage('OTP has been resent successfully.');\r\n        startTimer();\r\n        setOtp(new Array(6).fill(''));\r\n      } else {\r\n        setError('Failed to resend OTP.');\r\n      }\r\n    } catch (error) {\r\n      setError('Failed to resend OTP.');\r\n    } finally {\r\n      setResendLoading(false);\r\n    }\r\n  }, [userId, startTimer, transferAmount]);\r\n\r\n  const handleSubmitOTP = useCallback(async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    setError('');\r\n\r\n    try {\r\n      const response = await verifyotprevsertrans({ \r\n        token: userId,\r\n        otp: otp.join(''),\r\n        lat: latitude,\r\n        long: longitude\r\n      });\r\n      if (response?.data?.statusCode == 200) {\r\n        setMessage(response?.data?.message  || 'OTP verified successfully.');\r\n        toast.success(response?.data?.message || 'OTP verified successfully.');\r\n        onClose(); \r\n        if (walletShowHeader) walletShowHeader();\r\n        if (fetchData) fetchData();\r\n      if (resetModalStates) resetModalStates();\r\n\r\n        // Call onClose to close the page/modal\r\n      } else {\r\n        setError(response?.data?.message ||  response?.data|| 'Failed to verify OTP.');\r\n        toast.error(response?.data?.message || response?.data || 'Failed to verify OTP.');\r\n      }\r\n    } catch (error) {\r\n      setError('Failed to verify OTP.');\r\n      toast.error('Failed to verify OTP.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [userId, otp, onClose, latitude, longitude]);\r\n\r\n  return (\r\n    <div className={`modal fade modal-cssclasss mediaqurymodalpop ${open ? 'show d-block' : ''}`} tabIndex=\"-1\" role=\"dialog\">\r\n    <div className=\"modal-dialog\" role=\"document\" style={{ zIndex: 1050 }}>\r\n      <div className=\"modal-content modal-content-otp\">\r\n        <div className=\"modal-header text-center\">\r\n          <h5 className=\"modal-title modaltitle-otp\">OTP Verification</h5>\r\n          <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={handleClose}></button>\r\n        </div>\r\n        <div className=\"modal-body\" style={{\r\n          backgroundColor: '#ffffff',\r\n          transform: 'translateZ(0)',\r\n          backfaceVisibility: 'hidden',\r\n        }}>\r\n          {isTimerEnded ? (\r\n            <>\r\n              <p>Please Enter 6-digit Code Sent To Your Registered Mobile Number!</p>\r\n              <button type=\"button\" className=\"btn btn-resend-otp\" onClick={handleResendOTP}>\r\n                {resendLoading ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : 'Resend OTP'}\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p>Please Enter 6-digit Code Sent To Your Registered Mobile Number!</p>\r\n              <div className=\"verification-timer\">Verification Code: {formatTime(timeLeft)} seconds <span className=\"resend-otp\"\r\n                //  style={{\r\n                //   cursor: isTimerEnded ? 'pointer' : 'default',\r\n                //   color: isTimerEnded ? 'blue' : 'gray',\r\n                //   pointerEvents: isTimerEnded ? 'auto' : 'none',\r\n                // }} \r\n              onClick={handleResendOTP}>Resend OTP</span></div>\r\n              <div className=\"otp-inputs\">\r\n                {otp.map((value, index) => (\r\n                  <input\r\n                    key={index}\r\n                    type=\"password\"\r\n                    maxLength=\"1\"\r\n                    value={value}\r\n                    onChange={(e) => otpHandleChange(index, e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, index)}\r\n                    ref={(input) => (inputs.current[index] = input)}\r\n                    className=\"otp-input\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-submit-otp\"\r\n                onClick={handleSubmitOTP}\r\n                disabled={otp.some(digit => digit === '') || loading}\r\n              >\r\n                {loading ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : 'Submit OTP'}\r\n              </button>\r\n              {message && <div className=\"alert alert-success mt-3\">{message}</div>}\r\n              {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpVerificationPage;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\n\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      };\n\n      // If IE11\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'button',\n        {\n          id: this.props.id,\n          className: this.props.className,\n          type: 'button',\n          onClick: this.handleDownload\n        },\n        this.props.buttonText\n      );\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\n\nexports.default = ReactHTMLTableToExcel;\n"],"names":["_ref","walletShowHeader","loading","setLoading","useState","data","setData","totalCount","setTotalCount","page","setPage","count","setCount","showTransferModal","setShowTransferModal","selectedUser","setSelectedUser","expandedUserId","setExpandedUserId","currentPage","setCurrentPage","navigate","useNavigate","transferAmount","setTransferAmount","walletData","setWalletData","filterData","setFilterData","userId","name","email","mobile","is_approved","refer_id","isTransferValid","setIsTransferValid","storedUserType","localStorage","getItem","storedUserTypeId","showTpinModal","setShowTpinModal","window","showReverseTpinModal","setShowReverseTpinModal","tpin","setTpin","tpinError","setTpinError","showReverseTransferModal","setShowReverseTransferModal","reverseTransferAmount","setReverseTransferAmount","showOtpModal","setShowOtpModal","otp","setOtp","timeLeft","setTimeLeft","isTimerEnded","setIsTimerEnded","resendLoading","setResendLoading","otpLoading","setOtpLoading","otpError","setOtpError","otpMessage","setOtpMessage","storetoken","setStoreToken","otp1","setOtp1","Array","fill","latitude","setLatitude","useRef","longitude","setLongitude","locationError","setLocationError","maskedTpin","setMaskedTpin","walletlockdata","setLockWAletData","isPopconfirmOpen","setIsPopconfirmOpen","subUsersPage","setSubUsersPage","getCurrentLocation","map","_","userIndex","_id","concat","main_wallet","subUsers","Math","floor","random","subIndex","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","error","includes","console","log","useEffect","fetchData","async","_response","_response$data","_response2","_response2$data","response","getDownstreamList","toast","handleTransferClick","user","handleSubUsersPageChange","newPage","getPaginatedSubUsers","startIndex","endIndex","slice","walletShow","_res$data","res","WalletsShow","_res$data2","Getprofile","getDataProfile","handleReverseTransferClick","resetModalStates","handleReportClick","_jsxs","_Fragment","children","_jsx","Loader","className","Card","Body","Table","id","length","index","React","Button","variant","onClick","updatedData","_response$data2","handleUserClick","FaChevronUp","FaChevronDown","size","FaEye","colSpan","subUser","Pagination","current","total","pageSize","onChange","showSizeChanger","Modal","style","zIndex","show","onHide","handleCloseTransferModal","onKeyDown","e","key","preventDefault","Number","Header","closeButton","Title","marginLeft","max","locking_amt","backgroundColor","transform","backfaceVisibility","Form","Group","Label","Control","type","value","readOnly","placeholder","required","amount","target","Text","disabled","handleCloseTpinModal","newValue","replace","repeat","maxLength","Popconfirm","title","onConfirm","fundtransferToRefer","transferTo","trans_type","lat","long","statusCode","success","_response$data5","_response$data6","message","okText","cancelText","onCancel","open","okButtonProps","handleCloseReverseTransferModal","handleCloseReverseTpinModal","token","_response$data3","_response$data4","OtpVerificationPage","onClose","handleCloseOtpModal","setMessage","setError","inputs","timerRef","startTimer","useCallback","clearInterval","setInterval","prevTime","resetTimer","handleClose","otpHandleChange","newOtp","focus","handleKeyDown","handleResendOTP","generateOtpForResendReverseTpin","status","handleSubmitOTP","verifyotprevsertrans","join","tabIndex","role","seconds","minutes","remainingSeconds","toString","padStart","formatTime","ref","input","some","digit","_createClass","defineProperties","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","Constructor","protoProps","staticProps","prototype","_react","require","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","table","string","isRequired","filename","sheet","buttonText","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","bind","subClass","superClass","create","constructor","setPrototypeOf","_inherits","document","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","msSaveOrOpenBlob","blobObject","Blob","click","element","createElement","href","base64","format","download","body","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","m","p","Component","defaultProps","exports"],"sourceRoot":""}