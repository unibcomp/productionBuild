{"version":3,"file":"static/js/2897.df120f67.chunk.js","mappings":"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","sources":["components/admin/package/packageHistory/PackageHistory.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-html-table-to-excel/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js"],"sourcesContent":["// import { Pagination } from \"antd\"\r\n// import { useEffect, useState } from \"react\"\r\n// import ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\n// import Loader from \"../../../../common/loader/Loader\";\r\n// import { packList, packageHistory, packageHistoryAll} from \"../../../../api/login/Login\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// function PackageHistory() {\r\n//     const getCurrentDate = () => {\r\n//         const today = new Date();\r\n//         return today.toISOString().substr(0, 10);\r\n//     };\r\n\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [count, setCount] = useState(10)\r\n//     const [page, setPage] = useState(0)\r\n//     const [totalCount, setTotalCount] = useState(null)\r\n//     const [data, setData] = useState([]);\r\n//     const [allData, setAllData] = useState([])\r\n//     const [DataPackage, setDataPackage] = useState([])\r\n//     const [currentDate, setCurrentDate] = useState(getCurrentDate());\r\n\r\n//     const [filterInitial, setFilterInitial] = useState({\r\n//         user_id: window.localStorage.getItem('userIdToken'),\r\n//         count: 10,\r\n//         page: 0,\r\n//         end_date: getCurrentDate(),\r\n//         start_date: getCurrentDate(),\r\n//         sortKey: '',\r\n//         sortType: '',\r\n//         package_id: ''\r\n//     })\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFilterInitial(prev => ({ ...prev, [name]: value }));\r\n//     }\r\n\r\n//     const packageList = async () => {\r\n//         try {\r\n//             const res = await packList()\r\n//             setDataPackage(Array.isArray(res?.data?.data) ? res.data.data : [])\r\n//         } catch (error) {\r\n//             setDataPackage([])\r\n//         }\r\n//     }\r\n\r\n//     const getTransitionReport = async (input = 0) => {\r\n//         setLoading(true)\r\n//         const params = {\r\n//             ...filterInitial,\r\n//             page: input,\r\n//             count: count\r\n//         }\r\n//         try {\r\n//             const res = await packageHistory(params)\r\n//             setTotalCount(res?.data?.totalCount || 0)\r\n//             setData(Array.isArray(res?.data?.data) ? res.data.data : [])\r\n//         } catch (error) {\r\n//             console.error(\"error\", error)\r\n//             setData([])\r\n//         }\r\n//         setLoading(false)\r\n//     }\r\n\r\n//     const getAllData = async () => {\r\n//         setLoading(true)\r\n//         try {\r\n//             const res = await packageHistoryAll(filterInitial)\r\n//             setAllData(Array.isArray(res?.data?.data) ? res.data.data : [])\r\n//         } catch (error) {\r\n//             console.error(\"error fetching all data\", error)\r\n//             setAllData([])\r\n//         }\r\n//         setLoading(false)\r\n//     }\r\n\r\n//     const onChangeVal = (e) => {\r\n//         setPage(e - 1)\r\n//         getTransitionReport(e - 1)\r\n//     };\r\n\r\n//     const ResetData = () => {\r\n//         const resetFilter = {\r\n//             ...filterInitial,\r\n//             end_date: '',\r\n//             start_date: '',\r\n//             package_id: '',\r\n//         }\r\n//         setFilterInitial(resetFilter)\r\n//         getTransitionReport(0)\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         packageList();\r\n//         getTransitionReport();\r\n//         getAllData();\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         getTransitionReport()\r\n//         getAllData()\r\n//     }, [filterInitial.start_date, filterInitial.end_date])\r\n//     console.group(\"data\",data)\r\n//     const handleExcelDownload = (e) => {\r\n//         if (allData.length === 0) {\r\n//             e.preventDefault();\r\n//             alert(\"No data available to download. Please adjust your filters and try again.\");\r\n//         }\r\n//     }\r\n\r\n\r\n\r\n//     return (\r\n//         <>\r\n//             {loading && <Loader />}\r\n//             <div className=\"PageHeading\">\r\n//                 <h1>Package History</h1>\r\n//             </div>\r\n//             <div className=\"ContentArea\">\r\n//                 <div className=\"card\">\r\n//                     <div className=\"card-header\"> {/* <span>Filter</span> */}</div>\r\n//                     <div className=\"card-body\">\r\n//                         <form action=\"\" method=\"post\" name=\"frmReport\" id=\"frmReport\">\r\n//                             <input type=\"hidden\" id=\"hidID\" name=\"hidID\" />\r\n//                             <div className=\"form-row\" style={{ alignItems: 'end' }}>\r\n//                                 <div className=\"form-group col-md-4\">\r\n//                                     <label htmlFor=\"txtUserId\">Start Date</label>\r\n//                                     <input\r\n//                                         type=\"date\"\r\n//                                         name=\"start_date\"\r\n//                                         id=\"account_no\"\r\n//                                         className=\"form-control\"\r\n//                                         max={currentDate}\r\n//                                         value={filterInitial.start_date}\r\n//                                         onChange={handleChange}\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div className=\"form-group col-md-4\">\r\n//                                     <label htmlFor=\"txtUserId\">End Date</label>\r\n//                                     <input\r\n//                                         type=\"date\"\r\n//                                         name=\"end_date\"\r\n//                                         id=\"account_no\"\r\n//                                         max={currentDate}\r\n//                                         className=\"form-control\"\r\n//                                         value={filterInitial.end_date}\r\n//                                         onChange={handleChange}\r\n//                                     />\r\n//                                 </div>\r\n//                                 <div className=\"form-group col-md-4\">\r\n//                                     <label htmlFor=\"txtUserId\">Package</label>\r\n//                                     <select className=\"form-select\" name=\"package_id\" value={filterInitial.package_id} onChange={handleChange}>\r\n//                                         <option value=\"\">Select Package</option>\r\n//                                         {Array.isArray(DataPackage) && DataPackage.length > 0 ? (\r\n//                                             DataPackage.map((item) => (\r\n//                                                 <option key={item?._id} value={item?._id}>{item?.package_name}</option>\r\n//                                             ))\r\n//                                         ) : (\r\n//                                             <option disabled>No packages available</option>\r\n//                                         )}\r\n//                                     </select>\r\n//                                 </div>\r\n\r\n//                                 <div className=\"form-group col-md-2\">\r\n//                                     <label>&nbsp;</label>\r\n//                                     <button type=\"button\" className=\"btn btn-primary mr-3\" onClick={() => getTransitionReport(0)}>Search</button>\r\n//                                     <button type=\"button\" className=\"btn btn-light\" onClick={ResetData}>Reset</button>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </form>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"card mt-4\" style={{ overflow: 'auto' }}>\r\n//                     <div className=\"card-body\">\r\n//                         <div id=\"myTable_wrapper\" className=\"dataTables_wrapper no-footer\">\r\n//                             <div className=\"d-flex justify-content-between align-items-center\">\r\n//                                 <div className=\"dataTables_length mb-3\" id=\"myTable_length\">\r\n//                                     <ReactHTMLTableToExcel\r\n//                                         id=\"test-table-xls-button\"\r\n//                                         className=\"download-table-xls-button btn btn-success cusxel\"\r\n//                                         table=\"table-to-xlsx\"\r\n//                                         filename=\"tablexls\"\r\n//                                         sheet=\"tablexls\"\r\n//                                         buttonText=\"Download Excel sheet\"\r\n//                                         onClick={handleExcelDownload} />\r\n//                                 </div>\r\n//                             </div>\r\n//                             <table id=\"table-to-xlsx\" style={{ display: 'none' }}>\r\n//                                 <thead>\r\n//                                     <tr>\r\n//                                         <th>Date / Time</th>\r\n//                                         <th>Duration</th>\r\n//                                         <th>Duration Type</th>\r\n//                                         <th>Package Name</th>\r\n//                                         <th>MRP</th>\r\n//                                         <th>Purchase Amount</th>\r\n//                                         <th>Tax</th>\r\n//                                         <th>Tax Type</th>\r\n//                                     </tr>\r\n//                                 </thead>\r\n//                                 <tbody>\r\n//                                     {allData.map((item, index) => (\r\n//                                         <tr key={index}>\r\n//                                             <td>{new Date(item?.createdAt).toLocaleString()}</td>\r\n//                                             <td>{item?.duration}</td>\r\n//                                             <td>{item?.duration_type}</td>\r\n//                                             <td>{item?.package_name}</td>\r\n//                                             <td>{item?.mrp}</td>\r\n//                                             <td>{item?.amount}</td>\r\n//                                             <td>{item?.tax}</td>\r\n//                                             <td>{item?.tax_type}</td>\r\n//                                         </tr>\r\n//                                     ))}\r\n//                                 </tbody>\r\n//                             </table>\r\n//                             <div id=\"myTable_processing\" className=\"dataTables_processing\" style={{ display: 'none' }}>Processing...</div>\r\n//                             <table className=\"table table-striped table-bordered table-hover display dataTable no-footer dtr-inline collapsed\" role=\"grid\" aria-describedby=\"myTable_info\" >\r\n//                                 <thead>\r\n//                                     <tr role=\"row\">\r\n//                                         <th className=\"sorting\">S.No</th>\r\n//                                         <th className=\"sorting\">Date / Time</th>\r\n//                                         <th className=\"sorting\">Duration</th>\r\n//                                         <th className=\"sorting\">Duration Type</th>\r\n//                                         <th className=\"sorting\">Package Name</th>\r\n//                                         <th className=\"sorting\">MRP</th>\r\n//                                         <th className=\"sorting\">Purchase Amount</th>\r\n//                                         <th className=\"sorting\">Tax</th>\r\n//                                         <th className=\"sorting\">Tax Type</th>\r\n//                                         <th className=\"sorting\">Transaction Dispute</th>\r\n//                                     </tr>\r\n//                                 </thead>\r\n//                                 <tbody>\r\n//                                     {Array.isArray(data) && data.length > 0 ? (\r\n//                                         data.map((item, i) => (\r\n//                                             <tr className=\"odd\" key={item?._id}>\r\n//                                                 <td valign=\"top\" className=\"dataTables_empty\">{(i + 1) + (page * count)}</td>\r\n//                                                 <td valign=\"top\" className=\"dataTables_empty\">\r\n//                                                     {new Date(item?.createdAt).getDate() + \"-\" +\r\n//                                                         Number(new Date(item?.createdAt).getMonth() + 1) + \"-\" +\r\n//                                                         new Date(item?.createdAt).getFullYear() + \" / \" +\r\n//                                                         new Date(item?.createdAt).getHours() + \":\" +\r\n//                                                         new Date(item?.createdAt).getMinutes()}\r\n//                                                 </td>\r\n//                                                 <td valign=\"top\" className=\"dataTables_empty\">{item?.duration}</td>\r\n//                                                 <td valign=\"top\" className=\"dataTables_empty\">{item?.duration_type}</td>\r\n//                                                 <td valign=\"top\" className=\"dataTables_empty\">{item?.package_name}</td>\r\n//                                                 <td valign=\"top\" className=\"dataTables_empty\">{item?.mrp}</td>\r\n//                                                 <td valign=\"top\" className=\"dataTables_empty\">{item?.amount}</td>\r\n//                                                 <td valign=\"top\" className=\"dataTables_empty\">{item?.tax}</td>\r\n//                                                 <td valign=\"top\" className=\"dataTables_empty\">{item?.tax_type}</td>\r\n//                                                 <td valign=\"top\" className=\"dataTables_empty\">\r\n//                                                     <Link className=\"btn btn-primary\" to={`/add-ticket/${item?._id}`} state={{ item, serviceId: '65f9484a26eb74e182c640fc' }}>Dispute</Link>\r\n//                                                 </td>\r\n//                                             </tr>\r\n//                                         ))\r\n//                                     ) : (\r\n//                                         <tr>\r\n//                                             <td colSpan=\"9\" className=\"text-center\">No data available</td>\r\n//                                         </tr>\r\n//                                     )}\r\n//                                 </tbody>\r\n//                             </table>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"dataTables_info_page\">\r\n//                     <div className=\"dataTables_info\" id=\"empoloyees-tblwrapper_info\" role=\"status\" aria-live=\"polite\">\r\n//                         Total {totalCount} entries\r\n//                     </div>\r\n//                     <div className=\"dataTables_paginate paging_simple_numbers\" id=\"empoloyees-tblwrapper_paginate\">\r\n//                         <Pagination\r\n//                             onChange={onChangeVal}\r\n//                             total={totalCount}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default PackageHistory\r\n\r\nimport { Pagination, Button, Select ,message} from \"antd\";\r\nimport { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport Loader from \"../../../../common/loader/Loader\";\r\nimport { packList, packageHistory, packageHistoryAll, userPackList } from \"../../../../api/login/Login\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction PackageHistory() {\r\n    const getCurrentDate = () => {\r\n        const today = new Date();\r\n        return today.toISOString().substr(0, 10);\r\n    };\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [count, setCount] = useState(10);\r\n    const [page, setPage] = useState(0);\r\n    const [totalCount, setTotalCount] = useState(null);\r\n    const [data, setData] = useState([]);\r\n    const [allData, setAllData] = useState([]);\r\n    const [dataPackage, setDataPackage] = useState([]);\r\n    const [currentDate] = useState(getCurrentDate());\r\n    const currentCount = useRef(10);\r\n    const [handleKey , setHandleKey] = useState(false)\r\n    const [excelData, setExcelData] = useState(null);\r\n    const [filterInitial, setFilterInitial] = useState({\r\n        user_id: window.localStorage.getItem('userIdToken'),\r\n        count: 10,\r\n        page: 0,\r\n        end_date: getCurrentDate(),\r\n        start_date: getCurrentDate(),\r\n        sortKey: '',\r\n        sortType: '',\r\n        package_name:'',\r\n        amount:'',\r\n        package_id: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFilterInitial(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const packageList = async () => {\r\n        try {\r\n            const res = await userPackList();\r\n            \r\n            setDataPackage(Array.isArray(res?.data?.data) ? res.data.data : []);\r\n        } catch (error) {\r\n            setDataPackage([]);\r\n        }\r\n    };\r\n\r\n    const getTransitionReport = async (input = 0, newCount) => {\r\n        setLoading(true);\r\n        // const useCount = newCount !== undefined ? newCount : currentCount.current;\r\n        // const params = {\r\n        //     ...filterInitial\r\n        // };\r\n        try {\r\n            const res = await packageHistory(filterInitial);\r\n            setTotalCount(res?.data?.totalCount || 0);\r\n        \r\n            setData(Array.isArray(res?.data?.data) ? res.data.data : []);\r\n        } catch (error) {\r\n            console.error(\"error\", error);\r\n            setData([]);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const getAllData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await packageHistoryAll(filterInitial);\r\n            setAllData(Array.isArray(res?.data?.data) ? res.data.data : []);\r\n        } catch (error) {\r\n            console.error(\"error fetching all data\", error);\r\n            setAllData([]);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const onChangeVal = (e) => {\r\n        setPage(e - 1);\r\n        setFilterInitial(prev => ({ ...prev,  page: e-1 }));\r\n        setHandleKey((pre)=>!pre)\r\n        // getTransitionReport(e - 1);\r\n    };\r\n\r\n    const ResetData = () => {\r\n        const resetFilter = {\r\n            ...filterInitial,\r\n            end_date: '',\r\n            start_date: '',\r\n            package_id: '',\r\n            package_name:'',\r\n            amount:'',\r\n        };\r\n        setFilterInitial(resetFilter);\r\n        setHandleKey((pre)=>!pre)\r\n        setPage(0)\r\n        // setTimeout(()=>{\r\n\r\n        //     getTransitionReport(0);\r\n        // },100)\r\n    };\r\n\r\n    useEffect(() => {\r\n        packageList();\r\n        \r\n        // getAllData();\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        getTransitionReport()\r\n    },[page , handleKey])\r\n\r\n    // useEffect(() => {\r\n    //     getTransitionReport();\r\n    //     // getAllData();\r\n    // }, [filterInitial.start_date, filterInitial.end_date]);\r\n\r\n    const handleExcelDownload = (e) => {\r\n        if (allData.length === 0) {\r\n            e.preventDefault();\r\n            alert(\"No data available to download. Please adjust your filters and try again.\");\r\n        }\r\n    };\r\n\r\n    const handlePageSizeChange = (value) => {\r\n        // currentCount.current = value;\r\n        setCount(value);\r\n        setPage(0);\r\n        setFilterInitial(prev => ({ ...prev, count: value, page: 0 }));\r\n        setHandleKey((pre)=>!pre)\r\n        // getTransitionReport(0, value);\r\n    } ;\r\n\r\n    const prepareExcelDownload = async () => {\r\n        setLoading(true);\r\n        const clone = { ...filterInitial, count: count, page: page, user_id: window.localStorage.getItem('userIdToken') };\r\n        try {\r\n            const res = await packageHistoryAll(filterInitial);\r\n            const data = res?.data?.data;\r\n            \r\n            if (!data || data.length === 0) {\r\n                message.error(\"No data available to export.\");\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            setExcelData(Array.isArray(res?.data?.data) ? res.data?.data: []);\r\n            \r\n            // Use setTimeout to ensure the state is updated and the table is rendered\r\n            setTimeout(() => {\r\n                document.getElementById('test-table-xls-button').click();\r\n                setLoading(false);\r\n                message.success(\"Excel file download initiated.\");\r\n            }, 100);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error preparing data for export:\", error);\r\n            message.error(\"Failed to prepare data for export. Please try again.\");\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSearch = ()=> {\r\n     getTransitionReport(0)\r\n     setPage(0)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading && <Loader />}\r\n            <div className=\"PageHeading\">\r\n                <h1>Package History</h1>\r\n            </div>\r\n            <div className=\"ContentArea\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\"> {/* <span>Filter</span> */}</div>\r\n                    <div className=\"card-body\">\r\n                        <form name=\"frmReport\" id=\"frmReport\">\r\n                            <input type=\"hidden\" id=\"hidID\" name=\"hidID\" />\r\n                            <div className=\"form-row\" style={{ alignItems: 'end' }}>\r\n                                <div className=\"form-group col-md-4\">\r\n                                    <label htmlFor=\"start_date\">Start Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        name=\"start_date\"\r\n                                        className=\"form-control\"\r\n                                        max={currentDate}\r\n                                        value={filterInitial.start_date}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group col-md-4\">\r\n                                    <label htmlFor=\"end_date\">End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        name=\"end_date\"\r\n                                        className=\"form-control\"\r\n                                        max={currentDate}\r\n                                        value={filterInitial.end_date}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group col-md-4\">\r\n                                    <label htmlFor=\"package_id\">Package</label>\r\n                                    <select\r\n                                        className=\"form-select\"\r\n                                        name=\"package_id\"\r\n                                        value={filterInitial.package_id}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"\">Select Package</option>\r\n                                        {dataPackage.length > 0 ? (\r\n                                            dataPackage.map((item) => (\r\n                                                <option key={item?._id} value={item?.package_id}>\r\n                                                    {item?.package_name}\r\n                                                </option>\r\n                                            ))\r\n                                        ) : (\r\n                                            <option disabled>No packages available</option>\r\n                                        )}\r\n                                    </select>\r\n                                </div>\r\n                                {/* <div className=\"form-group col-md-4\">\r\n                                    <label htmlFor=\"end_date\">Package Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"package_name\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Enter Package Name\"\r\n                                        value={filterInitial.package_name}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </div> */}\r\n                                <div className=\"form-group col-md-4\">\r\n                                    <label htmlFor=\"end_date\">Amount</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"amount\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Enter Amount\"\r\n                                        value={filterInitial.amount}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group col-md-2\">\r\n                                    <label>&nbsp;</label>\r\n                                    <button type=\"button\" className=\"btn btn-secondary mr-3\" onClick={handleSearch}>Search</button>\r\n                                    <button type=\"button\" className=\"btn btn-light\" onClick={ResetData}>Reset</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card mt-4\" style={{ overflow: 'auto' }}>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"d-flex justify-content-end align-items-center\">\r\n                            <div className=\"dataTables_length mb-3\">\r\n                                <button\r\n                                onClick={prepareExcelDownload}\r\n                            style={{\r\n        backgroundColor: '#10b981',      // Modern green color\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '8px',\r\n        padding: '10px 24px',\r\n        fontSize: '15px',\r\n        fontWeight: '600',\r\n        cursor: 'pointer',\r\n        minWidth: '160px',\r\n        height: '42px',\r\n        transition: 'all 0.2s ease',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n        opacity: loading ? 0.7 : 1,      // Dimmed when loading\r\n        transform: loading ? 'none' : 'translateY(0)',\r\n        ':hover': {\r\n            backgroundColor: '#059669',   // Darker green on hover\r\n            transform: 'translateY(-1px)',\r\n        },\r\n        ':active': {\r\n            transform: 'translateY(0)',\r\n        },\r\n        ':disabled': {\r\n            backgroundColor: '#9ca3af',   // Gray when disabled\r\n            cursor: 'not-allowed'\r\n        }\r\n    }}\r\n>\r\n    {'Download Excel'}\r\n</button>\r\n                                <ReactHTMLTableToExcel\r\n                                    id=\"test-table-xls-button\"\r\n                                    className=\"download-table-xls-button d-none\"\r\n                                    table=\"table-to-xlsx\"\r\n                                    filename=\"Package Report\"\r\n                                    sheet=\"Sheet1\"\r\n                                    buttonText=\"Download Excel\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <table id=\"table-to-xlsx\" style={{ display: 'none' }}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Date / Time</th>\r\n                                    <th>Duration</th>\r\n                                    <th>Expiry Date</th>\r\n                                    <th>Duration Type</th>\r\n                                    <th>Package Name</th>\r\n                                    <th>MRP</th>\r\n                                    <th>Purchase Amount</th>\r\n                                    <th>Tax</th>\r\n                                    <th>Tax Type</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {excelData && excelData?.map((item, index) => (\r\n                                    <tr key={item?._id}>\r\n                                        <td>{new Date(item?.createdAt).toLocaleString()}</td>\r\n                                       \r\n                                        <td>{item?.duration}</td>\r\n                                        <td>{new Date(item?.expiryDate).toLocaleString()}</td>\r\n                                        <td>{item?.duration_type}</td>\r\n                                        <td>{item?.package_name}</td>\r\n                                        <td>{item?.mrp}</td>\r\n                                        <td>{item?.amount}</td>\r\n                                        <td>{item?.tax}</td>\r\n                                        <td>{item?.tax_type}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n\r\n\r\n\r\n                        <table className=\"table table-striped table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>S.No</th>\r\n                                    <th>Date / Time</th>\r\n                                    <th>Duration</th>\r\n                                    <th>Expiry Date</th>\r\n                                    <th>Duration Type</th>\r\n                                    <th>Package Name</th>\r\n                                    <th>MRP</th>\r\n                                    <th>Purchase Amount</th>\r\n                                    <th>Tax</th>\r\n                                    <th>Tax Type</th>\r\n                                    {/* <th>Transaction Dispute</th> */}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {data.length > 0 ? (\r\n                                    data.map((item, i) => \r\n                                        <tr key={i}>\r\n                                            <td>{(i + 1) + (page * count)}</td>\r\n                                            <td>\r\n                                                {new Date(item?.createdAt).toLocaleDateString() + \" / \" +\r\n                                                    new Date(item?.createdAt).toLocaleTimeString()}\r\n                                            </td>\r\n                                            <td>{item?.duration}</td>\r\n                                            <td>{new Date(item?.expiryDate).toLocaleString()}</td>\r\n                                            <td>{item?.duration_type}</td>\r\n                                            <td>{item?.package_name}</td>\r\n                                            <td>{item?.mrp}</td>\r\n                                            <td>{item?.amount}</td>\r\n                                            <td>{item?.tax}</td>\r\n                                            <td>{item?.tax_type}</td>\r\n                                            {/* <td>\r\n                                                <Link to=\"#\">Raise Dispute</Link>\r\n                                            </td> */}\r\n                                        </tr>\r\n                                    )\r\n                                ) : (\r\n                                    <tr>\r\n                                        <td colSpan={10} className=\"text-center\">No data available.</td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                            <Select\r\n                                // defaultValue={currentCount.current}\r\n                                value={count}\r\n                                onChange={handlePageSizeChange}\r\n                                options={[\r\n                                    { value: 10, label: '10 /pages' },\r\n                                    { value: 25, label: '25 /pages' },\r\n                                    { value: 50, label: '50 /pages' },\r\n                                    { value: 100, label: '100 /pages' },\r\n                                ]}\r\n                            />\r\n                            <Pagination\r\n                                total={totalCount}\r\n                                onChange={onChangeVal}\r\n                                // defaultCurrent={page + 1}\r\n                                current={page + 1}\r\n                                pageSize={count}\r\n                            />\r\n                        </div>\r\n                        <div className=\"dataTables_info pt-2\" id=\"empoloyees-tblwrapper_info\" role=\"status\" aria-live=\"polite\">\r\n                        Total {totalCount} entries\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n             \r\n            </div>\r\n\r\n           \r\n        </>\r\n    );\r\n}\r\n\r\nexport default PackageHistory;\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\n\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      };\n\n      // If IE11\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'button',\n        {\n          id: this.props.id,\n          className: this.props.className,\n          type: 'button',\n          onClick: this.handleDownload\n        },\n        this.props.buttonText\n      );\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\n\nexports.default = ReactHTMLTableToExcel;\n","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };"],"names":["getCurrentDate","Date","toISOString","substr","loading","setLoading","useState","count","setCount","page","setPage","totalCount","setTotalCount","data","setData","allData","setAllData","dataPackage","setDataPackage","currentDate","handleKey","setHandleKey","useRef","excelData","setExcelData","filterInitial","setFilterInitial","user_id","window","localStorage","getItem","end_date","start_date","sortKey","sortType","package_name","amount","package_id","handleChange","e","name","value","target","prev","getTransitionReport","async","_res$data2","_res$data3","res","packageHistory","Array","isArray","error","console","useEffect","_res$data","userPackList","packageList","_jsxs","_Fragment","children","_jsx","Loader","className","id","type","style","alignItems","htmlFor","max","onChange","length","map","item","_id","disabled","placeholder","onClick","handleSearch","ResetData","resetFilter","pre","overflow","_res$data5","_res$data6","_res$data7","packageHistoryAll","message","setTimeout","document","getElementById","click","success","backgroundColor","color","border","borderRadius","padding","fontSize","fontWeight","cursor","minWidth","height","transition","display","justifyContent","boxShadow","opacity","transform","ReactHTMLTableToExcel","table","filename","sheet","buttonText","index","createdAt","toLocaleString","duration","expiryDate","duration_type","mrp","tax","tax_type","i","toLocaleDateString","toLocaleTimeString","colSpan","Select","options","label","Pagination","total","current","pageSize","role","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_react","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","_Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","bind","subClass","superClass","create","constructor","setPrototypeOf","_inherits","nodeType","nodeName","outerHTML","String","context","worksheet","navigator","msSaveOrOpenBlob","blobObject","Blob","createElement","href","base64","format","download","body","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","Component","defaultProps","_objectWithoutPropertiesLoose","r","t","n","hasOwnProperty","includes","_setPrototypeOf"],"sourceRoot":""}