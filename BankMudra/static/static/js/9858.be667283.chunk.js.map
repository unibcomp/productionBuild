{"version":3,"file":"static/js/9858.be667283.chunk.js","mappings":"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","sources":["components/admin/aepsOnboarding/authResister/AuthResister.js","components/admin/aepsOnboarding/bankPermission/BankPermission.js","components/admin/aepsOnboarding/dailyAuth/DailyAuth.js","components/admin/aepsOnboarding/permissionAepsOnboarding/PermissionAepsOnboarding.js","components/admin/aepsOnboarding/suggetsOnboarding/Instanpayonboarding.js","components/admin/aepsOnboarding/suggetsOnboarding/SuggestOnboarding.js","pages/admin/aepsOnboarding/Bank4aepsverify.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Snackbar, Alert } from \"@mui/material\";\r\n\r\nimport img1 from '../../../../asesets/logo/finger_success.gif';\r\nimport { capturefingerprint } from \"../../../../common/fingurePrintJs/FingurePrint\";\r\nimport { bankResiter } from \"../../../../api/login/Login\";\r\nimport Loader from \"../../../../common/loader/Loader\";\r\n\r\nimport imgg1 from '../../../../asesets/Devices/iris.png';\r\nimport imgg2 from '../../../../asesets/Devices/mantra.png';\r\nimport imgg3 from '../../../../asesets/Devices/mantral1.png';\r\nimport imgg4 from '../../../../asesets/Devices/morpho.png';\r\nimport imgg5 from '../../../../asesets/Devices/morphol1.png';\r\nimport imgg6 from '../../../../asesets/Devices/precision.png';\r\nimport imgg7 from '../../../../asesets/Devices/sequgen.png';\r\nimport imgg8 from '../../../../asesets/Devices/startrek.png';\r\nimport imgg9 from '../../../../asesets/Devices/startrekl1.png';\r\n\r\nconst mockData = [\r\n    { id: '1', image: imgg1 },\r\n    { id: '2', image: imgg2 },\r\n    { id: '3', image: imgg3 },\r\n    { id: '4', image: imgg4 },\r\n    { id: '5', image: imgg5 },\r\n    { id: '6', image: imgg6 },\r\n    { id: '7', image: imgg7 },\r\n    { id: '8', image: imgg8 },\r\n    { id: '9', image: imgg9 },\r\n];\r\n\r\nfunction AuthRegister({onDailyAuthComplete,apiAepsType }) {\r\n    const [position, setPosition] = useState({ latitude: null, longitude: null });\r\n    const [loader, setLoader] = useState(false);\r\n    const [snackbar, setSnackbar] = useState({\r\n        open: false,\r\n        message: '',\r\n        severity: 'success'\r\n    });\r\n\r\n    const [initialAuth, setInitialAuth] = useState({\r\n        accessmodetype: \"APP\",\r\n        latitude: \"\",\r\n        longitude: \"\",\r\n        data: \"\",\r\n        ipaddress: \"\",\r\n        user_id: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (\"geolocation\" in navigator) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    setPosition({\r\n                        latitude: position.coords.latitude,\r\n                        longitude: position.coords.longitude,\r\n                    });\r\n                },\r\n                () => {\r\n                    showSnackbar(\"Location not found. Please enable location and refresh the page.\", \"error\");\r\n                }\r\n            );\r\n        } else {\r\n            showSnackbar(\"Geolocation is not available in your browser.\", \"error\");\r\n        }\r\n    }, []);\r\n\r\n\r\n    const showSnackbar = (message, severity = 'success') => {\r\n        setSnackbar({ open: true, message, severity });\r\n    };\r\n\r\n    const handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbar({ ...snackbar, open: false });\r\n    };\r\n    const captureFingerprint = () => {\r\n        if (!position.latitude || !position.longitude) {\r\n            showSnackbar('Cannot capture fingerprint without location. Please enable location and refresh.', 'error');\r\n            return;\r\n        }\r\n        setLoader(true);\r\n        try {\r\n            console.log('Initializing fingerprint capture');\r\n            new capturefingerprint('http://127.0.0.1:11100/rd/capture', handleFingerprintResult);\r\n        } catch (error) {\r\n            console.error('Error in captureFingerprint:', error);\r\n            showSnackbar('Error capturing fingerprint', 'error');\r\n            setLoader(false);\r\n        }\r\n    };\r\n    \r\n    const handleFingerprintResult = (data) => {\r\n        setLoader(false);\r\n        console.log('Received data:', data);\r\n    \r\n        if (!data) {\r\n            console.error('No data received in handleFingerprintResult function');\r\n            showSnackbar('Error: No data received from fingerprint capture', 'error');\r\n            return;\r\n        }\r\n    \r\n        if (typeof data !== 'object') {\r\n            console.error('Invalid data type received:', typeof data);\r\n            showSnackbar('Error: Invalid data received from fingerprint capture', 'error');\r\n            return;\r\n        }\r\n    \r\n        const prolog = data.pid_data;\r\n        if (!prolog) {\r\n            console.error('No pid_data in received data');\r\n            showSnackbar('Error: Plase Connect L1 device', 'error');\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            var parser = new DOMParser();\r\n            const XmlStr = prolog + \"<bookz/>\";\r\n            var xmlz = parser.parseFromString(XmlStr, \"application/xml\");\r\n    \r\n            if (data.errCode === '0') {\r\n                showSnackbar('Finger Capture Successful');\r\n            } else if (data.errCode) {\r\n                showSnackbar(`Error in finger capture: ${data.errCode}`, 'error');\r\n                return;\r\n            }\r\n    \r\n            if (data.httpSuccess === true) {\r\n                const encodedXml = window.btoa((new XMLSerializer()).serializeToString(xmlz));\r\n                dataPost(encodedXml);\r\n            } else {\r\n                showSnackbar('HTTP request was not successful', 'error');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error processing fingerprint data:', error);\r\n            showSnackbar('Error processing fingerprint data', 'error');\r\n        }\r\n    };\r\n\r\n    const extractPidData = (data) => {\r\n        const pidDataStart = data.indexOf('<PidData>');\r\n        const pidDataEnd = data.indexOf('</PidData>');\r\n        if (pidDataStart !== -1 && pidDataEnd !== -1) {\r\n            return data.substring(pidDataStart, pidDataEnd + 10); // +10 to include '</PidData>'\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const dataPost = async (fingerprintData) => {\r\n        const requestData = {\r\n            ...initialAuth,\r\n            latitude: position.latitude,\r\n            longitude: position.longitude,\r\n            data: fingerprintData,\r\n            user_id: window.localStorage.getItem('userIdToken'),\r\n            bank:apiAepsType,\r\n        };\r\n        \r\n        try {\r\n            setLoader(true);\r\n            const response = await bankResiter(requestData);\r\n            if (response?.data?.statusCode === 200) {\r\n                showSnackbar('Bank registration successful', 'success');\r\n                if(onDailyAuthComplete){\r\n                    onDailyAuthComplete()  \r\n                    }\r\n            } else {\r\n                showSnackbar(response?.data?.message || 'Bank registration failed', 'error');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during bank registration:', error);\r\n            showSnackbar('Error during bank registration', 'error');\r\n        } finally {\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {loader && <Loader />}\r\n            <div className=\"ContentArea\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header Register-header\">\r\n                        <span>Bank Register</span>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-lg-6\">\r\n                                <div className=\"bankRegister\">\r\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={captureFingerprint}>\r\n                                        <img src={img1} alt=\"Capture Fingerprint\" style={{ height: '526px' }} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6\">\r\n                                <div className=\"row\">\r\n                                    {mockData.map((item) => (\r\n                                        <div className=\"col-lg-4 mt-2\" key={item.id}>\r\n                                            <div className=\"deviceImage\">\r\n                                                <img src={item.image} alt={`Device ${item.id}`} />\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Snackbar\r\n                open={snackbar.open}\r\n                autoHideDuration={6000}\r\n                onClose={handleCloseSnackbar}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            >\r\n                <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n                    {snackbar.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthRegister;","import React, { useState } from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem, Button, Box, Typography, CircularProgress, Snackbar, Alert } from '@mui/material';\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport { checkOnboarding } from '../../../../api/login/Login';\r\n\r\nconst formatPhoneNumber = (phoneNumber) => {\r\n  if (!phoneNumber) return '';\r\n  let cleanedNumber = phoneNumber.startsWith('+91') ? phoneNumber.slice(3) : phoneNumber;\r\n  cleanedNumber = cleanedNumber.replace(/\\D/g, '');\r\n  return cleanedNumber;\r\n};\r\n\r\nconst BankPermission = ({ bank1, bank2, profiledata, onDailyAuthComplete ,apiAepsType,merchnadecode }) => {\r\n  const [selectedBank, setSelectedBank] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: 'info'\r\n  });\r\n\r\n  const referid = profiledata?.refer_id;\r\n  const phoneNumber = localStorage.getItem('regisNumber');\r\n  const formattedPhoneNumber = formatPhoneNumber(phoneNumber);\r\n\r\n  const handleBankChange = (event) => {\r\n    setSelectedBank(event.target.value);\r\n  };\r\n\r\n  const handleCheckClick = async () => {\r\n    if (!selectedBank) {\r\n      setSnackbar({ open: true, message: 'Please select a bank', severity: 'error' });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const payload = {\r\n        merchantcode: merchnadecode,\r\n        mobile: formattedPhoneNumber,\r\n        pipe: selectedBank,\r\n        bank:apiAepsType,\r\n      \r\n      };\r\n\r\n      const response = await checkOnboarding(payload);\r\n      if (response?.data?.statusCode == 200) {\r\n        setSnackbar({ open: true, message: response?.data?.message || 'Check completed successfully', severity: 'success' });\r\n        if (onDailyAuthComplete) {\r\n          onDailyAuthComplete();\r\n        }\r\n      } else {\r\n        setSnackbar({ open: true, message: response?.data?.message || response?.message || 'Check failed', severity: 'error' });\r\n      }\r\n    } catch (err) {\r\n      setSnackbar({ open: true, message: 'An error occurred while processing your request', severity: 'error' });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSnackbar({ ...snackbar, open: false });\r\n  };\r\n\r\n  console.log(\"payloadtosend1\", referid);\r\n  console.log(\"payloadtosend2\", formattedPhoneNumber);\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 400, margin: 'auto', padding: 2 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        AEPS Onboarding Bank Select\r\n      </Typography>\r\n      \r\n      <FormControl fullWidth margin=\"normal\">\r\n        <InputLabel>Select Bank</InputLabel>\r\n        <Select\r\n          value={selectedBank}\r\n          onChange={handleBankChange}\r\n          label=\"Select Bank\"\r\n          sx={{\r\n            backgroundColor: 'white',\r\n            '&:hover': { backgroundColor: 'white' },\r\n            '& .MuiOutlinedInput-notchedOutline': { borderColor: 'rgba(0, 0, 0, 0.23)' },\r\n            '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: 'rgba(0, 0, 0, 0.87)' },\r\n            '&.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: 'primary.main' },\r\n            color: 'text.primary'\r\n          }}\r\n         \r\n        >\r\n          <MenuItem value=\"bank2\"  >bank2</MenuItem>\r\n          <MenuItem value=\"bank3\" >bank3</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        startIcon={<CheckCircleOutlineIcon />}\r\n        onClick={handleCheckClick}\r\n        disabled={isLoading || !selectedBank}\r\n        sx={{ mt: 6 }}\r\n      >\r\n        {isLoading ? <CircularProgress size={24} /> : 'Check'}\r\n      </Button>\r\n\r\n      {(bank1 || bank2) && (\r\n        <Box sx={{ mt: 2, p: 1, bgcolor: 'background.paper', borderRadius: 1 }}>\r\n          <Typography variant=\"body2\">\r\n            <strong>Note:</strong> {bank1 || bank2}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BankPermission;","import { useEffect, useState } from \"react\";\r\nimport { Snackbar, Alert } from \"@mui/material\";\r\nimport { capturefingerprint } from \"../../../../common/fingurePrintJs/FingurePrint\";\r\nimport { dailyAuth } from \"../../../../api/login/Login\";\r\n\r\nimport img1 from '../../../../asesets/logo/finger_success.gif'\r\n\r\nimport imgg1 from '../../../../asesets/Devices/iris.png'\r\nimport imgg2 from '../../../../asesets/Devices/mantra.png'\r\nimport imgg3 from '../../../../asesets/Devices/mantral1.png'\r\nimport imgg4 from '../../../../asesets/Devices/morpho.png'\r\nimport imgg5 from '../../../../asesets/Devices/morphol1.png'\r\nimport imgg6 from '../../../../asesets/Devices/precision.png'\r\nimport imgg7 from '../../../../asesets/Devices/sequgen.png'\r\nimport imgg8 from '../../../../asesets/Devices/startrek.png'\r\nimport imgg9 from '../../../../asesets/Devices/startrekl1.png'\r\n\r\nconst mockData = [\r\n    { id: '1', image: imgg1, name: 'Iris' },\r\n    { id: '1', image: imgg2, name: 'Mantra' },\r\n    { id: '1', image: imgg3, name: 'Mantra L1' },\r\n    { id: '1', image: imgg4, name: 'Morpho' },\r\n    { id: '1', image: imgg5, name: 'Morpho L1' },\r\n    { id: '1', image: imgg6, name: 'Precision' },\r\n    { id: '1', image: imgg7, name: 'Secugen' },\r\n    { id: '1', image: imgg8, name: 'Startrek' },\r\n    { id: '1', image: imgg9, name: 'Startrek L1' },\r\n]\r\n\r\nfunction DailyAuth({ onDailyAuthComplete,apiAepsType }) {\r\n    const [position, setPosition] = useState({ latitude: null, longitude: null });\r\n    const [snackbar, setSnackbar] = useState({\r\n        open: false,\r\n        message: '',\r\n        severity: 'success'\r\n    });\r\n    const [selectedDevice, setSelectedDevice] = useState(null);\r\n    const [initialAuth, setInitialAuth] = useState({\r\n        accessmodetype: \"site\",\r\n        latitude: \"\",\r\n        longitude: \"\",\r\n        data: \"\",\r\n        ipaddress: \"\",\r\n        user_id: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (\"geolocation\" in navigator) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    setPosition({\r\n                        latitude: position.coords.latitude,\r\n                        longitude: position.coords.longitude,\r\n                    });\r\n                },\r\n                () => {\r\n                    showSnackbar(\"Location not found. Please enable location and refresh the page.\", \"error\");\r\n                }\r\n            );\r\n        } else {\r\n            showSnackbar(\"Geolocation is not available in your browser.\", \"error\");\r\n        }\r\n    }, []);\r\n\r\n    const showSnackbar = (message, severity = 'success') => {\r\n        setSnackbar({ open: true, message, severity });\r\n    };\r\n\r\n    const handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbar({ ...snackbar, open: false });\r\n    };\r\n\r\n    const handleDeviceClick = (device) => {\r\n        console.log('Device clicked:', device);\r\n        if (!position.latitude || !position.longitude) {\r\n            showSnackbar('Location not found. Please enable location and refresh.', 'error');\r\n            return;\r\n        }\r\n        setSelectedDevice(device);\r\n        showSnackbar(`Selected device: ${device.name}`);\r\n        // Here you can add logic to initialize the selected device\r\n    };\r\n\r\n    const Capturefingerherw = () => {\r\n        if (!position.latitude || !position.longitude) {\r\n            showSnackbar('Cannot capture fingerprint without location. Please enable location and refresh.', 'error');\r\n            return;\r\n        }\r\n        try {\r\n            const fingerData = new capturefingerprint('http://127.0.0.1:11100/rd/capture', result)\r\n            // console.log(fingerData);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const result = (data) => {\r\n        console.log('Received data:', data);\r\n\r\n        if (!data) {\r\n            console.error('No data received in result function');\r\n            showSnackbar('Error: No data received from fingerprint capture', 'error');\r\n            return;\r\n        }\r\n\r\n        if (typeof data !== 'object') {\r\n            console.error('Invalid data type received:', typeof data);\r\n            showSnackbar('Error: Invalid data received from fingerprint capture', 'error');\r\n            return;\r\n        }\r\n\r\n        const prolog = data.pid_data;\r\n        if (!prolog) {\r\n            console.error('No pid_data in received data');\r\n            showSnackbar('Error: No fingerprint data received', 'error');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            var parser = new DOMParser();\r\n            const XmlStr = prolog + \"<bookz/>\";\r\n            var xmlz = parser.parseFromString(XmlStr, \"application/xml\");\r\n\r\n            if (data.errCode === '0') {\r\n                showSnackbar('Finger Capture Successful');\r\n            } else if (data.errCode) {\r\n                showSnackbar(`Error in finger capture: ${data.errCode}`, 'error');\r\n                return;\r\n            }\r\n\r\n            if (data.httpSuccess === true) {\r\n                const encodedXml = window.btoa((new XMLSerializer()).serializeToString(xmlz));\r\n                dataPost(encodedXml);\r\n            } else {\r\n                showSnackbar('HTTP request was not successful', 'error');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error processing fingerprint data:', error);\r\n            showSnackbar('Error processing fingerprint data', 'error');\r\n        }\r\n    }\r\n\r\n    const dataPost = async (fingerData) => {\r\n        const clone = { ...initialAuth, latitude: position.latitude, longitude: position.longitude, data: fingerData, user_id: window.localStorage.getItem('userIdToken'),bank:apiAepsType }\r\n        try {\r\n          const res = await dailyAuth(clone)\r\n          console.log(res);\r\n          if (res?.data?.statusCode == 400) {\r\n            showSnackbar(res?.data?.message || \"Something went Wrong\",'error')\r\n          }\r\n          if (res?.data?.statusCode == '403') {\r\n            showSnackbar(res?.data?.message || \"Something went Wrong\",'error')\r\n          }\r\n          if (res?.data?.statusCode == 200) {  // Assuming 200 is the success status code\r\n            showSnackbar('Daily Auth completed successfully')\r\n            if(onDailyAuthComplete){\r\n            onDailyAuthComplete()  \r\n            }// Call the callback function\r\n          }\r\n        } catch (error) {\r\n          console.error('Error in daily auth:', error)\r\n          showSnackbar('An error occurred during daily auth','error')\r\n        }\r\n    };\r\n      \r\n    return (\r\n        <>\r\n            <div className=\"ContentArea\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header Register-header\">\r\n                        <span>Daily Auth</span>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-lg-6\">\r\n                                <div className=\"bankResiter\">\r\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={Capturefingerherw}>\r\n                                        <img src={img1} alt=\"Capture Fingerprint\" style={{ height: '526px' }} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6\">\r\n                                <div className=\"row\">\r\n                                    {mockData.map((item) => (\r\n                                        <div className=\"col-lg-4 mt-2\" key={item.id}>\r\n                                            <div \r\n                                                className={`deviceImage ${selectedDevice?.id === item.id ? 'selected' : ''}`}\r\n                                                onClick={() => handleDeviceClick(item)}\r\n                                            >\r\n                                                <img src={item.image} alt={item.name} />\r\n                                                <p>{item.name}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Snackbar \r\n                    open={snackbar.open} \r\n                    autoHideDuration={6000} \r\n                    onClose={handleCloseSnackbar}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                >\r\n                    <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n                        {snackbar.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DailyAuth","\r\n\r\nfunction PermissionAepsOnboarding({ activeMessage, buyMessage, head }) {\r\n    return (\r\n        <>\r\n            <div className=\"PageHeading\">\r\n                <h1>{head}</h1>\r\n            </div>\r\n            <div className=\"ContentArea\"><div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    {/* <span>Search</span> */}\r\n                    {activeMessage && <p className=\"alert alert-2 py-1 px-2 d-inline-block\"><b>Note :</b> <strong>{activeMessage}</strong> </p>}\r\n                    {buyMessage && <p className=\"alert alert-2 py-1 px-2 d-inline-block\"><b>Note :</b> <strong>{buyMessage}</strong> </p>}\r\n                </div>\r\n            </div >\r\n            </div >\r\n        </>\r\n    )\r\n}\r\nexport default PermissionAepsOnboarding","import React, { useState } from 'react';\r\nimport { Button, CircularProgress, Snackbar, Alert } from '@mui/material';\r\nimport { onBoadingbank4 } from '../../../../api/login/Login';\r\n\r\nconst formatPhoneNumber = (phoneNumber) => {\r\n  if (!phoneNumber) return '';\r\n  let cleanedNumber = phoneNumber.startsWith('+91') ? phoneNumber.slice(3) : phoneNumber;\r\n  cleanedNumber = cleanedNumber.replace(/\\D/g, '');\r\n  return cleanedNumber;\r\n};\r\n\r\nfunction Instanpayonboarding({ merchnadecode ,setbankverify ,permissionAeps,apiAepsType}) {\r\n    console.log(\"merchnadecode\",merchnadecode)\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [successpopup, setsuccesspopup] = useState(null);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const phoneNumber = localStorage.getItem('regisNumber');\r\n    const formattedPhoneNumber = formatPhoneNumber(phoneNumber);\r\n\r\n    const handleProceed = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        setSuccess(false);\r\n\r\n        try {\r\n            const response = await onBoadingbank4( apiAepsType );\r\n\r\n            if (response.data.statusCode == '200') {\r\n                setSuccess(true);\r\n                setsuccesspopup(response.data.message)\r\n                if (permissionAeps) {\r\n                    setTimeout(() => {\r\n                        permissionAeps();\r\n                    }, 1000);\r\n                }\r\n          \r\n            }\r\n            else if(response.data.statusCode == '007'){\r\n                setSuccess(true);\r\n                setsuccesspopup(response.data.message)\r\n                setbankverify(true)\r\n\r\n            }\r\n            \r\n            else {\r\n                setError(response.data.message || 'An error occurred during onboarding');\r\n            }\r\n        } catch (err) {\r\n            console.error('Error during onboarding:', err);\r\n            setError(err.response?.data?.message || 'An unexpected error occurred');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setError(null);\r\n        setSuccess(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"ContentArea\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\"><span>Onboarding  AEPS4 Document Requirement</span></div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                             \r\n                                <div className=\"alert alert-info mt-4\">\r\n                                    <blockquote className=\"blockquote text-center mb-0\">\r\n                                        <p className=\"mb-0\">\r\n                                            \"For now, we need an L1/L0 device for AEPS for a few days because we will provide you with options for all devices after a few days. Thank you\"\r\n                                        </p>\r\n                                    </blockquote>\r\n                                </div>\r\n                                <div className=\"btn-section\">\r\n                                    <Button \r\n                                        variant=\"contained\" \r\n                                        color=\"success\" \r\n                                        onClick={handleProceed}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        {loading ? <CircularProgress size={24} /> : 'Proceed'}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Snackbar open={!!error || success} autoHideDuration={6000} onClose={handleCloseSnackbar}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n                <Alert onClose={handleCloseSnackbar} severity={error ? \"error\" : \"success\"} sx={{ width: '100%' }}>\r\n                    {error }\r\n                    {successpopup}\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Instanpayonboarding","import React from 'react';\r\nimport Instanpayonboarding from './Instanpayonboarding'; // Import the Instanpayonboarding component\r\n\r\nfunction SuggestOnboarding({ onBoardingApiCall, isInstantpayOnBoarded, merchnadecode ,setbankverify,permissionAeps,apiAepsType}) {\r\nconsole.log(\"isInstantpayOnBoarded\",isInstantpayOnBoarded)\r\n    return (\r\n        \r\n        <>\r\n        { \r\n    isInstantpayOnBoarded === true ? (\r\n        // Render Instanpayonboarding if isInstantpayOnBoarded is true\r\n        <Instanpayonboarding \r\n            merchnadecode={merchnadecode} \r\n            setbankverify={setbankverify} \r\n            permissionAeps={permissionAeps} \r\n            apiAepsType={apiAepsType}\r\n        />\r\n    ) : (\r\n        // Otherwise, render the regular SuggestOnboarding UI\r\n        <div className=\"ContentArea\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    <span>Onboarding Document Requirement</span>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"suggest-point\">\r\n                                <h2>Onboarding Document Requirement</h2>\r\n                            </div>\r\n                            <div className=\"suggest-point\">\r\n                                <p>1- Merchant Original Pancard image.</p>\r\n                                <p>2- Merchant Original AADHAR IMAGE image.</p>\r\n                                <p>3- Onboarding STATE SHOULD match Aadhar address.</p>\r\n                            </div>\r\n                            <div className=\"alert alert-info mt-4\">\r\n                                <blockquote className=\"blockquote text-center mb-0\">\r\n                                    <p className=\"mb-0\">\r\n                                        \"For now, we need an L1/L0 device for AEPS for a few days because we will provide you with options for all devices after a few days. Thank you\"\r\n                                    </p>\r\n                                </blockquote>\r\n                            </div>\r\n                            <div className=\"btn-section\">\r\n                                <button \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-success\" \r\n                                    onClick={onBoardingApiCall}\r\n                                >\r\n                                    Proceed\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuggestOnboarding;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Alert, Spinner } from \"react-bootstrap\";\r\nimport { Snackbar, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { resendbank3otp } from \"../../../api/login/Login\";\r\n\r\nconst formatPhoneNumber = (phoneNumber) => {\r\n  if (!phoneNumber) return '';\r\n  let cleanedNumber = phoneNumber.startsWith('+91') ? phoneNumber.slice(3) : phoneNumber;\r\n  cleanedNumber = cleanedNumber.replace(/\\D/g, '');\r\n  return cleanedNumber;\r\n};\r\n\r\nfunction Bank4aepsverify({ show, onHide, permissionAeps  ,apiAepsType  }) {\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [resendDisabled, setResendDisabled] = useState(false);\r\n  const [resendTimer, setResendTimer] = useState(0);\r\n  const [isResending, setIsResending] = useState(false);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: \"\", severity: \"success\" });\r\n\r\n  const phoneNumber = localStorage.getItem('regisNumber');\r\n  const formattedPhoneNumber = formatPhoneNumber(phoneNumber);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (resendTimer > 0) {\r\n      timer = setTimeout(() => setResendTimer(resendTimer - 1), 1000);\r\n    } else {\r\n      setResendDisabled(false);\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [resendTimer]);\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value.replace(/\\D/g, '').slice(0, 6);\r\n    setOtp(value);\r\n    setError(\"\");\r\n  };\r\n\r\n  const otpSubmit = async () => {\r\n    if (otp.length !== 6) {\r\n      setError(\"Please enter a 6-digit OTP\");\r\n      return;\r\n    }\r\n    setIsSubmitting(true);\r\n    setError(\"\");\r\n    try {\r\n      const response = await resendbank3otp({\r\n        mobile: formattedPhoneNumber,\r\n        user_id: window.localStorage.getItem(\"userIdToken\"),\r\n        otp: otp,\r\n        bank:apiAepsType\r\n      });\r\n      if (response?.data?.statusCode === 200) {\r\n        setSnackbar({ open: true, message: response?.data?.message, severity: \"success\" });\r\n        if (permissionAeps) {\r\n          setTimeout(() => {\r\n            permissionAeps();\r\n          }, 1000);\r\n        }\r\n        onHide();\r\n      } else {\r\n        console.log(\"dshhjsdhjsdh\")\r\n        setSnackbar({ open: true, message: response?.data?.message  || \"Verification failed\", severity: \"error\" });\r\n        setError(response?.data?.message  || \"Verification failed\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"An error occurred. Please try again.\");\r\n      setSnackbar({ open: true, message: \"An error occurred. Please try again.\", severity: \"error\" });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const resendOtp = async () => {\r\n    setResendDisabled(true);\r\n    setResendTimer(30);\r\n    setIsResending(true);\r\n    try {\r\n      const response = await resendbank3otp({\r\n        mobile: formattedPhoneNumber,\r\n        user_id: window.localStorage.getItem(\"userIdToken\"),\r\n      });\r\n      if (response?.data?.statusCode == 200) {\r\n        setSnackbar({ open: true, message: response?.data?.message || \"OTP resent successfully\", severity: \"success\" });\r\n      } else {\r\n        setSnackbar({ open: true, message: response?.data?.message || \"Failed to resend OTP\", severity: \"error\" });\r\n      }\r\n    } catch (error) {\r\n      setSnackbar({ open: true, message: \"An error occurred while resending OTP\", severity: \"error\" });\r\n    } finally {\r\n      setIsResending(false);\r\n    }\r\n  };\r\n\r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSnackbar({ ...snackbar, open: false });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={onHide}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"otp-customer\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">OTP Verification</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"otpInput\">\r\n              <Form.Label>Enter OTP</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter 6-digit OTP\"\r\n                value={otp}\r\n                onChange={handleChange}\r\n                isInvalid={!!error}\r\n                maxLength={6}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{error}</Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form>\r\n          {error && <Alert variant=\"danger\" className=\"mt-3\">{error}</Alert>}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={onHide}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={otpSubmit} disabled={isSubmitting || otp.length !== 6}>\r\n            {isSubmitting ? <><Spinner animation=\"border\" size=\"sm\" /> Verifying...</> : \"Verify OTP\"}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnackbar}\r\n        message={snackbar.message}\r\n        action={\r\n          <IconButton\r\n            size=\"small\"\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            onClick={handleCloseSnackbar}\r\n          >\r\n            <CloseIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Bank4aepsverify;"],"names":["mockData","id","image","imgg1","imgg2","imgg3","imgg4","imgg5","imgg6","imgg7","imgg8","imgg9","_ref","onDailyAuthComplete","apiAepsType","position","setPosition","useState","latitude","longitude","loader","setLoader","snackbar","setSnackbar","open","message","severity","initialAuth","setInitialAuth","accessmodetype","data","ipaddress","user_id","useEffect","navigator","geolocation","getCurrentPosition","coords","showSnackbar","arguments","length","undefined","handleCloseSnackbar","event","reason","handleFingerprintResult","console","log","error","prolog","pid_data","parser","DOMParser","XmlStr","xmlz","parseFromString","errCode","concat","httpSuccess","encodedXml","window","btoa","XMLSerializer","serializeToString","dataPost","async","requestData","fingerprintData","localStorage","getItem","bank","_response$data","response","bankResiter","_response$data2","statusCode","_jsxs","_Fragment","children","_jsx","Loader","className","type","onClick","captureFingerprint","capturefingerprint","src","img1","alt","style","height","map","item","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","sx","width","bank1","bank2","profiledata","merchnadecode","selectedBank","setSelectedBank","isLoading","setIsLoading","referid","refer_id","formattedPhoneNumber","phoneNumber","cleanedNumber","startsWith","slice","replace","formatPhoneNumber","handleSnackbarClose","Box","maxWidth","margin","padding","Typography","variant","gutterBottom","FormControl","fullWidth","InputLabel","Select","value","onChange","target","label","backgroundColor","borderColor","color","MenuItem","Button","startIcon","CheckCircleOutlineIcon","payload","merchantcode","mobile","pipe","checkOnboarding","_response$data3","err","disabled","mt","CircularProgress","size","p","bgcolor","borderRadius","name","selectedDevice","setSelectedDevice","result","clone","fingerData","_res$data","_res$data3","_res$data5","res","dailyAuth","_res$data2","_res$data4","Capturefingerherw","handleDeviceClick","device","activeMessage","buyMessage","head","setbankverify","permissionAeps","loading","setLoading","setError","successpopup","setsuccesspopup","success","setSuccess","onBoadingbank4","setTimeout","_err$response","_err$response$data","onBoardingApiCall","isInstantpayOnBoarded","Instanpayonboarding","show","onHide","otp","setOtp","isSubmitting","setIsSubmitting","resendDisabled","setResendDisabled","resendTimer","setResendTimer","isResending","setIsResending","timer","clearTimeout","Modal","centered","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","placeholder","e","isInvalid","maxLength","Feedback","Footer","resendbank3otp","_response$data4","Spinner","animation","action","IconButton","CloseIcon","fontSize"],"sourceRoot":""}