{"version":3,"file":"static/js/4276.2c49994a.chunk.js","mappings":"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","sources":["components/admin/package/packageDetails/Bbpslist.js","components/admin/package/packageDetails/Invoice.js","components/admin/package/packageDetails/PackageDetails.js","utils/toastMessage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Select, Input, Spin, Card, Table, Pagination, message } from 'antd';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../../../../baseUrl';\r\n\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\n\r\nconst ServiceOperatorList = ({ BBPSWiseServices, dataDetails }) => {\r\n  const [selectedService, setSelectedService] = useState(null);\r\n  const [operators, setOperators] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalOperators, setTotalOperators] = useState(0);\r\n  const pageSize = 4; // Number of operators per page\r\n\r\n  useEffect(() => {\r\n    if (selectedService) {\r\n      fetchOperators(currentPage);\r\n    }\r\n  }, [selectedService, currentPage]);\r\n\r\n  const fetchOperators = async (page) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`${baseUrl}package/bbps/commision`, {\r\n        params: {\r\n          package_id: dataDetails?._id,\r\n          service_id: selectedService,\r\n          page: page - 1,\r\n          count: pageSize\r\n        },\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n          Authorization: `Bearer ${localStorage.getItem('userToken')}`,\r\n        }\r\n      });\r\n\r\n      if (response.data && Array.isArray(response.data.data)) {\r\n        setOperators(response.data.data);\r\n        setTotalOperators(response.data.totalCount || 0);\r\n      } else {\r\n        console.error('Unexpected response structure:', response.data);\r\n        message.error('Unexpected response structure');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching operators:', error);\r\n      message.error('Failed to fetch operators');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleServiceChange = (value) => {\r\n    setSelectedService(value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const filteredOperators = operators.filter(operator =>\r\n    operator.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const columns = [\r\n    { title: 'Start Amount', dataIndex: 'start_amt', key: 'start_amt' },\r\n    { title: 'End Amount', dataIndex: 'end_amt', key: 'end_amt' },\r\n    { title: 'Charge', dataIndex: 'charge', key: 'charge' },\r\n    { title: 'Charge Type', dataIndex: 'charge_type', key: 'charge_type' },\r\n    { title: 'Retailer Commission', dataIndex: 'commision', key: 'commision' },\r\n    { title: 'Retailer Commission Type', dataIndex: 'commision_type', key: 'commision_type' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"service-operator-list\">\r\n      <h3>Service Operator List</h3>\r\n      <Select\r\n        style={{ width: '100%', marginBottom: 16 }}\r\n        value={selectedService}\r\n        placeholder=\"Please select a service\"\r\n        onChange={handleServiceChange}\r\n      >\r\n        {BBPSWiseServices.map(service => (\r\n          <Option key={service._id} value={service._id}>{service.service}</Option>\r\n        ))}\r\n      </Select>\r\n\r\n      {selectedService && (\r\n        <>\r\n          <Search\r\n            placeholder=\"Search operators\"\r\n            onChange={(e) => handleSearch(e.target.value)}\r\n            style={{ marginBottom: 16 }}\r\n          />\r\n\r\n          <Spin spinning={loading}>\r\n            {filteredOperators.length > 0 ? (\r\n              filteredOperators.map(operator => (\r\n                <Card\r\n                  key={operator._id}\r\n                  title={operator.name || 'Operator'}\r\n                  style={{ marginBottom: 16 }}\r\n                >\r\n                  <Table\r\n                    dataSource={operator.slots}\r\n                    columns={columns}\r\n                    pagination={false}\r\n                    rowKey=\"_id\"\r\n                    locale={{ emptyText: 'No data found' }}\r\n                  />\r\n                </Card>\r\n              ))\r\n            ) : (\r\n              <div style={{ textAlign: 'center', marginTop: 20 }}>No operators found</div>\r\n            )}\r\n\r\n            {/* Pagination for the list of operators */}\r\n            <Pagination\r\n              current={currentPage}\r\n              total={totalOperators}\r\n              pageSize={pageSize}\r\n              onChange={handlePageChange}\r\n              style={{ marginTop: 16, textAlign: 'right' }}\r\n            />\r\n          </Spin>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServiceOperatorList;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Invoice.css';\r\n\r\nconst Invoice = () => {\r\n  return (\r\n    <div className=\"container mt-5 mb-5\">\r\n      <div className=\"card shadow invoice-card\">\r\n        <div className=\"card-body\">\r\n          <h2 className=\"text-center mb-4 invoice-title\">TAX INVOICE</h2>\r\n          \r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6\">\r\n              <strong className=\"company-name\">Needu PRIVATE LIMITED</strong>\r\n              <p className=\"address\">Registered Address:<br />\r\n              C-23, First Floor, Sector-2,<br />\r\n              Noida, Uttar Pradesh 201301</p>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <p><strong>Service Receiver</strong></p>\r\n              <p className=\"address\">Address:</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6\">\r\n              <p>Date: <span className=\"info-value\">7666666</span></p>\r\n              <p>Invoice No.: <span className=\"info-value\">__________</span></p>\r\n              <p>Ref. No.: <span className=\"info-value\">__________</span></p>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <p>Reverse Charges: <span className=\"info-value\">No</span></p>\r\n              <p>State Code: <span className=\"info-value\">09</span></p>\r\n            </div>\r\n          </div>\r\n          \r\n          <table className=\"table table-bordered invoice-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Description of Goods/ Service</th>\r\n                <th>Amount (INR)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>Amount</td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>CGST (9%)</td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>SGST (9%)</td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>IGST (18%)</td>\r\n                <td></td>\r\n              </tr>\r\n              <tr className=\"total-row\">\r\n                <td><strong>Total Amount (Rounded off)</strong></td>\r\n                <td></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          \r\n          <p><strong>Amount Chargeable (In Words)</strong></p>\r\n          <p className=\"amount-in-words\">______</p>\r\n          \r\n          <p className=\"text-center mt-4 digital-signature\">Digitally Signed, hence physical Signature not required.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Invoice;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport img1 from '../../../../asesets/banner/package.jpg'\r\nimport BuyPackage from './buyPackage/BuyPackage'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { pacDetails,packageinvoice ,packageBuy, requestPackagetoDistibuterOrSuper , newPackageBuy} from '../../../../api/login/Login';\r\nimport { Modal } from 'react-bootstrap';\r\nimport {  toast } from 'react-toastify';\r\nimport './Packagedetail.css';\r\nimport Invoice from './Invoice';\r\nimport ServiceOperatorList from './Bbpslist';\r\nimport { Form, Card, Badge, Row, Col,Alert } from 'react-bootstrap';\r\nimport { FaStar } from 'react-icons/fa';\r\n\r\nimport { TreeSelect, Table,Typography, Divider, Empty, Button, Spin, Collapse, Pagination } from 'antd';\r\nimport toastMessage from '../../../../utils/toastMessage';\r\nconst { Title, Paragraph } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst ItemsPerPage = 10;\r\nfunction PackageDetails({walletShowHeader,walletData2}) {\r\n\r\n    const navigate = useNavigate()\r\n    const [count , setCount] = useState(1)\r\n    const [itemCounts, setItemCounts] = useState({});\r\n\r\n    const handleCount = (itemId, type) => {\r\n      setItemCounts((prev) => {\r\n        const current = prev[itemId] || 1;\r\n        const updated =\r\n          type === 'increment' ? current + 1 : current > 1 ? current - 1 : 1;\r\n        return { ...prev, [itemId]: updated };\r\n      });\r\n    };\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n  \r\n    \r\n    const handleShow = () => setShow(true);\r\n    const param = useParams()\r\n    // console.log(param?.id);\r\n    const [dataDetails, setDataDetails] = useState(null)\r\n\r\n    // console.log(dataDetails);\r\n\r\n    const [saleRate, setSaleRate] = useState(null)\r\n    const [waletsData, setwaletsData] = useState(null)\r\n    const [message2, setMessage2] = useState('');\r\n    console.log('fvfdvdf', waletsData);\r\n\r\n    const [totalData, setTotalData] = useState();\r\n    const [gstamount, setGstAmount] = useState();\r\n    const [showInvoice, setShowInvoice] = useState(false);\r\n    const [isCongratsModalVisible, setIsCongratsModalVisible] = useState(false);\r\n\r\n    const handleCloseInvoice = () => setShowInvoice(false);\r\n    const handleOpenInvoice = () => setShowInvoice(true);\r\n\r\n    const currentCount = useRef(10);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [currentPages, setCurrentPages] = useState({});\r\n  const userType = window.localStorage.getItem(\"userType\")\r\n    useEffect(() => {\r\n      if (dataDetails?.OtherComm) {\r\n        const initialPages = dataDetails.OtherComm.reduce((acc, item) => {\r\n          acc[item._id] = 1;\r\n          return acc;\r\n        }, {});\r\n        setCurrentPages(initialPages);\r\n      }\r\n    }, [dataDetails]);\r\n  \r\n    const handlePageChange = (page, serviceId) => {\r\n      setCurrentPages(prevPages => ({\r\n        ...prevPages,\r\n        [serviceId]: page\r\n      }));\r\n    };\r\n  \r\n    const getColumns = (service) => [\r\n      {\r\n        title: 'S No.',\r\n        key: 'index',\r\n        render: (text, record, index) => index + 1,\r\n        onHeaderCell: () => ({\r\n          style: {\r\n            backgroundColor: '#cfe2ff',\r\n          },\r\n        }),\r\n      },\r\n      {\r\n        title: 'Start Amount',\r\n        dataIndex: 'start_amt',\r\n        key: 'start_amt',\r\n        onHeaderCell: () => ({\r\n          style: {\r\n            backgroundColor: '#cfe2ff',\r\n          },\r\n        }),\r\n      },\r\n      {\r\n        title: 'End Amount',\r\n        dataIndex: 'end_amt',\r\n        key: 'end_amt',\r\n        onHeaderCell: () => ({\r\n          style: {\r\n            backgroundColor: '#cfe2ff',\r\n          },\r\n        }),\r\n      },\r\n      { \r\n        title: userType === \"Super Distributor\" ? \"Super Distributor Commission\" :\r\n               userType === \"Distributor\" ? \"Distributor Commission\" :\r\n               \"Retailer Commission\",\r\n        dataIndex: userType === \"Super Distributor\" ? \"master_distributer_com\" :\r\n                   userType === \"Distributor\" ? \"distributor_comm\" :\r\n                   \"commision\",\r\n        key: 'commission',\r\n        onHeaderCell: () => ({\r\n          style: {\r\n            backgroundColor: '#cfe2ff',\r\n          },\r\n        }),\r\n      },\r\n      {\r\n        title: userType === \"Super Distributor\" ? \"Super Distributor Commission Type\" :\r\n               userType === \"Distributor\" ? \"Distributor Commission Type\" :\r\n               \"Retailer Commission Type\",\r\n        dataIndex: userType === \"Super Distributor\" ? \"master_distributer_com_type\" :\r\n                   userType === \"Distributor\" ? \"distributor_comm_type\" :\r\n                   \"commision_type\",\r\n        key: 'commissionType',\r\n        onHeaderCell: () => ({\r\n          style: {\r\n            backgroundColor: '#cfe2ff',\r\n          },\r\n        }),\r\n      }\r\n    ];\r\n  \r\n    const renderOtherCommTables = () => {\r\n      if (!dataDetails?.OtherComm || dataDetails.OtherComm.length === 0) {\r\n        return <Empty description=\"No commission data available\" />;\r\n      }\r\n  \r\n      return dataDetails.OtherComm.map((service) => {\r\n        const currentPage = currentPages[service._id] || 1;\r\n  \r\n        return (\r\n          <div key={service._id}>\r\n            <Title level={4}>{service.service}</Title>\r\n            {/* <Paragraph>Commission Name: {service.commision_name}</Paragraph> */}\r\n            <Table\r\n              dataSource={service.commision}\r\n              columns={getColumns(service.service)}\r\n              pagination={{\r\n                current: currentPage,\r\n                pageSize: ItemsPerPage,\r\n                total: service.commision.length,\r\n                onChange: (page) => handlePageChange(page, service._id)\r\n              }}\r\n              rowKey=\"_id\"\r\n              scroll={{ x: true }}\r\n            />\r\n            <Divider />\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n\r\n   \r\n\r\n    const packageDetail = async () => {\r\n        \r\n        try {\r\n            const res = await pacDetails(param?.id)\r\n            setDataDetails(res?.data?.data)\r\n            changeHandle(res?.data?.data?.prices[0])\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    function createMarkup(data) {\r\n        return { __html: data };\r\n    }\r\n\r\n    const length = 4\r\n    const [otp, setOtp] = useState(new Array(length).fill(''));\r\n    // console.log(otp);\r\n\r\n    let str = ''\r\n    for (let index = 0; index < otp.length; index++) {\r\n        const element = otp[index];\r\n        str = str + element\r\n    }\r\n\r\n    console.log(str);\r\n\r\n    const inputs = useRef([]);\r\n\r\n    const otpChandleChange = (index, value) => {\r\n        // const input = value.replace(/[^0-9+]/g, '');\r\n        const newOtp = [...otp];\r\n        if (value.length == 2) {\r\n            return\r\n        }\r\n        newOtp[index] = value;\r\n        setOtp(newOtp);\r\n\r\n\r\n        // Move to the next input field if there's a value\r\n        if (value && inputs.current[index + 1]) {\r\n            inputs.current[index + 1].focus();\r\n        }\r\n\r\n    };\r\n\r\n    const handleKeyDown = (index, e) => {\r\n        // Move to the previous input field if backspace is pressed and the input is empty\r\n        if (e.key === 'Backspace' && !otp[index] && inputs.current[index - 1]) {\r\n            inputs.current[index - 1].focus();\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const [initialValue, setInitialValue] = useState({\r\n        package_id: '',\r\n        tpin: '',\r\n        price: '',\r\n        user_id: ''\r\n    })\r\n\r\n    \r\n\r\n    const changeHandle = (item) => {\r\n        setSelectedPrice(item);\r\n        console.log(item);\r\n        setSaleRate(item)\r\n        const clone = { ...initialValue, price: item?._id }\r\n        console.log(clone);\r\n        setInitialValue(clone);\r\n        \r\n    }\r\n    const [selectedPrice, setSelectedPrice] = useState(null);\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const handleCheckboxChange = (event) => {\r\n        setIsChecked(event.target.checked);\r\n    };\r\n\r\n\r\n    const toastSuccessMessage = (str) => {\r\n        toast.success(`${str}`, {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n        })\r\n    };\r\n\r\n    const toastErrorMessage = (str) => {\r\n        toast.error(`${str}`, {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n        })\r\n    };\r\n\r\n\r\n    const payPackage = async () => {\r\n\r\n        setIsLoading(true);\r\n        const clone = { ...initialValue, count :(itemCounts[initialValue.price] || 1) ,  package_id: param?.id, tpin: str, user_id: window.localStorage.getItem(\"userIdToken\") };\r\n        try {\r\n            const res = await packageBuy(clone);\r\n            console.log(\"paypakage\", res);\r\n            if (res?.data?.error === true) {\r\n                if (res?.data?.message === \"Pin Not matched\") {\r\n                    toastErrorMessage(\"PIN not matched\");\r\n                } else if (res?.data?.message === \"Not enough amount in your wallet\") {\r\n                    toastErrorMessage(\"Not enough amount in your wallet\");\r\n                    handleClose();\r\n                } else {\r\n                    toastErrorMessage(res?.data?.message);\r\n                    handleClose();\r\n                }\r\n            } else if (res?.data?.error === false) {\r\n                toastSuccessMessage(res?.data?.message);\r\n                if (walletShowHeader) walletShowHeader();\r\n                handleClose();\r\n                setIsCongratsModalVisible(true);\r\n                \r\n                // setTimeout(() => {\r\n                //     handleClose();\r\n                //     navigate('/package-list');\r\n                //   }, 1000); \r\n                \r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error in payPackage:\", error);\r\n            toastErrorMessage(\"An error occurred. Please try again.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const waletsShow = async () => {\r\n        try {\r\n            // const res = await userValidate()\r\n            // setwaletsData(res?.data);\r\n            // console.log(\"response,\",res)\r\n\r\n\r\n            const gstAmount = ((saleRate?.sale_rate ?? 0) * 0.18).toFixed(2);\r\n\r\n            setGstAmount(gstAmount)\r\n            const totalamountwithGst = saleRate?.sale_rate + gstAmount;\r\n\r\n\r\n\r\n            const totalData = (walletData2?.main_wallet - totalamountwithGst).toFixed(2);\r\n\r\n            setTotalData(totalData)\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setOtp(new Array(length).fill(''));\r\n    };\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        packageDetail()\r\n    }, [])\r\n    useEffect(() => {\r\n        waletsShow()\r\n    }, [saleRate])\r\n    console.log(\"dataDetails\", dataDetails);\r\n    console.log(\"waletsData2\", walletData2);\r\n    console.log(\"saleRate\", saleRate);\r\n    const isPurchasePackage = dataDetails?.isPurchased;\r\n   \r\n    const isPurchaseDisabled = !isChecked || (selectedPrice && selectedPrice.isPaid);\r\n    const formatExpirationDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        return date.toLocaleString();\r\n      };\r\n      useEffect(() => {\r\n        // Initialize current pages for each table\r\n        if (dataDetails?.OtherComm) {\r\n          const initialPages = dataDetails.OtherComm.reduce((acc, item) => {\r\n            acc[item._id] = 1;\r\n            return acc;\r\n          }, {});\r\n          setCurrentPages(initialPages);\r\n        }\r\n      }, [dataDetails]);\r\n    \r\n\r\n    const handlePackageRequest = async()=>{\r\n      let body = {\r\n        id : param?.id\r\n      }\r\n      setIsLoading(true)\r\n         try {\r\n          let res  = await requestPackagetoDistibuterOrSuper(body)\r\n          toastMessage(res?.data?.error , res?.data?.message)\r\n         } catch (error) {\r\n           \r\n         } finally {\r\n          setIsLoading(false)\r\n         }\r\n    }  \r\n   \r\n    return (\r\n        <>\r\n            <div className=\"PageHeading\">\r\n                <h1>Package Details</h1>\r\n            </div>\r\n            <div className=\"ContentArea\">\r\n                <h3 style={{fontSize:'19px' , color:\"var(--bs-nav)\" , padding:'10px'}}>{dataDetails?.package_name}</h3>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header card-header-plannhrad\">\r\n                        <h2 className='plannhrad'>Subscription Plan</h2>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-row\">\r\n                            {/* <div className=\"col-lg-6\">\r\n                                <div className=\"image-banner\">\r\n                                    <img src={img1} alt=\"\" />\r\n                                </div>\r\n                            </div> */}\r\n                            <div className=\"col-lg-12\">\r\n                                <div className='details-set'>\r\n                                {/* <h3>{dataDetails?.package_name}</h3> */}\r\n        <Card>\r\n         \r\n          <div className=\"card-body\">\r\n            <div className=\"form-row\">\r\n              <div className=\"col-lg-12\">\r\n                <div className='details-set'>\r\n                  <p>\r\n                    <div\r\n                      className=\"products-details-tab-content\"\r\n                      dangerouslySetInnerHTML={createMarkup(\r\n                        dataDetails?.description\r\n                      )}\r\n                    />\r\n                  </p>\r\n                  \r\n                  {dataDetails?.BBPSWiseServices?.length > 0 && (\r\n                    <Collapse>\r\n                      <Panel header=\"BBPS Services\" key=\"1\">\r\n                        <ServiceOperatorList \r\n                          BBPSWiseServices={dataDetails.BBPSWiseServices} \r\n                          dataDetails={dataDetails}\r\n                        />\r\n                      </Panel>\r\n                    </Collapse>\r\n                  )}\r\n\r\n                  {dataDetails?.OtherComm?.length > 0 && (\r\n                    <Collapse className='mt-2'>\r\n                      <Panel header=\"Commissions\" key=\"2\">\r\n                        {renderOtherCommTables()}\r\n                      </Panel>\r\n                    </Collapse>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n                                   \r\n\r\n\r\n            {dataDetails?.can_buy === true ?        \r\n                              <div>\r\n            { dataDetails?.isPaid === true && dataDetails?.prices?.length > 0 && (\r\n                 <Card className=\"mt-3\">\r\n                 <Card.Header>\r\n                   <h4 className=\"mb-0\">Subscription Plans</h4>\r\n                 \r\n                 </Card.Header>\r\n                 <Card.Body>\r\n                   <Form>\r\n                     <Row>\r\n                       {dataDetails.prices.map((item, i) => (\r\n                         <Col key={item?._id} md={6} lg={4} className=\"mb-3\">\r\n                           <Card>\r\n                             <Card.Body style={{minHeight:'2rem'}}>\r\n                               <Form.Check\r\n                                 type=\"radio\"\r\n                                 id={item?._id}\r\n                                 name=\"package_id\"\r\n                                 label={\r\n                                   <div>\r\n                                     <strong>{item?.duration} {item?.duration_type}</strong>\r\n                                     <div>\r\n                                       <Badge variant=\"success\" className=\"mr-2\">\r\n                                        Our Offer: ₹{item?.sale_rate}\r\n                                       </Badge>\r\n                                       <Badge variant=\"secondary\">\r\n                                         MRP: <strike>₹{item?.mrp}</strike>\r\n                                       </Badge>\r\n                                     </div>\r\n                                     <small className=\"text-muted\">\r\n                                       + {item?.tax} {item?.tax_type} Tax\r\n                                     </small>\r\n                                         {/* Show count controls if this plan is selected */}\r\n                                       {dataDetails?.countIncrease === true &&\r\n                                         <div className=\"mt-2 d-flex align-items-center gap-2\">\r\n    <Button\r\n      variant=\"outline-secondary\"\r\n      size=\"sm\"\r\n      onClick={() => handleCount(item._id, 'decrement')}\r\n    >\r\n      −\r\n    </Button>\r\n    <span>{itemCounts[item._id] || 1}</span>\r\n    <Button\r\n      variant=\"outline-secondary\"\r\n      size=\"sm\"\r\n      onClick={() => handleCount(item._id, 'increment')}\r\n    >\r\n      +\r\n    </Button>\r\n  </div> }\r\n                          \r\n                          \r\n                                   </div>\r\n                                 }\r\n                                 defaultChecked={i === 0}\r\n                                 onChange={() => changeHandle(item)}\r\n                               />\r\n                             </Card.Body>\r\n                           </Card>\r\n                         </Col>\r\n                       ))}\r\n                     </Row>\r\n                   </Form>\r\n                 </Card.Body>\r\n               </Card>\r\n            )}\r\n            {/* {dataDetails?.isPurchased === \"true\" && (\r\n    <p>Expiry Date: {new Date(dataDetails?.history).toLocaleString()}</p>\r\n)} */}\r\n{!dataDetails?.isPaid ? null : (\r\n            <div className='mt-3 ConditionsTerm ' style={{color:'var(--bs-nav)'}}>\r\n                <h4 style={{ fontSize: '12px' , }}><strong  style={{color:'var(--bs-nav)'}}>Terms & Conditions</strong></h4>\r\n                <ul >\r\n                    <li style={{color:'var(--bs-nav)'}}>1. The subscription's validity is only valid for 30/90/180/365 days after the date of purchase.</li>\r\n                    <li style={{color:'var(--bs-nav)'}}>2. Your wallet will be debited for the amount automatically renewed when your subscription expires.</li>\r\n                    <li style={{color:'var(--bs-nav)'}}>3. The Retailer will be switched to the same plan on the same day if he cancels the subscription at any moment.</li>\r\n                    <li style={{color:'var(--bs-nav)'}}>4. After being deducted, subscription fees are not refundable.</li>\r\n                </ul>\r\n                <div className=\"form-check\">\r\n                    <input \r\n                        className=\"form-check-input\" \r\n                        type=\"checkbox\" \r\n                        id=\"flexCheckDefault\" \r\n                        checked={isChecked}\r\n                        onChange={handleCheckboxChange}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                        I agree to the terms and Conditions.\r\n                    </label>\r\n                </div>\r\n            </div>\r\n             )}\r\n\r\n            {dataDetails?.isPurchased ? (\r\n                <Alert variant=\"info\">\r\n                  Expiration Date: {formatExpirationDate(dataDetails?.history)}\r\n                </Alert>\r\n              ) : null}\r\n\r\n            {!dataDetails?.isPaid ? null : (\r\n                                        <div className='buy-now'>\r\n                                            <button\r\n                                                type='button'\r\n                                                className='btn btn-primary'\r\n\r\n\r\n                                                disabled={!isChecked}\r\n                                                onClick={handleShow}\r\n                                            >\r\n                                                BUY\r\n                                            </button>\r\n                                        </div>\r\n                                    )}\r\n        </div>\r\n\r\n       :\r\n        \r\n        <div>\r\n          {dataDetails?.isPaid === true && \r\n          <>\r\n         <Row>\r\n                       {dataDetails.prices.map((item, i) => (\r\n                         <Col key={item?._id} md={6} lg={4} className=\"mb-3\">\r\n                           <Card>\r\n                             <Card.Body style={{minHeight:'2rem'}}>\r\n                                <div>\r\n                               Duration : {item?.duration} {item?.duration_type}\r\n                                </div>\r\n                              </Card.Body> \r\n                              </Card>\r\n                              </Col> ))}\r\n                              </Row> \r\n       \r\n        <div className='d-flex justify-content-center'>\r\n  <button\r\n    type='button'\r\n    className='btn btn-secondary'\r\n    disabled={dataDetails?.isPurchased || isLoading}\r\n    onClick={handlePackageRequest}\r\n  >\r\n     {dataDetails?.isPurchased === true ? 'Already Purchased' :\"Request for Package \"} \r\n  </button>\r\n</div>\r\n</>\r\n }\r\n        </div>\r\n        \r\n        } \r\n\r\n\r\n                                    {/* )} */}\r\n\r\n                                    {/* <div className='buy-now'>\r\n                                        <button\r\n                                            type='button'\r\n                                            className='btn btn-success'\r\n                                            disabled={!isChecked}\r\n                                            onClick={handleShow}\r\n                                        >\r\n                                            BUY\r\n                                        </button>\r\n                                    </div> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <BuyPackage\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                otp={otp}\r\n                otpChandleChange={otpChandleChange}\r\n                handleKeyDown={handleKeyDown}\r\n                inputs={inputs}\r\n            /> */}\r\n\r\n\r\n\r\n     \r\n{/* <Modal\r\n  size=\"lg\"\r\n  show={show}\r\n  onHide={handleClose}\r\n  backdrop=\"static\"\r\n  keyboard={false}\r\n  className=\"bpbs-modal\"\r\n  style={{\r\n    zIndex: 1050,\r\n   \r\n  }}\r\n>\r\n  <Modal.Header closeButton className=\"bpbs-modal-header\">\r\n    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n      Package Purchase\r\n    </Modal.Title>\r\n  </Modal.Header> */}\r\n  {/* <Modal.Body className=\"bpbs-modal-body\" style={{\r\n    backgroundColor: '#ffffff',\r\n    transform: 'translateZ(0)',\r\n    backfaceVisibility: 'hidden',\r\n  }}>\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row mb-4\">\r\n        <div className=\"col-md-4 bpbs-info-item\">\r\n          <h5 className=\"bpbs-info-title\">Current Amount</h5>\r\n          <p className=\"bpbs-info-value\">₹ {waletsData?.main_wallet ?? 0}</p>\r\n        </div>\r\n        <div className=\"col-md-4 bpbs-info-item\">\r\n          <h5 className=\"bpbs-info-title\">Package Amount</h5>\r\n          <p className=\"bpbs-info-value\">₹ {saleRate?.sale_rate ?? 0} + {gstamount}</p>\r\n        </div>\r\n        <div className=\"col-md-4 bpbs-info-item\">\r\n          <h5 className=\"bpbs-info-title\">Available Amount</h5>\r\n          <p className=\"bpbs-info-value\">₹ {totalData}</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"form-group text-center\">\r\n            <label htmlFor=\"txtCnfPassword\" className=\"bpbs-tpin-label\">Enter Tpin <span className=\"text-danger\">*</span></label>\r\n            <div className=\"d-flex justify-content-center mt-3 mb-4\">\r\n              {otp.map((value, index) => (\r\n                <input\r\n                  key={index}\r\n                  type=\"password\"\r\n                  value={value}\r\n                  onChange={(e) => otpChandleChange(index, e.target.value)}\r\n                  onKeyDown={(e) => handleKeyDown(index, e)}\r\n                  ref={(input) => (inputs.current[index] = input)}\r\n                  className=\"bpbs-tpin-input\"\r\n                />\r\n              ))}\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className={`btn btn-lg ${str.length !== 4 ? 'btn-secondary' : 'btn-primary'} bpbs-pay-button`}\r\n              disabled={str.length !== 4 || isLoading}\r\n              onClick={payPackage}\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n                  Processing...\r\n                </>\r\n              ) : (\r\n                'PAY NOW'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Modal.Body> */}\r\n  \r\n{/* </Modal> */}\r\n<Modal className=\"pkg-details-modal\"\r\nsize=\"lg\"\r\nshow={show}\r\nonHide={handleClose}\r\nbackdrop=\"static\"\r\nkeyboard={false}\r\n\r\nstyle={{\r\n  zIndex: 1050,\r\n \r\n}}>\r\n  <Modal.Header closeButton className=\"pkg-details-header\">\r\n    <Modal.Title className=\"pkg-details-title\">Package Purchase Details</Modal.Title>\r\n  </Modal.Header>\r\n  <Modal.Body className=\"pkg-details-body\">\r\n    <div className=\"pkg-info-grid\">\r\n      <div className=\"pkg-info-item\">\r\n        <div className=\"pkg-info-label\">Current Balance</div>\r\n        <div className=\"pkg-info-value\">₹ {walletData2?.main_wallet ?? 0}</div>\r\n      </div>\r\n      <div className=\"pkg-info-item\">\r\n      <div className=\"pkg-info-label\">\r\n      Available Balance after transaction\r\n  </div>\r\n  <div className=\"pkg-info-value\">\r\n  \r\n  {(walletData2?.main_wallet - saleRate?.real_value) < 0 \r\n      ? \"₹ 0\" \r\n      : `₹ ${(walletData2?.main_wallet - saleRate?.real_value)\r\n            .toFixed(2)\r\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\r\n    }\r\n    {/* {(walletData2?.main_wallet - saleRate?.real_value) < 0 \r\n      ? ` (Available Balance after transaction: ₹ ${Math.abs(walletData2?.main_wallet - saleRate?.real_value)\r\n            .toFixed(2)\r\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")})`\r\n      : \"\"} */}\r\n  </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div className=\"pkg-details-table\">\r\n      <table>\r\n        <tbody>\r\n          {dataDetails?.countIncrease === true && \r\n        <tr>\r\n            <td>Quantity</td>\r\n            <td> {itemCounts[initialValue?.price] || 1}</td>\r\n          </tr> }\r\n          <tr>\r\n            \r\n            <td>MRP</td>\r\n            <td>₹ {saleRate?.mrp ?? 0}</td>\r\n          </tr>\r\n         \r\n          <tr>\r\n            <td>Sale Price</td>\r\n            <td>₹ {saleRate?.sale_rate ?? 0}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Tax ({saleRate?.tax ?? 0}{saleRate?.tax_type})</td>\r\n            <td>₹ {(saleRate?.sale_rate * saleRate?.tax / 100).toFixed(2)}</td>\r\n          </tr>\r\n          <tr className=\"total-row\">\r\n            <td>Total Amount</td>\r\n            <td>₹ {((saleRate?.real_value || 0) * (itemCounts[initialValue?.price] || 1)).toFixed(2)}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    \r\n    <div className=\"pkg-tpin-section\">\r\n      <label className=\"pkg-tpin-label\">Enter Tpin <span className=\"text-danger\">*</span></label>\r\n      <div className=\"pkg-tpin-inputs\">\r\n        {otp.map((value, index) => (\r\n          <input\r\n            key={index}\r\n            type=\"password\"\r\n            value={value}\r\n            onChange={(e) => otpChandleChange(index, e.target.value)}\r\n            onKeyDown={(e) => handleKeyDown(index, e)}\r\n            ref={(input) => (inputs.current[index] = input)}\r\n            className=\"pkg-tpin-input\"\r\n          />\r\n        ))}\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"pkg-pay-button\"\r\n        disabled={str.length !== 4 || isLoading}\r\n        onClick={payPackage}\r\n      >\r\n        {isLoading ? 'Processing...' : 'PAY NOW'}\r\n      </button>\r\n    </div>\r\n  </Modal.Body>\r\n</Modal>\r\n            <Modal\r\n                size=\"lg\"\r\n                show={showInvoice}\r\n                onHide={handleCloseInvoice}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                className=\"invoice-modal\"\r\n                \r\n                style={{\r\n                  zIndex: 1050,\r\n                 \r\n                }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Invoice</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body style={{\r\n    backgroundColor: '#ffffff',\r\n    transform: 'translateZ(0)',\r\n    backfaceVisibility: 'hidden',\r\n  }}>\r\n                    <Invoice />\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal\r\n            style={{\r\n              zIndex: 1050,\r\n             \r\n            }}\r\n\r\n  show={isCongratsModalVisible} \r\n  onHide={() => {\r\n    setIsCongratsModalVisible(false);\r\n    navigate('/package-list');\r\n  }}\r\n \r\n  centered\r\n  className=\"pkg-congrats-modal\"\r\n><Modal.Body className=\"pkg-congrats-modal__body\">\r\n          <button className=\"pkg-congrats-modal__close\" onClick={() => {\r\n    setIsCongratsModalVisible(false);\r\n    navigate('/package-list');\r\n  }}>×</button>\r\n          <div className=\"pkg-congrats-modal__content\">\r\n            <div className=\"pkg-congrats-modal__icon-container\">\r\n              <FaStar style={{ color: 'gold' }} className=\"pkg-congrats-modal__icon\" />\r\n            </div>\r\n            <h2 className=\"pkg-congrats-modal__title\">Package Buy Successfully</h2>\r\n            <p className=\"pkg-congrats-modal__message\">The new package has been successfully assigned . You can now enjoy enhanced features and benefits!</p>\r\n            <button className=\"pkg-congrats-modal__button\" onClick={() => {\r\n    setIsCongratsModalVisible(false);\r\n    navigate('/package-list');\r\n  }}>CONTINUE</button>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n\r\n\r\n</Modal>\r\n\r\n          \r\n        </>\r\n    )\r\n}\r\nexport default PackageDetails","import { toast } from \"react-toastify\";\r\n\r\n\r\nexport default function toastMessage(error, message = \"something went wrong\") {\r\n\r\n    error === false ? toast.success(message) : toast.error(message);\r\n    // error === false  ?  setSnackbar({ open: true, message: response?.data?.message ||, severity: 'success' }) :  setSnackbar({ open: true, message , severity: 'error' });\r\n}"],"names":["Option","Select","Search","Input","_ref","BBPSWiseServices","dataDetails","selectedService","setSelectedService","useState","operators","setOperators","loading","setLoading","searchTerm","setSearchTerm","currentPage","setCurrentPage","totalOperators","setTotalOperators","useEffect","fetchOperators","async","response","axios","get","concat","baseUrl","params","package_id","_id","service_id","page","count","headers","Authorization","localStorage","getItem","data","Array","isArray","totalCount","console","error","message","filteredOperators","filter","operator","name","toLowerCase","includes","columns","title","dataIndex","key","_jsxs","className","children","_jsx","style","width","marginBottom","value","placeholder","onChange","map","service","_Fragment","e","handleSearch","target","Spin","spinning","length","Card","Table","dataSource","slots","pagination","rowKey","locale","emptyText","textAlign","marginTop","Pagination","current","total","pageSize","Invoice","Title","Paragraph","Typography","Panel","Collapse","_dataDetails$BBPSWise","_dataDetails$OtherCom","_dataDetails$prices","_walletData2$main_wal","_saleRate$mrp","_saleRate$sale_rate2","_saleRate$tax","walletShowHeader","walletData2","navigate","useNavigate","setCount","itemCounts","setItemCounts","handleCount","itemId","type","prev","updated","show","setShow","param","useParams","setDataDetails","saleRate","setSaleRate","waletsData","setwaletsData","message2","setMessage2","log","totalData","setTotalData","gstamount","setGstAmount","showInvoice","setShowInvoice","isCongratsModalVisible","setIsCongratsModalVisible","isLoading","setIsLoading","useRef","currentPages","setCurrentPages","userType","window","OtherComm","initialPages","reduce","acc","item","otp","setOtp","fill","str","index","element","inputs","initialValue","setInitialValue","tpin","price","user_id","changeHandle","setSelectedPrice","clone","selectedPrice","isChecked","setIsChecked","toastErrorMessage","toast","position","autoClose","handleClose","_res$data","_res$data2","_res$data2$data","res","pacDetails","id","prices","packageDetail","_saleRate$sale_rate","gstAmount","sale_rate","toFixed","totalamountwithGst","main_wallet","waletsShow","isPurchased","isPaid","fontSize","color","padding","package_name","dangerouslySetInnerHTML","description","__html","header","ServiceOperatorList","level","commision","render","text","record","onHeaderCell","backgroundColor","handlePageChange","serviceId","prevPages","scroll","x","Divider","Empty","can_buy","Header","Body","Form","Row","i","Col","md","lg","minHeight","Check","label","duration","duration_type","Badge","variant","mrp","tax","tax_type","countIncrease","Button","size","onClick","defaultChecked","checked","event","htmlFor","Alert","dateString","history","Date","toLocaleString","disabled","handleShow","body","_res$data9","_res$data10","requestPackagetoDistibuterOrSuper","toastMessage","Modal","onHide","backdrop","keyboard","zIndex","closeButton","real_value","replace","otpChandleChange","newOtp","focus","onKeyDown","handleKeyDown","ref","input","_res$data3","_res$data7","packageBuy","_res$data4","_res$data5","_res$data6","_res$data8","success","toastSuccessMessage","handleCloseInvoice","transform","backfaceVisibility","centered","FaStar","arguments","undefined"],"sourceRoot":""}