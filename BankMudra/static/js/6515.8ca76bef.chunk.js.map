{"version":3,"file":"static/js/6515.8ca76bef.chunk.js","mappings":"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","sources":["hooks/useFingurePrint.js","pages/NewbankTransfer/BankTransferProvider.js","pages/NewbankTransfer/index.js","utils/deviceConfig.js","utils/getLocation.js","utils/toastMessage.js","utils/withLocation.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { DEVICE_CONFIGS } from '../utils/deviceConfig';\r\n\r\n\r\n\r\n\r\nexport const useFingerprintCapture = ({ wadhValue  }) => {\r\n    const [fingerprintData, setFingerprintData] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n  \r\n    const getPidOptionsXML = () => {\r\n      return `<?xml version='1.0'?><PidOptions ver='1.0'><Opts fCount='1' fType='2' iCount='0' pCount='0' format='0' pidVer='2.0' timeout='10000' posh='UNKNOWN' env='P' wadh=\"${wadhValue}\" /><CustOpts></CustOpts></PidOptions>`;\r\n    };\r\n  \r\n    const tryHostsAndPorts = async (hosts, ports, path) => {\r\n      for (let host of hosts) {\r\n        for (let port of ports) {\r\n          try {\r\n            const url = `${host}:${port}${path}`;\r\n            const res = await fetch(url, {\r\n              method: 'CAPTURE',\r\n              headers: { 'Content-Type': 'text/xml' },\r\n              body: getPidOptionsXML(),\r\n            });\r\n            if (res.ok) {\r\n              const text = await res.text();\r\n              return { success: true, data: text, url };\r\n            }\r\n          } catch (err) {\r\n            continue; // try next port/host\r\n          }\r\n        }\r\n      }\r\n      throw new Error('No available host/port for fingerprint capture.');\r\n    };\r\n  \r\n    const parseCaptureResponse = (xmlText) => {\r\n      const parser = new DOMParser();\r\n      const doc = parser.parseFromString(xmlText, 'text/xml');\r\n      const resp = doc.getElementsByTagName('Resp')[0];\r\n  \r\n      const errCode = resp?.getAttribute('errCode');\r\n      const errInfo = resp?.getAttribute('errInfo');\r\n      const qScore = resp?.getAttribute('qScore');\r\n  \r\n      if (errCode !== '0') {\r\n        throw new Error(errInfo || 'Unknown capture error');\r\n      }\r\n  \r\n      return {\r\n        status: 'Captured',\r\n        captureSuccess: true,\r\n        errCode,\r\n        qScore,\r\n        pidData: xmlText,\r\n      };\r\n    };\r\n  \r\n    const captureFingerprint = async (deviceName) => {\r\n      setLoading(true);\r\n      try {\r\n        const device = DEVICE_CONFIGS?.find((d) => d.name.toLowerCase() === deviceName.toLowerCase());\r\n        if (!device) throw new Error('Device config not found');\r\n  \r\n        const result = await tryHostsAndPorts(device.hosts, device.ports, device.path);\r\n        const parsed = parseCaptureResponse(result.data);\r\n        setFingerprintData(parsed);\r\n        return parsed;\r\n      } catch (err) {\r\n        throw err;\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    return {\r\n      fingerprintData,\r\n      loading,\r\n      captureFingerprint,\r\n    };\r\n  };\r\n  ","import React, { createContext, useContext, useState } from 'react'\r\n\r\nconst BankTransferContext = createContext()\r\n\r\n\r\nconst BankTransferProvider = ({ walletCall , children}) => {\r\n\r\n    const [selectedBank, setSelectedBank] = useState();\r\n    const [wadhValue , setWadhValue] = useState('')\r\n    const [globalLoader , setGlobalLoader] = useState(false)\r\n     const [mobile, setMobile] = useState('');\r\n    const [customer , setCustomer] = useState({})\r\n      const [allBank , setAllBank] = useState([])\r\n      const [currentPage , setCurrentPage] = useState('money-transfer')\r\n      const [invoiceId , setInvoiceId] = useState('')\r\n  return (\r\n     <BankTransferContext.Provider value={{walletCall ,invoiceId ,setInvoiceId, setWadhValue ,wadhValue, globalLoader ,setGlobalLoader,mobile ,setMobile, currentPage ,setCurrentPage, setCustomer ,customer,selectedBank , setSelectedBank , allBank , setAllBank}}>\r\n         {children}\r\n     </BankTransferContext.Provider>\r\n  )\r\n}\r\n\r\nexport const  useBankTransfer = ()=> useContext(BankTransferContext) \r\n\r\nexport default BankTransferProvider","import React, { useState, useEffect, useCallback, useRef, useLayoutEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Autocomplete,\r\n  Grid,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CircularProgress,\r\n  IconButton,\r\n  Avatar,\r\n  Divider,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  CardMedia,\r\n  Radio, RadioGroup, FormControlLabel,\r\n\r\n} from '@mui/material';\r\nimport Select from 'react-select';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport { Person, Delete } from '@mui/icons-material';\r\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport { MdVerified } from \"react-icons/md\";\r\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\r\nimport CurrencyRupeeIcon from '@mui/icons-material/CurrencyRupee';\r\nimport { Popconfirm } from \"antd\";\r\nimport { dmtDtails, dmtkycapi, verifybank3otp, veryOtpaddbene, getDMtcharges, getDetailByPin, BENEFICIARYAdd, bankListApiwithid, BENEFICIARYDelete, sendMoneyTrans, sendbank3MoneyTransdmt, sagestMobileNumber, settingBank, CustomerInfo, reciptList, verificationBank, ekoVeryfyCustomer, createCustomer } from '../../api/login/Login';\r\nimport { CheckCircle } from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useBankTransfer } from './BankTransferProvider';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport toastMessage from '../../utils/toastMessage';\r\nimport withLocation from '../../utils/withLocation';\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Loader from '../../common/loader/Loader';\r\nimport img1 from '../../asesets/logo/finger_success.gif'\r\nimport imgg1 from '../../asesets/Devices/iris.png'\r\nimport imgg2 from '../../asesets/Devices/mantra.png'\r\nimport imgg3 from '../../asesets/Devices/mantral1.png'\r\nimport imgg4 from '../../asesets/Devices/morpho.png'\r\nimport imgg5 from '../../asesets/Devices/morphol1.png'\r\nimport imgg6 from '../../asesets/Devices/precision.png'\r\nimport imgg7 from '../../asesets/Devices/sequgen.png'\r\nimport imgg8 from '../../asesets/Devices/startrek.png'\r\nimport imgg9 from '../../asesets/Devices/startrekl1.png'\r\nimport { DEVICE_CONFIGS } from '../../utils/deviceConfig';\r\nimport { useFingerprintCapture } from '../../hooks/useFingurePrint';\r\nimport { IoMdPrint } from \"react-icons/io\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport html2pdf from 'html2pdf.js';\r\nimport image from \"../../asesets/logo/image4.jpeg\"\r\n\r\n\r\nconst isValidIndianMobile = (mobile) => /^[6-9]\\d{9}$/.test(mobile);\r\n\r\n\r\n\r\nconst CustomTextField = (props) => (\r\n  <TextField\r\n    variant=\"outlined\"\r\n    size=\"small\"\r\n    InputLabelProps={{\r\n      shrink: true,\r\n      //   style: { fontSize: '16px' },\r\n    }}\r\n\r\n    sx={{\r\n\r\n      \"& label.Mui-focused\": {\r\n        color: 'var(--bs-nav)',\r\n      },\r\n      \"& .MuiOutlinedInput-root\": {\r\n        height: 40,\r\n        \"& .MuiOutlinedInput-input\": {\r\n          py: 0,\r\n        },\r\n        \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n        \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n      },\r\n\r\n    }}\r\n    {...props}\r\n  />\r\n);\r\nconst CustomTextFieldForAmount = (props) => (\r\n  <TextField\r\n    variant=\"outlined\"\r\n    size=\"small\"\r\n    InputLabelProps={{\r\n      shrink: true,\r\n      //   style: { fontSize: '16px' },\r\n    }}\r\n    className='send-moeny-input'\r\n    InputProps={{\r\n      sx: {\r\n        '&::placeholder': {\r\n          fontSize: '8px', // Set your desired font size here\r\n        },\r\n        // Optional: changes input text size too\r\n      },\r\n    }}\r\n\r\n    sx={{\r\n\r\n      \"& .MuiOutlinedInput-root\": {\r\n        height: 40,\r\n        \"& .MuiOutlinedInput-input\": {\r\n          py: 0,\r\n        },\r\n        \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n        \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n      },\r\n\r\n    }}\r\n    {...props}\r\n  />\r\n);\r\n\r\n\r\nconst CustomTextFieldAddCustomer = (props) => (\r\n  <TextField\r\n    variant=\"outlined\"\r\n    InputLabelProps={{\r\n      shrink: true,\r\n      //   style: { fontSize: '16px' },\r\n    }}\r\n\r\n    sx={{\r\n      \"& .MuiOutlinedInput-root\": {\r\n        height: 44,\r\n        \"& .MuiOutlinedInput-input\": {\r\n          py: 0,\r\n        },\r\n        \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n        \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n      },\r\n\r\n    }}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst CustomBox = ({ children }) => (\r\n  <Box\r\n    sx={{\r\n      width: '100%',\r\n      //   maxWidth: 800,\r\n      mx: 'auto',\r\n      //   mt: 5,\r\n      my: 1,\r\n      px: 3,\r\n      py: 4,\r\n      pb: 6,\r\n      //   bgcolor: '#F8F9FA',\r\n      bgcolor: 'white',\r\n      borderRadius: 1,\r\n      boxShadow: 0,\r\n    }}\r\n  >\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nconst SendMoneyPopup = ({ otpResponse, setOtpResponse, amount, transferMode, otpSent, open, onClose, recipient }) => {\r\n  const { setInvoiceId, setCurrentPage, walletCall, setGlobalLoader, customer, selectedBank, allBank } = useBankTransfer();\r\n  const naviagte = useNavigate()\r\n  // const [amount, setAmount] = useState('');\r\n  const [amountError, setAmountError] = useState('');\r\n\r\n  const [otp, setOtp] = useState('');\r\n  const [otpError, setOtpError] = useState('');\r\n  const [otpVerified, setOtpVerified] = useState(false);\r\n  const [pin, setPin] = useState('');\r\n  const [pinError, setPinError] = useState('');\r\n\r\n\r\n  const [otpLoading, setOtpLoading] = useState(false);\r\n  const [moneyLoading, setMoneyLoading] = useState(false);\r\n\r\n  const totalLimit = customer?.total_limit || 0;\r\n  const usedLimit = customer?.used_limit || 0;\r\n  const availableLimit = totalLimit - usedLimit;\r\n\r\n  const bankNameObj = allBank.find((item) => item?._id === selectedBank);\r\n  const bankName = bankNameObj?.name || '';\r\n\r\n  // const getMaxAmount = () => {\r\n  //   if (bankName === 'bank1') {\r\n  //     return availableLimit > 5000 ? 5000 : availableLimit;\r\n  //   }\r\n  //   if (bankName === 'bank2') {\r\n  //     return 25000;\r\n  //   }\r\n  //   return availableLimit;\r\n  // };\r\n\r\n  // const getMinAmount = () => {\r\n  //   if (bankName === 'bank1') return 100;\r\n  //   if (bankName === 'bank2') return 10000;\r\n  //   return 0;\r\n  // };\r\n\r\n  // const validateAmount = (value) => {\r\n  //   const numericValue = Number(value);\r\n  //   if (!value) return 'Amount is required';\r\n  //   if (isNaN(numericValue)) return 'Amount must be a number';\r\n  //   if (numericValue < getMinAmount()) return `Min: ₹${getMinAmount()}`;\r\n  //   if (numericValue > getMaxAmount()) return `Max: ₹${getMaxAmount()}`;\r\n  //   if (numericValue > availableLimit) return `Only ₹${availableLimit} available`;\r\n  //   return '';\r\n  // };\r\n\r\n  const validateOtp = (value) => {\r\n    if (!value) return 'OTP is required';\r\n    if (!/^\\d{6}$/.test(value)) return 'OTP must be 6 digits';\r\n    return '';\r\n  };\r\n\r\n  const validatePin = (value) => {\r\n    if (!value) return 'PIN is required';\r\n    if (!/^\\d{4}$/.test(value)) return 'PIN must be 4 digits';\r\n    return '';\r\n  };\r\n\r\n  // const handleAmountChange = (e) => {\r\n  //   const value = e.target.value;\r\n  //   setAmount(value);\r\n  //   setAmountError(validateAmount(value));\r\n  // };\r\n\r\n  // const handleGenerateOTP = withLocation( async(latitude, longitude) => {\r\n  //   const err = validateAmount(amount);\r\n  //   setAmountError(err);\r\n  //   if (!err) \r\n  //     {\r\n  //     setOtpLoading(true);\r\n  //     let body = {\r\n  //         recipient_id: recipient.recipient_id,\r\n  //         amount:amount,\r\n  //         customer_mobile: recipient.recipient_mobile,\r\n  //         channel: transferMode,\r\n  //         beneficiary_name: recipient?.bank_account_name || recipient?.recipient_name,\r\n  //         bank_name: recipient.bank,\r\n  //         ifsc_code: recipient.ifsc,\r\n  //         account_number: recipient.account,\r\n  //         customer_name: customer?.name,\r\n  //         bank_id: recipient.bankId,\r\n  //         api_id: selectedBank,\r\n  //         user_id: window.localStorage.getItem('userIdToken'),\r\n  //         latlong: `${latitude},${longitude}`\r\n  //     }\r\n  //     try {\r\n  //         let res =   await  sendbank3MoneyTransdmt(body)\r\n  //         if(res?.data?.error === false)\r\n  //         {\r\n  //           setOtpSent(true);\r\n  //           setOtpResponse(res?.data?.data?.value)\r\n  //         } \r\n  //         toastMessage(res?.data?.error , res?.data?.message)\r\n  //     } catch (error) {\r\n\r\n  //     }\r\n  //     finally{\r\n\r\n  //         setOtpLoading(false);\r\n  //     }\r\n\r\n\r\n  //     // setOtpSent(true);\r\n  //     // alert('OTP sent to your registered number');\r\n  //   }\r\n  // })\r\n\r\n  const handleSubmitOtp = () => {\r\n    const err = validateOtp(otp);\r\n    setOtpError(err);\r\n    if (!err) {\r\n      setOtpVerified(true);\r\n      // alert('OTP verified successfully');\r\n    }\r\n  };\r\n\r\n  const handleSendMoney = withLocation(async (latitude, longitude) => {\r\n    const pinErr = validatePin(pin);\r\n    setPinError(pinErr);\r\n    if (!pinErr) {\r\n      setMoneyLoading(true);\r\n      let body = {\r\n        recipient_id: recipient.recipient_id,\r\n        amount: amount,\r\n        customer_mobile: recipient.recipient_mobile,\r\n        channel: transferMode,\r\n        beneficiary_name: recipient?.bank_account_name || recipient?.recipient_name,\r\n        bank_name: recipient.bank,\r\n        ifsc_code: recipient.ifsc,\r\n        account_number: recipient.account,\r\n        customer_name: customer?.name,\r\n        // bank_id: recipient.bankId,\r\n        api_id: selectedBank,\r\n        user_id: window.localStorage.getItem('userIdToken'),\r\n        latlong: `${latitude},${longitude}`,\r\n        tpin: pin\r\n      }\r\n      if (bankName === 'bank1') {\r\n        body.otp = otp\r\n        body.value = otpResponse\r\n      }\r\n      try {\r\n        const res = await sendMoneyTrans(body);\r\n        toastMessage(res?.data?.error, res?.data?.message)\r\n        if (res?.data?.statusCode === '200' || res?.data?.statusCode === '127') {\r\n          //\r\n          // setTimeout(()=>{\r\n          //     onClose();\r\n          // },1000)\r\n          setInvoiceId(res?.data?.data?.[0]?.batchId)\r\n          setCurrentPage('invoice')\r\n\r\n          walletCall()\r\n\r\n        }\r\n        if (res?.data?.statusCode === '400') {\r\n          setTimeout(() => {\r\n            onClose();\r\n          }, 400)\r\n        }\r\n\r\n        if (res?.data?.statusCode === '405') {\r\n          onClose();\r\n          setOtpResponse('')\r\n          setOtpVerified(false);\r\n          otpSent(false)\r\n        }\r\n\r\n\r\n        setTimeout(() => {\r\n          setPin('')\r\n        }, 500)\r\n        //   if(res?.data?.statusCode)\r\n        //   setTimeout(()=>{\r\n        //     onClose();\r\n        // },1000)\r\n\r\n\r\n      } catch (error) {\r\n\r\n      }\r\n      finally {\r\n        setMoneyLoading(false);\r\n      }\r\n      // alert(`Money sent: ₹${amount} via ${transferMode}`);\r\n\r\n    }\r\n  })\r\n\r\n  const renderStep = () => {\r\n    const showAmountInput = !otpSent && bankName === 'bank1' || !otpSent && bankName === 'bank2';\r\n    const showOtpInput = bankName === 'bank1' && otpSent && !otpVerified;\r\n    const showPinInput = bankName === 'bank1' && otpVerified || bankName === 'bank2' && otpSent;\r\n\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n        {/* <CustomTextField\r\n                  fullWidth\r\n                  label=\"Amount\"\r\n                  placeholder={`₹ Min: ${getMinAmount()} / Max: ${getMaxAmount()}`}\r\n                  value={amount}\r\n                  disabled={!showAmountInput}\r\n                  onChange={handleAmountChange}\r\n                  error={!!amountError}\r\n                  helperText={amountError}\r\n                  size=\"small\"\r\n                \r\n                /> */}\r\n        {/* Step 1: Amount (both banks) */}\r\n        {/* {showAmountInput && (\r\n              <>\r\n             \r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                 \r\n                  onClick={bankName === 'bank1' ? handleGenerateOTP : () => setOtpSent(true)}\r\n                 \r\n                  sx={{ mt: 2 ,   borderColor: \"var(--bs-primary1)\",\r\n       \r\n                    backgroundColor: \"var(--bs-primary1)\",\r\n                    color: \"white\", }}\r\n                  disabled={!!amountError || !amount || otpLoading}\r\n                >\r\n                  {bankName === 'bank1' ? 'Generate OTP' : 'Next'}\r\n                  {otpLoading ? 'Generating OTP...' : bankName === 'bank1' ? 'Generate OTP' : 'Next'}\r\n                </Button>\r\n              </>\r\n            )} */}\r\n\r\n        {/* Step 2: OTP (bank1 only) */}\r\n        {showOtpInput && (\r\n          <>\r\n            <CustomTextField\r\n              fullWidth\r\n              label=\"Enter OTP\"\r\n              placeholder={'Enter 6 Digit Otp'}\r\n              value={otp}\r\n\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                if (/^\\d{0,6}$/.test(value)) {\r\n                  setOtp(value);\r\n                }\r\n              }}\r\n              inputProps={{ maxLength: 6 }}\r\n              error={!!otpError}\r\n              helperText={otpError}\r\n              size=\"small\"\r\n              className=\"mt-3\"\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              onClick={handleSubmitOtp}\r\n              sx={{\r\n                mt: 2, borderColor: \"var(--bs-primary1)\",\r\n\r\n                backgroundColor: \"var(--bs-primary1)\",\r\n                color: \"white\",\r\n              }}\r\n              disabled={!otp || otp.length != 6}\r\n\r\n            >\r\n              Submit OTP\r\n            </Button>\r\n          </>\r\n        )}\r\n\r\n        {/* Step 3: PIN (both banks) */}\r\n        {showPinInput && (\r\n          <>\r\n            <CustomTextField\r\n              fullWidth\r\n              label=\"4-digit PIN\"\r\n              type=\"password\"\r\n              value={pin}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                if (/^\\d{0,4}$/.test(value)) {\r\n                  setPin(value);\r\n                }\r\n              }}\r\n              inputProps={{ maxLength: 4 }}\r\n              error={!!pinError}\r\n              helperText={pinError}\r\n              size=\"small\"\r\n              className=\"mt-3\"\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              onClick={handleSendMoney}\r\n\r\n              sx={{\r\n                mt: 2, borderColor: \"var(--bs-primary1)\",\r\n\r\n                backgroundColor: \"var(--bs-primary1)\",\r\n                color: \"white\",\r\n              }}\r\n              disabled={pin.length != 4 || moneyLoading}\r\n\r\n            >\r\n\r\n              {moneyLoading ? 'Sending...' : 'Send Money'}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Dialog open={open} maxWidth=\"sm\" fullWidth\r\n      onClose={() => { }}\r\n      disableEscapeKeyDown\r\n      disableBackdropClick\r\n      // For MUI v5+ use this:\r\n      PaperProps={{ onClick: (e) => e.stopPropagation() }}\r\n    >\r\n      <DialogTitle align=\"center\" sx={{ fontWeight: 'bold', color: 'var(--bs-primary1)' }}>\r\n        Send Money\r\n      </DialogTitle>\r\n      <Typography align=\"center\" color=\"var(--bs-primary1)\" fontWeight=\"bold\" mt={-2}>\r\n        {otpSent && !otpVerified && 'Please enter your otp'}\r\n        {otpSent && otpVerified && 'Please enter your Tpin'}\r\n      </Typography>\r\n\r\n      <DialogContent>\r\n        {/* <Typography display=\"flex\" justifyContent=\"space-between\" >\r\n            <strong style={{color:'var(--bs-nav)'}}>NAME :</strong>\r\n            <strong style={{ color: 'var(--bs-nav)'}}>{recipient.recipient_name}</strong>\r\n          </Typography>\r\n          <Typography display=\"flex\" justifyContent=\"space-between\">\r\n            <strong style={{color:'var(--bs-nav)'}}>MOBILE :</strong>\r\n            <strong style={{ color: 'var(--bs-nav)' }}>{recipient.recipient_mobile}</strong>\r\n          </Typography>\r\n          <Typography display=\"flex\" justifyContent=\"space-between\">\r\n            <strong style={{color:'var(--bs-nav)'}}>IFSC CODE :</strong>\r\n            <strong style={{ color: 'var(--bs-nav)'  }}>{recipient.ifsc}</strong>\r\n          </Typography>\r\n          <Typography display=\"flex\" justifyContent=\"space-between\">\r\n            <strong style={{color:'var(--bs-nav)'}}>ACCOUNT NUMBER :</strong>\r\n            <strong style={{ color: 'var(--bs-nav)' }}>{recipient.account}</strong>\r\n          </Typography>\r\n          <Typography display=\"flex\" justifyContent=\"space-between\">\r\n            <strong style={{color:'var(--bs-nav)'}} >BANK NAME :</strong>\r\n            <strong style={{color:'var(--bs-nav)'}} >{recipient.bank}</strong>\r\n          \r\n          </Typography> */}\r\n\r\n        <Box mt={2}>{renderStep()}</Box>\r\n\r\n        {/* <Typography align=\"center\" mt={2} fontWeight=\"bold\" color=\"orangered\">\r\n            Select Transfer Mode\r\n          </Typography> */}\r\n        {/*   \r\n          <RadioGroup\r\n            row\r\n            value={transferMode}\r\n            onChange={(e) => setTransferMode(e.target.value)}\r\n            sx={{ justifyContent: 'center' }}\r\n          >\r\n            <FormControlLabel value=\"1\" control={<Radio color=\"warning\" />} label=\"IMPS\" />\r\n            <FormControlLabel value=\"2\" control={<Radio color=\"warning\" />} label=\"NEFT\" />\r\n          </RadioGroup> */}\r\n      </DialogContent>\r\n\r\n      <DialogActions sx={{ justifyContent: 'end', pb: 2, pr: 4 }}>\r\n        <Button variant=\"outlined\" color=\"warning\" onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst BankTransferMoneyTransferPage = () => {\r\n\r\n  const { setGlobalLoader, selectedBank, customer, setCurrentPage, allBank } = useBankTransfer()\r\n  const bankNameObj = allBank.find((item) => item?._id === selectedBank);\r\n  const bankName = bankNameObj?.name || '';\r\n  const totalLimit = customer?.total_limit;\r\n  const usedLimit = customer?.used_limit;\r\n  const availableLimit = totalLimit - usedLimit;\r\n  const usedPercentage = (usedLimit / totalLimit) * 100;\r\n  const [beneficiaryList, setBeneficiaryList] = useState([])\r\n  const [resetKey, setResetKey] = useState(false)\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [recipientData, setRecipientData] = useState(null)\r\n  const [amounts, setAmounts] = useState({});\r\n  const [amountErrors, setAmountErrors] = useState({});\r\n  const [transferModes, setTransferModes] = useState({});\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [transferMode, setTransferMode] = useState('1');\r\n  const [otpResponse, setOtpResponse] = useState('')\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const getMaxAmount = () => {\r\n    if (bankName === 'bank1') {\r\n      return availableLimit > 5000 ? 5000 : availableLimit;\r\n    }\r\n    if (bankName === 'bank2') {\r\n      return 25000;\r\n    }\r\n    return availableLimit;\r\n  };\r\n\r\n  const getMinAmount = () => {\r\n    if (bankName === 'bank1') return 100;\r\n    if (bankName === 'bank2') return 10000;\r\n    return 0;\r\n  };\r\n\r\n  const validateAmount = (value) => {\r\n    const numericValue = Number(value);\r\n    const min = getMinAmount();\r\n    const max = getMaxAmount();\r\n\r\n    if (!value) return 'Amount is required';\r\n    if (isNaN(numericValue)) return 'Amount must be a number';\r\n    if (numericValue < min) return `Min: ₹${min}`;\r\n    if (numericValue > max) return `Max: ₹${max}`;\r\n    if (numericValue > availableLimit) return `Only ₹${availableLimit} available`;\r\n\r\n    return '';\r\n  };\r\n\r\n  const handleAmountChange = (recipientId, value) => {\r\n    const error = validateAmount(value);\r\n\r\n    setAmounts((prev) => ({ ...prev, [recipientId]: value }));\r\n    setAmountErrors((prev) => ({ ...prev, [recipientId]: error }));\r\n  };\r\n\r\n  const getBenificiers = async () => {\r\n    let body = {\r\n      mobile: customer?.mobile,\r\n      api_id: selectedBank\r\n    }\r\n    let res = await reciptList(body)\r\n    setBeneficiaryList(res?.data?.data || [])\r\n  }\r\n\r\n\r\n  const verifyBankAccount = async (value) => {\r\n    const clone = {\r\n      name: value.recipient_name,\r\n      ifsc: value.ifsc,\r\n      bankAccount: value.account,\r\n      phone: value.recipient_mobile,\r\n      recipient_id: value.recipient_id,\r\n      bank_id: value.bankId,\r\n      api_id: selectedBank,\r\n      user_id: window.localStorage.getItem('userIdToken')\r\n    };\r\n    setGlobalLoader(true)\r\n    try {\r\n      const res = await verificationBank(clone);\r\n      toastMessage(res?.data?.error, res?.data?.message)\r\n      setResetKey((pre) => !pre)\r\n    } catch (error) {\r\n\r\n    } finally {\r\n      setGlobalLoader(false)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getBenificiers()\r\n  }, [resetKey])\r\n\r\n\r\n\r\n  const handleGenerateOTP = withLocation(async (latitude, longitude, recipient, amount, transferMode) => {\r\n    // const err = validateAmount(amount);\r\n    // setAmountError(err);\r\n    // if (!err) \r\n    //   {\r\n    console.log(recipient, \"re\")\r\n    setGlobalLoader(true);\r\n    let body = {\r\n      recipient_id: recipient.recipient_id,\r\n      amount: amount,\r\n      customer_mobile: recipient.recipient_mobile,\r\n      channel: transferMode,\r\n      beneficiary_name: recipient?.bank_account_name || recipient?.recipient_name,\r\n      bank_name: recipient.bank,\r\n      ifsc_code: recipient.ifsc,\r\n      account_number: recipient.account,\r\n      customer_name: customer?.name,\r\n      // bank_id: recipient.bankId,\r\n      api_id: selectedBank,\r\n      user_id: window.localStorage.getItem('userIdToken'),\r\n      latlong: `${latitude},${longitude}`\r\n    }\r\n    try {\r\n      let res = await sendbank3MoneyTransdmt(body)\r\n      if (res?.data?.error === false) {\r\n        setOtpSent(true);\r\n        setShowModal(true)\r\n        setOtpResponse(res?.data?.data?.value)\r\n      }\r\n      toastMessage(res?.data?.error, res?.data?.message)\r\n    } catch (error) {\r\n\r\n    }\r\n    finally {\r\n\r\n      setGlobalLoader(false);\r\n    }\r\n\r\n\r\n    // setOtpSent(true);\r\n    // alert('OTP sent to your registered number');\r\n    // }\r\n  })\r\n\r\n  const sendMoney = (value) => {\r\n    console.log(value)\r\n    const amount = amounts[value.recipient_id];\r\n    const transferMode1 = transferModes[value.recipient_id] || '2';\r\n    setTransferMode(transferMode1)\r\n    setAmount(amount)\r\n\r\n    if (bankName === 'bank1') {\r\n      handleGenerateOTP(value, amount, transferMode1)\r\n    }\r\n    else {\r\n      setOtpSent(true)\r\n      setShowModal(true)\r\n    }\r\n\r\n    setRecipientData(value)\r\n    // setOtpSent(true)\r\n    // setShowModal(true)\r\n  }\r\n\r\n  const handleDeleteBeneficiary = async (value) => {\r\n    let body = {\r\n      customer_mobile: customer?.mobile,\r\n      recipient_id: value?.recipient_id,\r\n      user_id: window.localStorage.getItem('userIdToken'),\r\n      api_id: selectedBank\r\n    }\r\n    setGlobalLoader(true)\r\n    try {\r\n      let res = await BENEFICIARYDelete(body)\r\n      if (res?.data?.statusCode == 200) {\r\n        setResetKey((pre) => !pre)\r\n      }\r\n      toastMessage(res?.data?.error, res?.data?.message)\r\n    } catch (error) {\r\n\r\n    } finally {\r\n      setGlobalLoader(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CustomBox>\r\n        {/* <Card sx={{ borderRadius: 3, p: 2 }}> */}\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\" pr={4}>\r\n          {/* Left Section: Avatar and Info */}\r\n          <Grid item >\r\n            <Box display=\"flex\" alignItems=\"center\" gap={2}  >\r\n              <IconButton onClick={() => setCurrentPage('money-transfer')}>\r\n                <ArrowBackIosNewIcon />\r\n              </IconButton>\r\n              <Avatar sx={{ width: 40, height: 40 }}>{customer?.name?.substring(0, 1)}</Avatar>\r\n              <Box>\r\n\r\n                <Typography variant=\"body2\" color='var(--bs-nav)' fontWeight=\"bold\" fontSize={16}>\r\n                  Customer Name :\r\n                  <Typography component=\"body2\" color='var(--bs-nav)' sx={{ opacity: 0.8, ml: 1 }}>\r\n                    {customer?.name}\r\n                  </Typography>\r\n                </Typography>\r\n                {/* <Typography variant=\"body2\" color=\"text.secondary\">\r\n                Account Number ••••1234\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                Bank of Something\r\n              </Typography> */}\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n\r\n          {/* Right Section: Limit Info */}\r\n\r\n          {bankName === 'bank2' ? <>{null}</> :\r\n            <Grid item>\r\n              <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n                {/* Circular Limit */}\r\n                <Box position=\"relative\" display=\"inline-flex\">\r\n                  {/* Background Circle (Total Limit) */}\r\n                  <CircularProgress\r\n                    variant=\"determinate\"\r\n                    // value={100}\r\n                    size={96}\r\n                  // thickness={5}\r\n                  // sx={{ color: '#e0e0e0' }} // Light gray background\r\n                  />\r\n                  {/* Foreground Circle (Used Limit) */}\r\n                  <CircularProgress\r\n                    variant=\"determinate\"\r\n                    value={usedPercentage}\r\n                    size={96}\r\n                    thickness={2}\r\n                    sx={{\r\n                      color: 'error.main',\r\n                      position: 'absolute',\r\n                      left: 0\r\n                    }}\r\n                  />\r\n                  {/* Text in the center */}\r\n                  <Box\r\n                    top={0}\r\n                    left={0}\r\n                    bottom={0}\r\n                    right={0}\r\n                    position=\"absolute\"\r\n                    display=\"flex\"\r\n                    flexDirection=\"column\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                  >\r\n                    <Typography variant=\"caption\" color=\"error.main\" fontWeight=\"bold\">\r\n                      ₹{usedLimit}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      Limit used\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n\r\n\r\n                {/* Text Details */}\r\n                <Box>\r\n                  <Typography variant=\"body2\" color='var(--bs-nav)' fontSize={16} fontWeight=\"bold\">\r\n                    Available Transfer Limit:{' '}\r\n                    <Typography component=\"body2\" color='var(--bs-nav)' sx={{ opacity: 0.8 }}>\r\n                      ₹{availableLimit}\r\n                    </Typography>\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color='var(--bs-nav)' fontSize={16} fontWeight=\"bold\">\r\n                    Total Transfer Limit:{' '}\r\n                    <Typography component=\"body2\" color='var(--bs-nav)' sx={{ opacity: 0.8 }}>\r\n                      ₹{totalLimit}\r\n                    </Typography>\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Grid>}\r\n        </Grid>\r\n        {/* </Card> */}\r\n\r\n        <Divider sx={{ my: 2 }} />\r\n        <Box >\r\n          <Box display={'flex'} justifyContent={'flex-end'}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n\r\n              sx={{\r\n                height: 40,\r\n                borderColor: 'var(--bs-nav)', // Custom colors\r\n\r\n                backgroundColor: 'var(--bs-nav)', // Custom colors\r\n                color: \"white\",\r\n\r\n              }}\r\n              onClick={() => setCurrentPage('add-newBeneficiaryPage')}\r\n            >\r\n              Add New Beneficiary\r\n            </Button>\r\n\r\n          </Box>\r\n\r\n          <Card sx={{ p: 0, borderRadius: 4, boxShadow: 0 }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" mb={2}>\r\n                Send Money\r\n              </Typography>\r\n\r\n              {beneficiaryList?.length > 0 ? beneficiaryList?.map((recipient) => (\r\n                <Card key={recipient.recipient_id} sx={{ p: 0, mb: 2, borderRadius: 4, boxShadow: 0 }}>\r\n                  <Grid container spacing={2} alignItems=\"center\">\r\n                    {/* User Info */}\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n                        <Avatar sx={{ bgcolor: 'transparent' }}>\r\n                          <AccountBalanceIcon />\r\n                        </Avatar>\r\n                        <Box>\r\n                          <Typography fontWeight=\"bold\" fontSize={14}>\r\n                            {recipient.recipient_name}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\" fontSize={12}>\r\n                            {recipient.bank}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\" fontSize={12}>\r\n                            {recipient.ifsc}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\" fontSize={12}>\r\n                            AC: {recipient.account}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                    </Grid>\r\n\r\n                    {/* Verified Status */}\r\n                    <Grid item xs={6} sm={4} md={1.5}>\r\n                      <Box display=\"flex\" alignItems=\"center\" color={recipient.isVerified ? 'green' : 'gray'}>\r\n                        {recipient.isVerified ? <MdVerified style={{ fontSize: '14px', fill: \"var(--bs-nav)\" }} /> : <IoIosCloseCircleOutline style={{ fontSize: '14px' }} />}\r\n\r\n                        <Typography ml={0.5} fontWeight=\"bold\">\r\n                          {recipient.isVerified ? 'Verified' : 'Not Verified'}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={1.5}>\r\n                      <Button variant='outlined' color=\"primary\" size=\"small\"\r\n                        disabled={recipient.isVerified}\r\n                        onClick={() => verifyBankAccount(recipient)}\r\n                        sx={{\r\n                          borderColor: 'var(--bs-primary1)', // Custom colors\r\n                          fontSize: '12px',\r\n                          // backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                          color: \"var(--bs-primary1)\",\r\n\r\n                        }}>\r\n\r\n\r\n                        Verify\r\n                      </Button>\r\n                    </Grid>\r\n                    {/* Amount Input */}\r\n                    <Grid item xs={6} sm={4} md={2}>\r\n                      {/* <TextField size=\"small\" placeholder=\"Enter amount\" fullWidth /> */}\r\n                      <CustomTextFieldForAmount\r\n                        fullWidth\r\n                        label=\"Amount\"\r\n                        placeholder={`₹ Min: ${getMinAmount()} / Max: ${getMaxAmount()}`}\r\n                        value={amounts[recipient.recipient_id] || ''}\r\n                        onChange={(e) => handleAmountChange(recipient.recipient_id, e.target.value)}\r\n                        error={!!amountErrors[recipient.recipient_id]}\r\n                        helperText={amountErrors[recipient.recipient_id]}\r\n                        size=\"small\"\r\n\r\n                      />\r\n                    </Grid>\r\n\r\n                    {/* IMPS / NEFT */}\r\n\r\n                    <Grid item xs={12} sm={6} md={2}>\r\n                      <RadioGroup\r\n                        row\r\n                        name={`transferType-${recipient.recipient_id}`}\r\n                        sx={{\r\n                          justifyContent: 'center',\r\n                          '& .MuiFormControlLabel-label': { fontSize: 10 },\r\n                        }}\r\n                        value={transferModes[recipient.recipient_id] || '2'} // Default to IMPS (value \"1\")\r\n                        onChange={(e) =>\r\n                          setTransferModes((prev) => ({\r\n                            ...prev,\r\n                            [recipient.recipient_id]: e.target.value,\r\n                          }))\r\n                        }\r\n                      >\r\n                        <FormControlLabel value=\"2\" control={<Radio size=\"small\" />} label=\"IMPS\" />\r\n                        <FormControlLabel value=\"1\" control={<Radio size=\"small\" />} label=\"NEFT\" />\r\n                      </RadioGroup>\r\n                    </Grid>\r\n\r\n                    {/* Send Buttons */}\r\n                    <Grid item xs={12} sm={6} md={2}>\r\n                      <Box display=\"flex\" justifyContent={{ xs: 'flex-start', md: 'flex-end' }} gap={1}>\r\n                        <Button\r\n                          disabled={!!amountErrors[recipient.recipient_id] || !amounts[recipient.recipient_id]}\r\n                          onClick={() => sendMoney(recipient)} variant=\"contained\" color=\"primary\" size=\"small\"\r\n                          sx={{\r\n                            borderColor: 'var(--bs-primary1)', // Custom colors\r\n                            fontSize: '12px',\r\n                            backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                            color: \"white\",\r\n\r\n                          }}>\r\n\r\n                          Send\r\n                        </Button>\r\n                        <Popconfirm\r\n                          title=\"Delete\"\r\n                          description=\"Are you sure to Delete ?\"\r\n                          onConfirm={() => handleDeleteBeneficiary(recipient)}\r\n                          onCancel={() => { }}\r\n                          okText=\"Yes\"\r\n                          cancelText=\"No\"\r\n                          okButtonProps={{\r\n                            className: 'popoverconfirm',\r\n                            style: {\r\n                              backgroundColor: 'var(--bs-primary1)',\r\n                              borderColor: 'var(--bs-primary1)',\r\n\r\n                            },\r\n\r\n                          }}\r\n                        >\r\n\r\n\r\n                          <Button variant=\"outlined\" color=\"error\" size=\"small\">\r\n                            <Delete sx={{ fill: 'red' }} />\r\n                          </Button>\r\n                        </Popconfirm>\r\n                      </Box>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Card>\r\n              ))\r\n                :\r\n                <Typography variant='body2' textAlign={'center'} >\r\n                  No Benefiaries Found\r\n                </Typography>\r\n              }\r\n\r\n            </CardContent>\r\n          </Card>\r\n\r\n        </Box>\r\n      </CustomBox>\r\n\r\n      {showModal && <SendMoneyPopup otpResponse={otpResponse} transferMode={transferMode} amount={amount}\r\n\r\n        otpSent={otpSent} setOtpSent={setOtpSent} open={showModal} onClose={() => setShowModal(false)} recipient={recipientData} />}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst AddNewBeneficiaryPage = () => {\r\n  const { walletCall, setGlobalLoader, customer, selectedBank, setCurrentPage } = useBankTransfer()\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitLoading, setSubmitLoading] = useState(false);\r\n  const [verficationCharges, setVerificationCharges] = useState('')\r\n  const [bankOptions, setBankOptions] = useState([]);\r\n  const [bankSelected, setBankSelected] = useState(null);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [otp, setOtp] = useState()\r\n  const [open, setOpen] = useState(false)\r\n  const [otpRecipentId, setOtpRecipentId] = useState('')\r\n\r\n  const handleClose = () => {\r\n    setOtp('');\r\n    setOpen(false)\r\n    setOtpRecipentId('')\r\n  };\r\n\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    account_number: \"\",\r\n    ifsc: \"\",\r\n  });\r\n\r\n  const getVerificationCharges = async () => {\r\n\r\n    try {\r\n      let res = await getDMtcharges()\r\n      setVerificationCharges(res?.data?.data?.bankVerificationCharge)\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const fetchBank = async () => {\r\n    try {\r\n      let res = await bankListApiwithid(selectedBank)\r\n      const data = res?.data?.data?.map(item => ({\r\n        ...item,\r\n        label: item.bank_name,\r\n        value: item.bankID,\r\n      })) || [];\r\n\r\n      setBankOptions(data);\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchBank()\r\n    getVerificationCharges()\r\n  }, [])\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm(prev => ({\r\n      ...prev,\r\n      [name]: name === \"name\" ? value.replace(/[^a-zA-Z\\s]/g, \"\") : value,\r\n    }));\r\n  };\r\n\r\n  const handleBankSelect = (bank) => {\r\n    setBankSelected(bank);\r\n    setForm(prev => ({\r\n      ...prev,\r\n      ifsc: bank?.ifsc_code || '',\r\n    }));\r\n  };\r\n  // const isFormValid = true\r\n  const isFormValid = form.name && form.account_number && form.ifsc && bankSelected;\r\n\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    setSubmitLoading(true);\r\n    const body = {\r\n\r\n      recipient_name: form.name,\r\n      customer_mobile: customer?.mobile,\r\n      account_number: form?.account_number,\r\n      ifsc: form?.ifsc || '',\r\n      bank_code: bankSelected?.bankID || '',\r\n      bank_id: bankSelected?._id,\r\n      recipient_mobile: customer?.mobile,\r\n      isVerified: isVerified,\r\n      bank_name: bankSelected?.bank_name || '',\r\n      api_id: selectedBank,\r\n      user_id: window.localStorage.getItem('userIdToken')\r\n    };\r\n\r\n    try {\r\n      const res = await BENEFICIARYAdd(body)\r\n      if (res?.data?.statusCode === 201) {\r\n        setOpen(true)\r\n        setOtpRecipentId(res?.data?.data?.recipient_id)\r\n      }\r\n\r\n      if (res?.data?.statusCode === 200) {\r\n        setCurrentPage('send-money-page')\r\n\r\n      }\r\n\r\n      toastMessage(res?.data?.error, res?.data?.message)\r\n    } catch (error) {\r\n\r\n    }\r\n    finally {\r\n      setSubmitLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleBankVerify = async () => {\r\n    const body = {\r\n      account_number: form.account_number,\r\n      ifsc: form.ifsc,\r\n      bank_name: bankSelected.bank_name,\r\n      name: form.name,\r\n      bankAccount: form.account_number,\r\n      phone: customer.mobile\r\n    };\r\n\r\n    setLoading(true);\r\n    try {\r\n      let res = await verificationBank(body)\r\n      if (res?.data?.statusCode === \"200\") {\r\n        setIsVerified(true);\r\n        setForm(() => ({\r\n          name: res?.data?.data?.bank_account_name,\r\n          ifsc: res?.data?.data?.bank_ifsc,\r\n          account_number: res?.data?.data?.bank_account_number\r\n        }))\r\n        walletCall()\r\n      }\r\n\r\n      toastMessage(res?.data?.error, res?.data?.message)\r\n    } catch (error) {\r\n\r\n    }\r\n    finally {\r\n      setLoading(false);\r\n    }\r\n\r\n  }\r\n\r\n  const handleOtpVerify = async () => {\r\n    let body = {\r\n      recipient_id: otpRecipentId,\r\n      customer_mobile: customer?.mobile,\r\n      otp: otp,\r\n    }\r\n    setGlobalLoader(true)\r\n    try {\r\n      const res = await veryOtpaddbene(body)\r\n      if (res?.data?.statusCode == 200) {\r\n        handleClose()\r\n        setCurrentPage('send-money-page')\r\n      }\r\n      toastMessage(res?.data?.error, res?.data?.message)\r\n    } catch (error) {\r\n\r\n    }\r\n    finally {\r\n      setGlobalLoader(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <CustomBox>\r\n        <Box display=\"flex\" alignItems=\"center\" gap={2}  >\r\n          <IconButton onClick={() => customer.hasOwnProperty(\"mobile\") ? setCurrentPage('send-money-page') : setCurrentPage('money-transfer')\r\n\r\n\r\n          }>\r\n            <ArrowBackIosNewIcon />\r\n          </IconButton>\r\n          <Typography variant=\"body2\" color='var(--bs-nav)' fontWeight=\"bold\" fontSize={18}>\r\n            Add New Beneficiary\r\n\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box maxWidth={'800px'} m={'auto'} mt={3}>\r\n          <Grid container spacing={3} >\r\n            <Grid item xs={12} md={6}>\r\n              <CustomTextField\r\n                fullWidth\r\n                label=\"Beneficiary Name\"\r\n                name=\"name\"\r\n                value={form.name}\r\n                onChange={handleChange}\r\n                disabled={isVerified}\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Select\r\n                value={bankSelected}\r\n                onChange={handleBankSelect}\r\n                options={bankOptions}\r\n                placeholder=\"Select Bank\"\r\n\r\n                isClearable\r\n                isSearchable\r\n                menuPortalTarget={document.body}\r\n                isDisabled={isVerified}\r\n                styles={{\r\n                  /* the “pill” you click */\r\n                  control: (base, state) => ({\r\n                    ...base,\r\n                    minHeight: 40,\r\n                    borderRadius: 4,\r\n                    borderColor: state.isFocused ? \"var(--bs-primary1)\" : \"#ced4da\",\r\n                    boxShadow: state.isFocused\r\n                      ? \"0 0 0 1px var(--bs-primary1)\"\r\n                      : \"none\",\r\n                    \"&:hover\": { borderColor: \"var(--bs-primary1)\" }\r\n                  }),\r\n\r\n                  /* greyed‑out hint inside the control */\r\n                  placeholder: base => ({\r\n                    ...base,\r\n                    color: \"#6c757d\",\r\n                    fontSize: 14\r\n                  }),\r\n\r\n                  /* the currently selected value */\r\n                  singleValue: base => ({\r\n                    ...base,\r\n                    color: \"#212529\",\r\n                    fontWeight: 500,\r\n                    fontSize: 14\r\n                  }),\r\n\r\n                  /* the outer menu list */\r\n                  menu: base => ({\r\n                    ...base,\r\n                    zIndex: 20,             // keeps it on top of dialogs\r\n                    fontSize: 14\r\n                  }),\r\n\r\n                  /* each individual option row */\r\n                  option: (base, state) => ({\r\n                    ...base,\r\n                    fontSize: 14,\r\n                    fontWeight: state.isSelected ? 500 : 400,\r\n                    color: state.isSelected ? \"var(--bs-primary1)\" : \"#212529\",\r\n                    backgroundColor: state.isSelected\r\n                      ? \"white\"\r\n                      : state.isFocused\r\n                        ? \"white\" // subtle tint\r\n                        : \"white\",\r\n                    \"&:hover\": {\r\n                      backgroundColor: \"var(--bs-primary1)\",\r\n                      color: \"#fff\",\r\n                    }\r\n                  }),\r\n\r\n                  /* lets the menu escape overflow:hidden containers */\r\n                  menuPortal: base => ({ ...base, zIndex: 9999 })\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <CustomTextField\r\n                fullWidth\r\n                label=\"IFSC Code\"\r\n                name=\"ifsc\"\r\n                value={form.ifsc}\r\n                onChange={handleChange}\r\n                disabled={isVerified}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <CustomTextField\r\n                fullWidth\r\n                label=\"Account Number\"\r\n                name=\"account_number\"\r\n                value={form.account_number}\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                disabled={isVerified}\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n          <Typography color=\"var(--bs-nav)\" sx={{ mt: 2 }} fontWeight={500}>\r\n            Account Verification Charge: ₹ {verficationCharges || 0}\r\n          </Typography>\r\n          <Box sx={{ display: \"flex\", gap: 2, mt: 2, justifyContent: 'space-between' }}>\r\n            <Button\r\n              variant='outlined'\r\n              color=\"info\"\r\n              width={'200px'}\r\n              disabled={!isFormValid || isVerified}\r\n              onClick={handleBankVerify}\r\n              sx={{\r\n                borderColor: 'var(--bs-primary1)', // Custom colors\r\n\r\n                // backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                color: 'var(--bs-primary1)',\r\n              }}\r\n            // fullWidth\r\n            >\r\n              {loading ? <CircularProgress size={24} color=\"inherit\" /> : \"Account Verification\"}\r\n            </Button>\r\n            <Button\r\n              variant='outlined'\r\n              color=\"info\"\r\n              width={'200px'}\r\n              sx={{\r\n                borderColor: 'var(--bs-primary1)', // Custom colors\r\n\r\n                // backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                color: 'var(--bs-primary1)'\r\n              }}\r\n              disabled={!isFormValid}\r\n              onClick={handleSubmit}\r\n            // fullWidth\r\n            >\r\n              {submitLoading ? <CircularProgress size={24} color=\"inherit\" /> : \"Add Beneficiary\"}\r\n            </Button>\r\n          </Box>\r\n\r\n        </Box>\r\n\r\n\r\n      </CustomBox>\r\n\r\n\r\n      {/* Bank Verification OTP POP UP */}\r\n      <Dialog open={open} onClose={handleClose} maxWidth=\"xs\" fullWidth>\r\n        <DialogTitle sx={{ color: 'var(--bs-primary1)' }}>OTP Verification</DialogTitle>\r\n        <DialogContent>\r\n          <Typography mb={2} sx={{ color: 'var(--bs-primary1)' }}>\r\n            Enter the 6-digit code sent to your mobile number.\r\n          </Typography>\r\n\r\n          <CustomTextFieldAddCustomer\r\n            fullWidth\r\n            label=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => {\r\n              const onlyDigits = e.target.value.replace(/\\D/g, '');\r\n              if (onlyDigits?.length <= 6) setOtp(onlyDigits);\r\n            }}\r\n            inputProps={{ maxLength: 6 }}\r\n            autoFocus\r\n          />\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleOtpVerify} sx={{\r\n            borderColor: 'var(--bs-primary1)', // Custom colors\r\n\r\n            backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n            color: 'white'\r\n          }} variant=\"contained\" disabled={otp?.length < 6}>\r\n            Verify\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst AddCustomer = () => {\r\n  const { selectedBank, setCurrentPage, mobile } = useBankTransfer();\r\n  // const today = new Date().toISOString().split('T')[0];\r\n  const today = new Date();\r\n  const eighteenYearsAgo = new Date(today.getFullYear() - 18, today.getMonth(), today.getDate())\r\n    .toISOString()\r\n    .split('T')[0];\r\n  const hundredYearsAgo = new Date(today.getFullYear() - 100, today.getMonth(), today.getDate())\r\n    .toISOString()\r\n    .split('T')[0];\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    customerMobile: mobile,\r\n    dob: '',\r\n    country: 'India',\r\n    pinCode: '',\r\n    state: '',\r\n    city: '',\r\n    district: '',\r\n    area: '',\r\n    aadharNumber: ''\r\n  });\r\n\r\n\r\n\r\n  const validationSchema = Yup.object({\r\n    firstName: Yup.string().required('First Name is required'),\r\n    lastName: Yup.string().required('Last Name is required'),\r\n    customerMobile: Yup.string()\r\n      .matches(/^[6-9]\\d{9}$/, 'Enter a valid 10-digit mobile number')\r\n      .required('Mobile number is required'),\r\n    dob: Yup.string().required('Date of Birth is required'),\r\n    pinCode: Yup.string()\r\n      .matches(/^\\d{6}$/, 'Pincode must be 6 digits')\r\n      .required('Pincode is required'),\r\n    state: Yup.string().required('State is required'),\r\n    city: Yup.string().required('City is required'),\r\n    district: Yup.string().required('District is required'),\r\n    area: Yup.string().required('Area is required'),\r\n    aadharNumber: Yup.string()\r\n      .matches(/^\\d{12}$/, 'Aadhaar must be 12 digits')\r\n      .required('Aadhaar number is required'),\r\n  });\r\n\r\n  const handleSubmit = async (values) => {\r\n    console.log('Submitted values:', values);\r\n    // Add API call or logic here\r\n    setFormData(values);\r\n\r\n    let body = {\r\n      user_id: window.localStorage.getItem('userIdToken'),\r\n      customer_mobile: mobile,\r\n      name: values.firstName,\r\n      dob: values.dob,\r\n      country: values.country,\r\n      city: values.city,\r\n      state: values.state,\r\n      pincode: values.pinCode,\r\n      district: values.district,\r\n      area: values.area,\r\n      // otp: '',\r\n      api_id: selectedBank,\r\n      lastName: values.lastName,\r\n      adhaar_number: values.aadharNumber\r\n    }\r\n    try {\r\n      const res = await createCustomer(body)\r\n\r\n      if (res?.data?.statusCode === 200) {\r\n        setCurrentPage('otp-page');\r\n      }\r\n\r\n      if (res?.data?.statusCode === '008') {\r\n        setCurrentPage('otp-page');\r\n      }\r\n\r\n      toastMessage(res?.data?.error, res?.data?.message)\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n  };\r\n\r\n  const fetchPincode = async (value, setFieldValue, setErrors) => {\r\n    try {\r\n      if (!value) {\r\n        setErrors({ pincode: \"Pincode is required\" });\r\n        return;\r\n      } else if (!/^[0-9]{6}$/.test(value)) {\r\n        setErrors({ pincode: \"Pincode must be exactly 6 digits\" });\r\n        return;\r\n      }\r\n\r\n      // Clear previous errors\r\n      setErrors({ pincode: '' });\r\n\r\n      // Fetch details by pincode\r\n      const res = await getDetailByPin(value);\r\n\r\n      if (res?.data?.error) {\r\n        setErrors({ pincode: \"Invalid Pincode or not found\" });\r\n      } else {\r\n        setFieldValue(\"city\", res.data?.data?.city || \"\");\r\n        setFieldValue(\"state\", res.data?.data?.state || \"\");\r\n        setFieldValue('district', res.data?.data?.district || \"\")\r\n        setFieldValue('area', res.data?.data?.sub_distance || \"\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching pincode details:\", error);\r\n      setErrors({ pincode: \"Something went wrong. Please try again.\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CustomBox>\r\n      <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n        <IconButton onClick={() => setCurrentPage('money-transfer')}>\r\n          <ArrowBackIosNewIcon />\r\n        </IconButton>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"var(--bs-nav)\"\r\n          fontWeight=\"bold\"\r\n          fontSize={18}\r\n        >\r\n          Add New Customer\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Box maxWidth=\"1000px\" m=\"auto\">\r\n\r\n        <Formik\r\n          initialValues={formData}\r\n          validationSchema={validationSchema}\r\n          //   onSubmit={handleSubmit}\r\n          onSubmit={async (values, { setSubmitting }) => {\r\n\r\n            await handleSubmit(values);\r\n            setSubmitting(false);\r\n          }}\r\n          enableReinitialize\r\n        >\r\n          {({ errors, touched, setErrors, setFieldValue, isSubmitting }) => (\r\n            <Form>\r\n              <Box p={3}>\r\n                <Grid container rowSpacing={6} columnSpacing={6}>\r\n                  {/* First Row */}\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Field\r\n                      name=\"firstName\"\r\n                      as={CustomTextFieldAddCustomer}\r\n                      label=\"First Name *\"\r\n                      fullWidth\r\n                      error={touched.firstName && Boolean(errors.firstName)}\r\n                      helperText={touched.firstName && errors.firstName}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Field\r\n                      name=\"lastName\"\r\n                      as={CustomTextFieldAddCustomer}\r\n                      label=\"Last Name *\"\r\n                      fullWidth\r\n                      error={touched.lastName && Boolean(errors.lastName)}\r\n                      helperText={touched.lastName && errors.lastName}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* Second Row */}\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Field\r\n                      name=\"customerMobile\"\r\n                      as={CustomTextFieldAddCustomer}\r\n                      label=\"Customer Mobile *\"\r\n                      fullWidth\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Field\r\n                      name=\"dob\"\r\n                      as={CustomTextFieldAddCustomer}\r\n                      label=\"Date Of Birth *\"\r\n                      fullWidth\r\n                      type=\"date\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      error={touched.dob && Boolean(errors.dob)}\r\n                      helperText={touched.dob && errors.dob}\r\n                      // inputProps={{ max: today }}\r\n                      inputProps={{\r\n                        max: eighteenYearsAgo,\r\n                        min: hundredYearsAgo\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* Third Row */}\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Field\r\n                      name=\"country\"\r\n                      as={CustomTextFieldAddCustomer}\r\n                      label=\"Country *\"\r\n                      fullWidth\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Field\r\n                      name=\"pinCode\"\r\n                      as={CustomTextFieldAddCustomer}\r\n                      label=\"Pin Code *\"\r\n                      onChange={(e) => {\r\n                        const value = e.target.value.replace(/\\D/g, \"\").slice(0, 6); // Remove non-digits & limit to 6 digits\r\n                        setFieldValue(\"pinCode\", value);\r\n\r\n                        if (value.length === 6) {\r\n                          fetchPincode(value, setFieldValue, setErrors); // Fetch only when 6 digits entered\r\n                        }\r\n                      }}\r\n                      fullWidth\r\n                      error={touched.pinCode && Boolean(errors.pinCode)}\r\n                      helperText={touched.pinCode && errors.pinCode}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* Fourth Row */}\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Field\r\n                      name=\"state\"\r\n                      as={CustomTextFieldAddCustomer}\r\n                      label=\"State *\"\r\n                      fullWidth\r\n                      error={touched.state && Boolean(errors.state)}\r\n                      helperText={touched.state && errors.state}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Field\r\n                      name=\"city\"\r\n                      as={CustomTextFieldAddCustomer}\r\n                      label=\"City *\"\r\n                      fullWidth\r\n                      error={touched.city && Boolean(errors.city)}\r\n                      helperText={touched.city && errors.city}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* Fifth Row */}\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Field\r\n                      name=\"district\"\r\n                      as={CustomTextFieldAddCustomer}\r\n                      label=\"District *\"\r\n                      fullWidth\r\n                      error={touched.district && Boolean(errors.district)}\r\n                      helperText={touched.district && errors.district}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Field\r\n                      name=\"area\"\r\n                      as={CustomTextFieldAddCustomer}\r\n                      label=\"Area *\"\r\n                      fullWidth\r\n                      error={touched.area && Boolean(errors.area)}\r\n                      helperText={touched.area && errors.area}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* Sixth Row */}\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Field\r\n                      name=\"aadharNumber\"\r\n                      as={CustomTextFieldAddCustomer}\r\n                      label=\"Aadhaar Number *\"\r\n                      fullWidth\r\n                      error={touched.aadharNumber && Boolean(errors.aadharNumber)}\r\n                      helperText={touched.aadharNumber && errors.aadharNumber}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* Submit Button */}\r\n                  <Grid item xs={12}>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{\r\n                      borderColor: 'var(--bs-primary1)', // Custom colors\r\n\r\n                      backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                      color: 'white'\r\n                    }} disabled={isSubmitting} >\r\n                      Submit\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </CustomBox>\r\n  );\r\n};\r\n\r\n\r\nconst OtpPopUp = () => {\r\n  const [open, setOpen] = useState(true)\r\n  const { walletCall, setWadhValue, selectedBank, mobile, setCurrentPage } = useBankTransfer()\r\n  const [otp, setOtp] = useState('');\r\n\r\n\r\n\r\n\r\n  const handleVerify = async () => {\r\n    const clone = {\r\n      customer_mobile: mobile,\r\n      api_id: selectedBank,\r\n      otp: otp,\r\n      user_id: window.localStorage.getItem('userIdToken')\r\n    }\r\n    try {\r\n      const res = await ekoVeryfyCustomer(clone)\r\n      if (res?.data?.statusCode === 200 \r\n        // && res?.data?.data?.bank3_kyc === true\r\n      ) {\r\n        setCurrentPage('money-transfer')\r\n\r\n      }\r\n      if (res?.data?.statusCode === 200 \r\n        // && \r\n        // res?.data?.data?.bank3_kyc === false\r\n      ) {\r\n        setCurrentPage('KYC-page')\r\n        setWadhValue(res?.data?.data?.wadhValue)\r\n      }\r\n\r\n      toastMessage(res?.data?.error, res?.data?.message)\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOtp('');\r\n\r\n    setCurrentPage('money-transfer')\r\n    setOpen(false)\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} maxWidth=\"xs\" fullWidth>\r\n      <DialogTitle sx={{ color: 'var(--bs-primary1)' }}>OTP Verification</DialogTitle>\r\n      <DialogContent>\r\n        <Typography mb={2} sx={{ color: 'var(--bs-primary1)' }}>\r\n          Enter the 6-digit code sent to your mobile number.\r\n        </Typography>\r\n\r\n        <CustomTextFieldAddCustomer\r\n          fullWidth\r\n          label=\"Enter OTP\"\r\n          value={otp}\r\n          onChange={(e) => {\r\n            const onlyDigits = e.target.value.replace(/\\D/g, '');\r\n            if (onlyDigits.length <= 6) setOtp(onlyDigits);\r\n          }}\r\n          inputProps={{ maxLength: 6 }}\r\n          autoFocus\r\n        />\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        <Button onClick={handleVerify} sx={{\r\n          borderColor: 'var(--bs-primary1)', // Custom colors\r\n\r\n          backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n          color: 'white'\r\n        }} variant=\"contained\" disabled={otp.length < 6}>\r\n          Verify\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\n\r\nconst MarchantOnboarding = () => {\r\n  const [open, setOpen] = useState(true)\r\n  const { setCurrentPage } = useBankTransfer()\r\n  const [otp, setOtp] = useState('');\r\n\r\n\r\n\r\n\r\n  const handleVerify = async () => {\r\n    const clone = {\r\n      mobile: window.localStorage.getItem('regisNumber').slice(-10),\r\n      otp: otp,\r\n    }\r\n    try {\r\n      const res = await verifybank3otp(clone)\r\n      if (res?.data?.statusCode === '200') {\r\n        setCurrentPage('money-transfer')\r\n      }\r\n      toastMessage(res?.data?.error, res?.data?.message)\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOtp('');\r\n\r\n    setCurrentPage('money-transfer')\r\n    setOpen(false)\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} maxWidth=\"xs\" fullWidth>\r\n      <DialogTitle sx={{ color: 'var(--bs-primary1)' }}>Marchant Verification</DialogTitle>\r\n      <DialogContent>\r\n        <Typography mb={2} sx={{ color: 'var(--bs-primary1)' }}>\r\n          Enter the 6-digit code sent to your mobile number.\r\n        </Typography>\r\n\r\n        <CustomTextFieldAddCustomer\r\n          fullWidth\r\n          label=\"Enter OTP\"\r\n          value={otp}\r\n          onChange={(e) => {\r\n            const onlyDigits = e.target.value.replace(/\\D/g, '');\r\n            if (onlyDigits.length <= 6) setOtp(onlyDigits);\r\n          }}\r\n          inputProps={{ maxLength: 6 }}\r\n          autoFocus\r\n        />\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        <Button onClick={handleVerify} sx={{\r\n          borderColor: 'var(--bs-primary1)', // Custom colors\r\n          backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n          color: 'white'\r\n        }} variant=\"contained\" disabled={otp.length < 6}>\r\n          Verify\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n\r\nconst KYCPage = () => {\r\n\r\n  const devices = [\r\n    // { id: '1', img: imgg1, name: 'Iris' },\r\n    { id: '2', img: imgg2, name: 'Mantra' },\r\n    { id: '3', img: imgg3, name: 'Mantra L1' },\r\n    { id: '4', img: imgg4, name: 'Morpho' },\r\n\r\n  ]\r\n  const { walletCall, wadhValue, selectedBank, mobile, setCurrentPage } = useBankTransfer()\r\n  const [selectedDeviceId, setSelectedDeviceId] = useState(null);\r\n\r\n  const { loading, captureFingerprint } = useFingerprintCapture({ wadhValue });\r\n\r\n  const handleDeviceSelect = (id) => {\r\n    setSelectedDeviceId(id);\r\n\r\n  };\r\n\r\n  const selectedDevice = devices.find((d) => d.id === selectedDeviceId);\r\n\r\n  const handleCaptureFingerprint = withLocation(async (latitude, longitude) => {\r\n    if (!selectedDevice) return alert('Please select a device.');\r\n\r\n    try {\r\n      const result = await captureFingerprint(selectedDevice.name);\r\n      const xmlStr = result.pidData + '<bookz/>';\r\n      const encodedXml = window.btoa(new XMLSerializer().serializeToString(\r\n        new DOMParser().parseFromString(xmlStr, 'application/xml')\r\n      ));\r\n\r\n      const body = {\r\n        customer_mobile: mobile,\r\n        latitude,\r\n        longitude,\r\n        biometric_data: encodedXml,\r\n        api_id: selectedBank,\r\n      };\r\n\r\n      const res = await dmtkycapi(body);\r\n      if (res?.data?.statusCode === '200' && !res?.data?.error) {\r\n        setCurrentPage('send-money-page');\r\n        walletCall()\r\n      }\r\n      toastMessage(res?.data?.error, res?.data?.message);\r\n    } catch (error) {\r\n      alert('Capture failed: ' + error.message);\r\n    }\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CustomBox>\r\n        <Box display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\r\n          <IconButton onClick={() => setCurrentPage('money-transfer')}>\r\n            <ArrowBackIosNewIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"var(--bs-nav)\"\r\n            fontWeight=\"bold\"\r\n            fontSize={18}\r\n          >\r\n            Verify KYC\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2} sx={{ p: 2 }}>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              {devices?.map((device, index) => (\r\n                <Grid item xs={6} sm={4} md={2} key={index}>\r\n                  <Card\r\n                    onClick={() => handleDeviceSelect(device.id)}\r\n                    sx={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      alignItems: 'center',\r\n                      p: 1,\r\n                      height: '100%',\r\n                      border: selectedDeviceId === device.id ? '1px solid var(--bs-nav)' : '1px solid #ddd',\r\n                      borderRadius: 2,\r\n                      boxShadow: 0,\r\n                      cursor: 'pointer',\r\n                      transition: 'all 0.3s ease',\r\n                      // backgroundColor: selectedDeviceId === device.id ? '#e3f2fd' : '#fff',\r\n                    }}\r\n                  >\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      image={device.img}\r\n                      alt={device.name}\r\n                      sx={{ height: 80, objectFit: 'contain', mb: 1 }}\r\n                    />\r\n                    <CardContent sx={{ p: 0 }}>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        align=\"center\"\r\n                        sx={{ fontWeight: 500 }}\r\n                      >\r\n                        {device.name}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} textAlign=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={!selectedDeviceId || loading}\r\n              onClick={handleCaptureFingerprint}\r\n\r\n              sx={{\r\n                borderColor: 'var(--bs-primary1)', // Custom colors\r\n                mt: 3,\r\n                backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                color: 'white'\r\n              }}\r\n\r\n            >\r\n              {loading ? 'Capturing...' : 'Capture Fingerprint'}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </CustomBox>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst InvoiceRecord = () => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { invoiceId, setCurrentPage } = useBankTransfer()\r\n  const [data, setData] = useState(null)\r\n\r\n\r\n\r\n\r\n\r\n  const ref = useRef()\r\n\r\n  const handlePrint = useReactToPrint({\r\n    content: () => ref.current,\r\n    documentTitle: 'DMT Data',\r\n    // onAfterPrint: () => alert('Print Success')\r\n  })\r\n\r\n  const handleDownloadThermal = () => {\r\n    const element = document.getElementById('contentId1');\r\n    const opt = {\r\n      margin: 1,\r\n      format: [90, 297],\r\n      filename: 'thermal_print_page.pdf',\r\n      image: { type: 'jpeg', quality: 0.98 },\r\n      html2canvas: { scale: 2 },\r\n      jsPDF: { unit: 'mm', format: [110, 200], orientation: 'portrait' }\r\n    };\r\n    // Generate PDF\r\n    html2pdf().set(opt).from(element).save();\r\n  }\r\n\r\n\r\n\r\n  const dataDetails = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const res = await dmtDtails(invoiceId)\r\n      setData(res?.data?.data);\r\n    } catch (error) {\r\n\r\n    }\r\n    setLoading(false)\r\n  }\r\n  useEffect(() => {\r\n    dataDetails()\r\n\r\n\r\n  }, [invoiceId])\r\n\r\n  const scrollRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollTop = 0;\r\n    }\r\n  }, []);\r\n\r\n\r\n  const executeScroll = () => {\r\n    scrollRef?.current?.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'end',\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    executeScroll()\r\n  }, [])\r\n  return (\r\n    <>\r\n\r\n      {loading && <Loader />}\r\n      <div ref={scrollRef}></div>\r\n      <div className=\"ContentArea\" >\r\n        <div className=\"card\">\r\n          <div className=\"card-header card-Details\">\r\n            <div className='d-flex align-items-center'>\r\n              <IconButton onClick={() => setCurrentPage('send-money-page')\r\n\r\n\r\n              }>\r\n                <ArrowBackIosNewIcon />\r\n\r\n              </IconButton>\r\n              <div className=\"Details\"><span>Details</span></div>\r\n            </div>\r\n\r\n            <div className=\"button-print\">\r\n              <div type=\"button\" className=\"btn btn-warning mr-3\" onClick={handlePrint}\r\n              > <IoMdPrint />Full Print</div>\r\n              {/* <div type=\"button\" className=\"btn btn-warning mr-3\" onClick={handleDownloadShort}> <IoMdPrint />Short Print</div> */}\r\n              <div type=\"button\" className=\"btn btn-warning mr-3\" onClick={handleDownloadThermal}> <IoMdPrint />Thermal Print</div>\r\n            </div>\r\n          </div>\r\n          <div ref={ref} id=\"contentId1\" className=\"contentId2\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"logo-print text-align-center pb-3\">\r\n                    <img src={image} alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6 aabc\">\r\n                  <div className=\"left-side-section\">\r\n                    <div>CSP Name : <span>{data?.invoice[0]?.shop_name}</span></div>\r\n                    <div>Mobile Number : <span>{data?.invoice[0]?.mobile_number}</span></div>\r\n                    <div>Sender Name : <span>{data?.invoice[0]?.customer_name}</span></div>\r\n                    <div>Sender No : <span>{data?.invoice[0]?.customer_mobile}</span></div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6 aabc\">\r\n                  <div className=\"right-side-section\">\r\n                    <div>Beneficiary : <span>{data?.invoice[0]?.beneficiary_name}</span></div>\r\n                    <div>Bank Name : <span>{data?.invoice[0]?.bank_name}</span></div>\r\n\r\n                    <div>Account No : <span>{data?.invoice[0]?.account_number}</span></div>\r\n                    <div>Date : <span>{data?.invoice[0]?.createdAt}</span></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card mt-4\" style={{ overflow: 'auto' }}>\r\n                <div className=\"card-body\">\r\n                  <div id=\"myTable_wrapper\" className=\"dataTables_wrapper no-footer\">\r\n                    <table className=\"table table-striped table-bordered table-hover display dataTable no-footer dtr-inline collapsed\" role=\"grid\" aria-describedby=\"myTable_info\" >\r\n                      <thead>\r\n                        <tr role=\"row\">\r\n                          <th className=\"sorting\" >TID</th>\r\n                          {/* <th className=\"sorting\">\r\n                                                          MODE\r\n                                                      </th> */}\r\n                          <th className=\"sorting\" >\r\n                            Status\r\n                          </th>\r\n                          <th className=\"sorting\" >UTR No</th>\r\n                          <th className=\"sorting\" >Amount</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {data && data?.invoice[0]?.allTrans?.map((item) => {\r\n                          return <tr key={item?._id}>\r\n                            <td valign=\"top\" className=\"dataTables_empty\">{item?.tid}</td>\r\n\r\n                            <td valign=\"top\" className=\"dataTables_empty\">{item?.status}</td>\r\n                            <td valign=\"top\" className=\"dataTables_empty\">{item?.utr}</td>\r\n                            <td valign=\"top\" className=\"dataTables_empty\">{item?.amount}</td>\r\n                          </tr>\r\n                        })}\r\n                        <tr>\r\n                          <td valign=\"top\" className=\"dataTables_empty\" colSpan={3}>Total</td>\r\n                          <td valign=\"top\" className=\"dataTables_empty\">{data?.invoice[0]?.totalAmount}</td>\r\n\r\n                        </tr>\r\n\r\n\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n\r\n                  <div className=\"col-lg-12\">\r\n                    <div className=\"reserve\">\r\n                      <p>© {new Date()?.getFullYear()} All Rights Reserved </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst NewBankTransfer = () => {\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  const { globalLoader, setGlobalLoader, mobile, setMobile, setCurrentPage, currentPage, setCustomer, selectedBank, setSelectedBank, allBank, setAllBank } = useBankTransfer()\r\n\r\n\r\n\r\n  const fetchSuggestions = useCallback(async () => {\r\n    try {\r\n      const response = await sagestMobileNumber({ mobile });\r\n      const numbers = response?.data?.data || [];\r\n      setSuggestions(numbers);\r\n    } catch (err) {\r\n      console.error('Error fetching suggestions:', err);\r\n      setSuggestions([]);\r\n    }\r\n  }, [mobile]);\r\n\r\n  useEffect(() => {\r\n    if (!mobile) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n\r\n    const timeout = setTimeout(fetchSuggestions, 500);\r\n    return () => clearTimeout(timeout);\r\n  }, [mobile, fetchSuggestions]);\r\n\r\n  const handleInputChange = (_, newValue) => {\r\n    // Clean non-digits and limit to 10 characters\r\n    const val = newValue.replace(/\\D/g, '').slice(0, 10);\r\n\r\n    setMobile(val); // Update only trimmed value\r\n\r\n    // Now validate the trimmed value\r\n    if (!val) {\r\n      setError('');\r\n    } else if (val.length < 10 || !isValidIndianMobile(val)) {\r\n      setError('Enter a valid 10-digit mobile number.');\r\n    } else {\r\n      setError('');\r\n    }\r\n  };\r\n\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault()\r\n    if (!isValidIndianMobile(mobile)) {\r\n      setError('Please enter a valid mobile number.');\r\n      return;\r\n    }\r\n    setGlobalLoader(true)\r\n    let body = {\r\n\r\n      mobile: mobile,\r\n      api_id: selectedBank\r\n    }\r\n    try {\r\n      let res = await CustomerInfo(body)\r\n      if (res?.data?.statusCode === '401') {\r\n        setCurrentPage('add-customer')\r\n      }\r\n      if (res?.data?.statusCode === '008')\r\n        setCurrentPage('otp-page')\r\n\r\n      if (res?.data?.statusCode === '007') {\r\n        setCurrentPage('marchant-onboarding-otp')\r\n      }\r\n      if (res?.data?.statusCode === '200') {\r\n        setCustomer(res?.data?.data?.response)\r\n        setCurrentPage('send-money-page')\r\n      }\r\n\r\n      toastMessage(res?.data?.error, res?.data?.message)\r\n    } catch (error) {\r\n\r\n    }\r\n    finally {\r\n      setGlobalLoader(false)\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const getBank = async () => {\r\n    let res = await settingBank()\r\n    setAllBank(res?.data?.data?.dmtApiType || []);\r\n    setSelectedBank(res?.data?.data?.defaultApi)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getBank()\r\n  }, [])\r\n\r\n  const handleBankChange = (id) => {\r\n    // navigate('/bank-transfer')\r\n    setSelectedBank(id)\r\n  }\r\n  return (\r\n\r\n    <>\r\n    \r\n      {globalLoader && <Loader />}\r\n      <div className=\"PageHeading\"><h1>Bank Transfer</h1></div>\r\n\r\n      {currentPage === 'money-transfer' &&\r\n        <>\r\n          <CustomBox\r\n\r\n          >\r\n            <Typography variant=\"h6\" fontWeight=\"600\" mb={2}>\r\n              Bank Selection\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              {allBank?.map((bank) => {\r\n                const isSelected = selectedBank === bank._id;\r\n\r\n                return (\r\n                  <Grid item xs={6} sm={3} md={3} lg={2} key={bank._id}>\r\n                    <Card\r\n                      elevation={isSelected ? 6 : 1}\r\n                      sx={{\r\n                        border: isSelected ? '1px solid var(--bs-nav)' : '1px solid #ccc',\r\n                        position: 'relative',\r\n                        borderRadius: 2,\r\n                        transition: 'all 0.3s ease',\r\n                        width: '150px'\r\n                        //   backgroundColor:'#F8F9FA'\r\n                      }}\r\n                    >\r\n                      <CardActionArea onClick={() => handleBankChange(bank._id)}>\r\n                        <CardContent sx={{\r\n                          p: 1\r\n                        }}>\r\n                          <Typography\r\n                            variant=\"subtitle1\"\r\n                            align=\"center\"\r\n                            color='var(--bs-nav)'\r\n\r\n                            fontSize={14}\r\n\r\n                          >\r\n                            {bank.name.toUpperCase()}\r\n                          </Typography>\r\n                        </CardContent>\r\n                        {isSelected && (\r\n                          <CheckCircle\r\n                            sx={{\r\n                              position: 'absolute',\r\n                              top: 11,\r\n                              right: 30,\r\n                              width: '17px',\r\n                              height: '17px',\r\n                              color: '#1976d2',\r\n                              fill: 'var(--bs-nav)'\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </CardActionArea>\r\n                    </Card>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n            <Box\r\n              sx={{\r\n                // width:'50%',\r\n                mt: 2,\r\n                width: { xs: '100%', sm: '50%' }\r\n                //   maxWidth: 800,\r\n\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" fontWeight=\"600\" mb={2}>\r\n                Customer Search\r\n              </Typography>\r\n\r\n              {/* Main Row */}\r\n              <form onSubmit={handleSearch}>\r\n                <Box display=\"flex\" alignItems='flex-start' gap={1.5} >\r\n                  {/* Icon Box */}\r\n                  <Box\r\n                    sx={{\r\n                      width: 40,\r\n                      height: 40,\r\n                      //   border: '1px solid #d0d0d0',\r\n                      borderRadius: 1,\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      color: 'var(--bs-primary1)',\r\n                    }}\r\n                  >\r\n                    <SearchIcon />\r\n                  </Box>\r\n\r\n                  {/* Input Field */}\r\n\r\n\r\n\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    options={suggestions}\r\n                    getOptionLabel={(option) =>\r\n                      typeof option === 'string' ? option : option.customer_number\r\n                    }\r\n                    inputValue={mobile}\r\n                    onInputChange={handleInputChange}\r\n                    fullWidth\r\n                    renderInput={(params) => (\r\n                      <CustomTextField\r\n                        {...params}\r\n                        label=\"Search customer mobile number\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        error={!!error}\r\n                        helperText={error ? error : null}\r\n\r\n\r\n                      />\r\n                    )}\r\n                  />\r\n\r\n                  {/* Button */}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={!isValidIndianMobile(mobile)}\r\n                    type='submit'\r\n\r\n                    sx={{\r\n                      height: 40,\r\n                      borderColor: 'var(--bs-primary1)', // Custom colors\r\n                      width: \"45%\",\r\n                      backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                      color: \"white\",\r\n\r\n                    }}\r\n                  >\r\n                    Search\r\n                  </Button>\r\n\r\n                </Box>\r\n              </form>\r\n            </Box>\r\n          </CustomBox>\r\n\r\n        </>}\r\n\r\n      {currentPage === 'send-money-page' &&\r\n        <BankTransferMoneyTransferPage />}\r\n\r\n\r\n      {currentPage === 'add-newBeneficiaryPage' &&\r\n        <AddNewBeneficiaryPage />\r\n      }\r\n\r\n      {currentPage === 'add-customer' &&\r\n        <AddCustomer />\r\n      }\r\n\r\n      {currentPage === 'otp-page' &&\r\n        <OtpPopUp />\r\n      }\r\n\r\n      {currentPage === 'marchant-onboarding-otp' &&\r\n        <MarchantOnboarding />\r\n      }\r\n\r\n      {currentPage === 'KYC-page' &&\r\n        <KYCPage />\r\n      }\r\n\r\n      {currentPage === 'invoice' &&\r\n        <InvoiceRecord />\r\n      }\r\n\r\n    </>\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default NewBankTransfer;\r\n"," export const DEVICE_CONFIGS  = [\r\n    {\r\n      name: 'Mantra',\r\n      path: '/rd/capture',\r\n      hosts: ['https://localhost', 'https://127.0.0.1', ], // multiple hosts to try\r\n      ports: [11100, 11101, 11102],\r\n    },\r\n    {\r\n      name: 'Morpho',\r\n      path: '/rd/capture',\r\n      hosts: ['https://localhost'],\r\n      ports: [11100],\r\n    },\r\n    {\r\n        name: 'Mantra L1',\r\n        path: '/rd/capture',\r\n        hosts: ['https://localhost', 'https://127.0.0.1',], // multiple hosts to try\r\n        ports: [11100, 11101, 11102],\r\n      },\r\n  ];","export const  getLocation = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n         \r\n            resolve({\r\n              latitude: position.coords.latitude,\r\n              longitude: position.coords.longitude,\r\n            });\r\n          },\r\n          (error) => {\r\n            if (error.code === error.PERMISSION_DENIED) {\r\n              alert(\"Please Enable Location to Proceed\");\r\n            }\r\n            reject(error);\r\n          },\r\n          {\r\n            enableHighAccuracy: true,\r\n            timeout: 10000,\r\n            maximumAge: 0\r\n          });\r\n      } else {\r\n        reject(new Error('Geolocation is not supported'));\r\n      }\r\n    });\r\n  };\r\n","import { toast } from \"react-toastify\";\r\n\r\n\r\nexport default function toastMessage(error, message = \"something went wrong\") {\r\n\r\n    error === false ? toast.success(message) : toast.error(message);\r\n    // error === false  ?  setSnackbar({ open: true, message: response?.data?.message ||, severity: 'success' }) :  setSnackbar({ open: true, message , severity: 'error' });\r\n}","import { getLocation } from \"./getLocation\";\r\n\r\nconst  withLocation = (callback) => async (...args) => { \r\n    try {\r\n        let { latitude, longitude } = await getLocation();\r\n        \r\n        if (!latitude || !longitude) {\r\n            return alert(\"Please Enable Location\");\r\n        }\r\n\r\n       return await callback(latitude, longitude , ...args);\r\n    } catch (error) {\r\n        console.error(\"Error fetching location:\", error);\r\n    }\r\n};\r\n\r\nexport default  withLocation"],"names":["useFingerprintCapture","_ref","wadhValue","fingerprintData","setFingerprintData","useState","loading","setLoading","captureFingerprint","async","device","DEVICE_CONFIGS","find","d","name","toLowerCase","deviceName","Error","parsed","xmlText","resp","DOMParser","parseFromString","getElementsByTagName","errCode","getAttribute","errInfo","qScore","status","captureSuccess","pidData","parseCaptureResponse","hosts","ports","path","host","port","url","concat","res","fetch","method","headers","body","ok","success","data","text","err","tryHostsAndPorts","BankTransferContext","createContext","useBankTransfer","useContext","walletCall","children","selectedBank","setSelectedBank","setWadhValue","globalLoader","setGlobalLoader","mobile","setMobile","customer","setCustomer","allBank","setAllBank","currentPage","setCurrentPage","invoiceId","setInvoiceId","_jsx","Provider","value","isValidIndianMobile","test","CustomTextField","props","TextField","variant","size","InputLabelProps","shrink","sx","color","height","py","borderColor","CustomTextFieldForAmount","className","InputProps","fontSize","CustomTextFieldAddCustomer","CustomBox","Box","width","mx","my","px","pb","bgcolor","borderRadius","boxShadow","SendMoneyPopup","_ref2","otpResponse","setOtpResponse","amount","transferMode","otpSent","open","onClose","recipient","amountError","setAmountError","useNavigate","otp","setOtp","otpError","setOtpError","otpVerified","setOtpVerified","pin","setPin","pinError","setPinError","otpLoading","setOtpLoading","moneyLoading","setMoneyLoading","bankNameObj","total_limit","used_limit","item","_id","bankName","handleSubmitOtp","handleSendMoney","withLocation","latitude","longitude","pinErr","recipient_id","customer_mobile","recipient_mobile","channel","beneficiary_name","bank_account_name","recipient_name","bank_name","bank","ifsc_code","ifsc","account_number","account","customer_name","api_id","user_id","window","localStorage","getItem","latlong","tpin","_res$data","_res$data2","_res$data3","_res$data4","_res$data6","_res$data7","sendMoneyTrans","_res$data5","_res$data5$data","_res$data5$data$","toastMessage","error","message","statusCode","batchId","setTimeout","_jsxs","Dialog","maxWidth","fullWidth","disableEscapeKeyDown","disableBackdropClick","PaperProps","onClick","e","stopPropagation","DialogTitle","align","fontWeight","Typography","mt","DialogContent","renderStep","showOtpInput","showPinInput","_Fragment","label","placeholder","onChange","target","inputProps","maxLength","helperText","Button","backgroundColor","disabled","length","type","DialogActions","justifyContent","pr","BankTransferMoneyTransferPage","_customer$name","totalLimit","usedLimit","availableLimit","usedPercentage","beneficiaryList","setBeneficiaryList","resetKey","setResetKey","showModal","setShowModal","recipientData","setRecipientData","amounts","setAmounts","amountErrors","setAmountErrors","transferModes","setTransferModes","setOtpSent","setTransferMode","setAmount","getMaxAmount","getMinAmount","handleAmountChange","recipientId","numericValue","Number","min","max","isNaN","validateAmount","prev","useEffect","_res$data8","reciptList","getBenificiers","handleGenerateOTP","console","log","_res$data11","_res$data13","_res$data14","sendbank3MoneyTransdmt","_res$data12","_res$data12$data","Grid","container","alignItems","display","gap","IconButton","ArrowBackIosNewIcon","Avatar","substring","component","opacity","ml","position","CircularProgress","thickness","left","top","bottom","right","flexDirection","Divider","Card","p","CardContent","mb","map","spacing","xs","md","AccountBalanceIcon","sm","isVerified","MdVerified","style","fill","IoIosCloseCircleOutline","clone","bankAccount","phone","bank_id","bankId","_res$data9","_res$data10","verificationBank","pre","verifyBankAccount","RadioGroup","row","FormControlLabel","control","Radio","transferMode1","sendMoney","Popconfirm","title","description","onConfirm","_res$data15","_res$data16","_res$data17","BENEFICIARYDelete","handleDeleteBeneficiary","onCancel","okText","cancelText","okButtonProps","Delete","textAlign","AddNewBeneficiaryPage","submitLoading","setSubmitLoading","verficationCharges","setVerificationCharges","bankOptions","setBankOptions","bankSelected","setBankSelected","setIsVerified","setOpen","otpRecipentId","setOtpRecipentId","handleClose","form","setForm","_res$data19","_res$data19$data","bankListApiwithid","bankID","fetchBank","_res$data18","_res$data18$data","getDMtcharges","bankVerificationCharge","getVerificationCharges","handleChange","replace","isFormValid","hasOwnProperty","m","Select","options","isClearable","isSearchable","menuPortalTarget","document","isDisabled","styles","base","state","minHeight","isFocused","singleValue","menu","zIndex","option","isSelected","menuPortal","_res$data25","_res$data29","_res$data30","_res$data26","_res$data26$data","_res$data27","_res$data27$data","_res$data28","_res$data28$data","bank_ifsc","bank_account_number","bank_code","_res$data20","_res$data22","_res$data23","_res$data24","BENEFICIARYAdd","_res$data21","_res$data21$data","onlyDigits","autoFocus","_res$data31","_res$data32","_res$data33","veryOtpaddbene","AddCustomer","today","Date","eighteenYearsAgo","getFullYear","getMonth","getDate","toISOString","split","hundredYearsAgo","formData","setFormData","firstName","lastName","customerMobile","dob","country","pinCode","city","district","area","aadharNumber","validationSchema","Yup","required","matches","Formik","initialValues","onSubmit","values","_ref3","setSubmitting","pincode","adhaar_number","_res$data34","_res$data35","_res$data36","_res$data37","createCustomer","handleSubmit","enableReinitialize","_ref4","errors","touched","setErrors","setFieldValue","isSubmitting","Form","rowSpacing","columnSpacing","Field","as","Boolean","slice","_res$data38","getDetailByPin","_res$data39","_res$data39$data","_res$data40","_res$data40$data","_res$data41","_res$data41$data","_res$data42","_res$data42$data","sub_distance","fetchPincode","OtpPopUp","_res$data43","_res$data44","_res$data46","_res$data47","ekoVeryfyCustomer","_res$data45","_res$data45$data","MarchantOnboarding","_res$data48","_res$data49","_res$data50","verifybank3otp","KYCPage","devices","id","img","imgg2","imgg3","imgg4","selectedDeviceId","setSelectedDeviceId","selectedDevice","handleCaptureFingerprint","alert","_res$data51","_res$data52","_res$data53","_res$data54","xmlStr","encodedXml","btoa","XMLSerializer","serializeToString","biometric_data","dmtkycapi","index","handleDeviceSelect","border","cursor","transition","CardMedia","image","alt","objectFit","InvoiceRecord","_data$invoice$","_data$invoice$2","_data$invoice$3","_data$invoice$4","_data$invoice$5","_data$invoice$6","_data$invoice$7","_data$invoice$8","_data$invoice$9","_data$invoice$9$allTr","_data$invoice$10","_Date","setData","ref","useRef","handlePrint","useReactToPrint","content","current","documentTitle","_res$data55","dmtDtails","dataDetails","scrollRef","scrollTop","executeScroll","_scrollRef$current","scrollIntoView","behavior","block","Loader","IoMdPrint","handleDownloadThermal","element","getElementById","html2pdf","set","margin","format","filename","quality","html2canvas","scale","jsPDF","unit","orientation","from","save","src","invoice","shop_name","mobile_number","createdAt","overflow","role","allTrans","valign","tid","utr","colSpan","totalAmount","NewBankTransfer","suggestions","setSuggestions","setError","fetchSuggestions","useCallback","_response$data","response","sagestMobileNumber","numbers","timeout","clearTimeout","_res$data63","_res$data63$data","_res$data64","_res$data64$data","settingBank","dmtApiType","defaultApi","getBank","lg","elevation","CardActionArea","handleBankChange","toUpperCase","CheckCircle","preventDefault","_res$data56","_res$data57","_res$data58","_res$data59","_res$data61","_res$data62","CustomerInfo","_res$data60","_res$data60$data","SearchIcon","Autocomplete","freeSolo","getOptionLabel","customer_number","inputValue","onInputChange","handleInputChange","_","newValue","val","renderInput","params","getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","code","PERMISSION_DENIED","enableHighAccuracy","maximumAge","arguments","undefined","toast","callback","_len","args","Array","_key"],"sourceRoot":""}