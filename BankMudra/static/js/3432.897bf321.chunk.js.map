{"version":3,"file":"static/js/3432.897bf321.chunk.js","mappings":"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","sources":["pages/admin/userlist/BPBSService.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { bpbsAllServiceList, bpbsOperatorList } from '../../../api/login/Login';\r\nimport './BPBSService.css';\r\n\r\nconst BPBSService = () => {\r\n  const [services, setServices] = useState([]);\r\n  const [filteredServices, setFilteredServices] = useState([]);\r\n  const [selectedService, setSelectedService] = useState('');\r\n  const [operators, setOperators] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [serviceSearchTerm, setServiceSearchTerm] = useState('');\r\n  const [operatorSearchTerm, setOperatorSearchTerm] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const operatorsPerPage = 10;\r\n\r\n  useEffect(() => {\r\n    fetchServices();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedService) {\r\n      fetchOperators(selectedService);\r\n    }\r\n  }, [selectedService]);\r\n\r\n  useEffect(() => {\r\n    const filtered = services.filter(service =>\r\n      service.name.toLowerCase().includes(serviceSearchTerm.toLowerCase())\r\n    );\r\n    setFilteredServices(Array.isArray(filtered) ? filtered : []);\r\n  }, [serviceSearchTerm, services]);\r\n\r\n  const fetchServices = async () => {\r\n    try {\r\n      const data = await bpbsAllServiceList();\r\n      setServices(Array.isArray(data) ? data : []);\r\n      console.log(\"services\",services)\r\n      setFilteredServices(Array.isArray(data) ? data : []);\r\n    } catch (error) {\r\n      console.error('Error fetching services:', error);\r\n    }\r\n  };\r\n\r\n  const fetchOperators = async (serviceId) => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await bpbsOperatorList(serviceId);\r\n      setOperators(Array.isArray(data) ? data : []);\r\n    } catch (error) {\r\n      console.error('Error fetching operators:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleServiceChange = (e) => {\r\n    setSelectedService(e.target.value);\r\n    setCurrentPage(1);\r\n    setOperatorSearchTerm('');\r\n  };\r\n\r\n  const handleServiceSearch = (e) => {\r\n    setServiceSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleOperatorSearch = (e) => {\r\n    setOperatorSearchTerm(e.target.value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const filteredOperators = operators.filter(operator =>\r\n    operator.name.toLowerCase().includes(operatorSearchTerm.toLowerCase())\r\n  );\r\n\r\n  const indexOfLastOperator = currentPage * operatorsPerPage;\r\n  const indexOfFirstOperator = indexOfLastOperator - operatorsPerPage;\r\n  const currentOperators = filteredOperators.slice(indexOfFirstOperator, indexOfLastOperator);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"bpbs-container container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3 bpbs-sidebar\">\r\n          <h2 className=\"bpbs-title\">Select Service</h2>\r\n          <div className=\"bpbs-search-container\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control bpbs-search\"\r\n              placeholder=\"Search services...\"\r\n              value={serviceSearchTerm}\r\n              onChange={handleServiceSearch}\r\n            />\r\n          </div>\r\n          <select \r\n            className=\"form-select bpbs-select\" \r\n            value={selectedService} \r\n            onChange={handleServiceChange}\r\n          >\r\n            <option value=\"\">Choose a service</option>\r\n            {filteredServices.map(service => (\r\n              <option key={service.id} value={service.id}>{service.name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-md-9 bpbs-main\">\r\n          <h2 className=\"bpbs-title\">Service Operators</h2>\r\n          <div className=\"bpbs-search-container\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control bpbs-search\"\r\n              placeholder=\"Search operators...\"\r\n              value={operatorSearchTerm}\r\n              onChange={handleOperatorSearch}\r\n            />\r\n          </div>\r\n          {loading ? (\r\n            <div className=\"bpbs-loading\">Loading...</div>\r\n          ) : (\r\n            <>\r\n              <ul className=\"list-group bpbs-operator-list\">\r\n                {currentOperators.map(operator => (\r\n                  <li key={operator.id} className=\"list-group-item bpbs-operator-item\">\r\n                    {operator.name}\r\n                    <button className=\"btn btn-primary bpbs-pay-btn\">Pay Now</button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              <nav className=\"bpbs-pagination\">\r\n                <ul className=\"pagination\">\r\n                  {Array.from({ length: Math.ceil(filteredOperators.length / operatorsPerPage) }, (_, i) => (\r\n                    <li key={i} className={`page-item ${currentPage === i + 1 ? 'active' : ''}`}>\r\n                      <button className=\"page-link\" onClick={() => paginate(i + 1)}>{i + 1}</button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </nav>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BPBSService;\r\n"],"names":["BPBSService","services","setServices","useState","filteredServices","setFilteredServices","selectedService","setSelectedService","operators","setOperators","currentPage","setCurrentPage","serviceSearchTerm","setServiceSearchTerm","operatorSearchTerm","setOperatorSearchTerm","loading","setLoading","useEffect","fetchServices","fetchOperators","filtered","filter","service","name","toLowerCase","includes","Array","isArray","async","data","bpbsAllServiceList","console","log","error","bpbsOperatorList","serviceId","filteredOperators","operator","indexOfLastOperator","indexOfFirstOperator","currentOperators","slice","_jsx","className","children","_jsxs","type","placeholder","value","onChange","e","target","map","id","_Fragment","from","length","Math","ceil","_","i","concat","onClick"],"sourceRoot":""}