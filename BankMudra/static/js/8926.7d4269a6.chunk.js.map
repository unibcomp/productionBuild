{"version":3,"file":"static/js/8926.7d4269a6.chunk.js","mappings":"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","sources":["components/admin/daseboardCheck/CustomMarquee.js","components/admin/daseboardCheck/dasboardSlideProduct/ServiceGrid.js","components/admin/daseboardCheck/dasboardSlideProduct/Dashboardcard.js","components/admin/daseboardCheck/dasboardSlideProduct/Todaybusiness.js","utils/apiuserfilter.js","components/admin/daseboardCheck/dasboardSlideProduct/RetailerDashboard.js","components/admin/daseboardCheck/DashboardOtpModal.js","components/admin/daseboardCheck/DasBoardChaeck.js","pages/admin/daseboardCheck/ProfileModal.js","pages/admin/daseboardCheck/index.js","utils/UserGuard.js","utils/genrateUrl.js"],"sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './CustomMarquee.css';\r\n\r\nconst CustomMarquee = ({ retailerName }) => {\r\n  return (\r\n    <div className=\"custom-marquee-container\">\r\n      <div className=\"marquee-content\">\r\n        <span className=\"congratulations\">Congratulations!</span>\r\n        <span className=\"message1111\">\r\n          Dear <strong>{retailerName}</strong>, now you have become our partner with Needu. \r\n          So let's grow together. Thank you!\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomMarquee;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport ReactFancyBox from 'react-fancybox';\r\nimport 'react-fancybox/lib/fancybox.css';\r\nimport { Grid, Paper, Typography, Box, TextField, useMediaQuery, Alert, Card, CardMedia, CardContent } from '@mui/material';\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport {\r\n  Payment, CreditCard, ElectricBolt, LocalGasStation, PhoneAndroid,\r\n  Tv, Wifi, LocalShipping, School, LocalHospital, Build,\r\n  ErrorOutline\r\n} from '@mui/icons-material';\r\n\r\nimport { InputAdornment, } from \"@mui/material\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { motion } from \"framer-motion\";\r\nimport { genrateUrl } from '../../../../utils/genrateUrl';\r\nimport { mobileNumberFilter } from '../../../../baseUrl';\r\nimport UserGuard from '../../../../utils/UserGuard';\r\nconst placeholderTexts = [\r\n  \"Search by name\",\r\n  \"Search by name , Bank Transfer\",\r\n  \"Search by name , Bank Transfer , Aadhaar withdraw...\",\r\n];\r\n// Professional color palette\r\nconst colors = {\r\n  primary: '#1976d2',\r\n  background: 'var(--bs-secondary2) !important',\r\n  cardBg: '#ffffff',\r\n  text: 'var(--bs-nav)',\r\n  iconBg: 'var(--bs-primary1)',\r\n  error: '#f44336',\r\n  warning: '#ff9800'\r\n};\r\nconst ServiceItem = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  backgroundColor: colors.cardBg,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  cursor: 'pointer',\r\n  transition: 'all 0.3s ease',\r\n  borderRadius: '8px',\r\n  border: '1px solid #e0e0e0',\r\n  height: '120px',\r\n  position: 'relative', // Required for background-clip approach\r\n  zIndex: 0,\r\n  // overflow: 'hidden', // Ensures content stays clipped to the border radius\r\n  '&:hover': {\r\n    transform: 'translateY(-5px)',\r\n    // boxShadow: '0 4px 20px rgba(0,0,0,0.1)',\r\n    boxShadow: `rgba(0, 0, 0, 0.35) 0px 2px 8px`,\r\n\r\n    // border: '1px solid #FFCC29',\r\n    // backgroundImage: '-webkit-linear-gradient(right, #F87A1F, #FF5733, #D94615, #FFA07A)',\r\n    // backgroundColor:'var(--bs-secondary2) !important',\r\n    backgroundClip: 'border-box',\r\n  },\r\n}));\r\nconst IconWrapper = styled(Box)(({ theme }) => ({\r\n  backgroundColor: colors.iconBg,\r\n  borderRadius: '50%',\r\n  padding: theme.spacing(1.5),\r\n  marginBottom: theme.spacing(1.5),\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  position: 'absolute',\r\n  top: '-30px',\r\n  zIndex: 10,\r\n  width: '48px',\r\n  height: '48px',\r\n  [theme.breakpoints.up('sm')]: {\r\n    width: '56px',\r\n    height: '56px',\r\n  },\r\n}));\r\nconst ErrorMessage = styled(Alert)(({ theme }) => ({\r\n  margin: theme.spacing(2),\r\n  width: '100%'\r\n}));\r\nfunction ServiceGrid({ services = [], isInstantpaypresnt }) {\r\n  const navigate = useNavigate();\r\n  const userNumber = localStorage.getItem('regisNumber')\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [focused, setFocused] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [filteredServices, setFilteredServices] = useState([]);\r\n  const theme = useTheme();\r\n  const isXs = useMediaQuery(theme.breakpoints.only('xs'));\r\n  useEffect(() => {\r\n    try {\r\n      if (!Array.isArray(services)) {\r\n        throw new Error('Invalid services data received');\r\n      }\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err);\r\n      console.error('ServiceGrid initialization error:', err);\r\n    }\r\n  }, [services]);\r\n  const [placeholderIndex, setPlaceholderIndex] = useState(0);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setPlaceholderIndex((prev) => (prev + 1) % placeholderTexts.length);\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  const routeMap = {\r\n    \"206\": \"/aeps-cash-deposit\",\r\n    \"19\": \"/ccbill_payment_report\",\r\n    \"18\": \"/electricity-bills\",\r\n    \"33\": \"/mobile-reacharge\",\r\n    \"13\": \"/dth-reacharge\",\r\n    \"11\": \"/gas-bills\",\r\n    \"10\": \"/postpaid-recharge\",\r\n    \"5\": \"/Boardband\",\r\n    \"35\": \"/airtel-cms\",\r\n    \"12\": \"/landline-bills\",\r\n    \"208\": \"/aeps-OnBoarded\",\r\n    \"207\": \"/aeps-OnBoarded\",\r\n    \"9\": \"/fastag-recharge\",\r\n    \"188\": \"/money-transfer\",\r\n    \"28\": \"/water-bills\",\r\n    \"15\": \"/hospital-pathology\",\r\n    \"3\": \"/educational-fees\",\r\n    \"16\": \"/lpg-gasbill-payment\",\r\n    \"31\": \"/nmrc-paymentbill\",\r\n    \"36\": \"/quickdhan-payment\",\r\n    \"8\": \"/insurance-payment\",\r\n    \"17\": \"/muncipaltax-paymentbill\",\r\n    \"29\": \"/metro-recharge\",\r\n    \"2\": \"/loan-repayment\",\r\n    \"22\": \"/life-insurance\",\r\n    \"4\": \"/housing-society\",\r\n    \"14\": \"/health-insurance-bill\",\r\n    \"26\": \"/health-insurance\",\r\n    \"30\": \"/clubs-associations\",\r\n    \"21\": \"/cable-tv\",\r\n    \"24\": \"/b2b\",\r\n    \"6\": \"/subscription\",\r\n    \"25\": \"/rent-bill\",\r\n    \"216\": \"/recurringdeposite\",\r\n    \"7\": \"/muncipaltax-paymentbill\",\r\n    \"1\": \"/hospital-pathology\",\r\n    \"27\": \"/donation\",\r\n  };\r\n\r\n  const handleNavigation = (route) => {\r\n    try {\r\n      // const route = routeMap[serviceId] || \"/Dashboard\";\r\n      navigate(route);\r\n    } catch (error) {\r\n      // console.error('Navigation error:', error);\r\n      // setError(error);\r\n      // navigate(\"/Dashboard\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    try {\r\n      if (!Array.isArray(services)) {\r\n        setFilteredServices([]);\r\n        return;\r\n      }\r\n\r\n      const filtered = services.filter(service => {\r\n        try {\r\n          if (!service || typeof service.service_name === 'undefined') {\r\n            return false;\r\n          }\r\n\r\n          const serviceName = String(service.service_name || '');\r\n          const search = String(searchTerm || '');\r\n\r\n          return serviceName.localeCompare(search, undefined, { sensitivity: 'base' }) === 0 ||\r\n            serviceName.includes(search);\r\n        } catch (err) {\r\n          console.error('Service filtering error:', err);\r\n          return false;\r\n        }\r\n      });\r\n\r\n      setFilteredServices(filtered);\r\n    } catch (err) {\r\n      console.error('Filtering error:', err);\r\n      setFilteredServices([]);\r\n    }\r\n  }, [services, searchTerm]);\r\n  const storedUserType = localStorage.getItem('userType');\r\n  // If there's a critical error, show the error message\r\n  if (error) {\r\n    return (\r\n      <ErrorMessage severity=\"error\">\r\n        <Typography variant=\"h6\">Error Loading Services</Typography>\r\n        <Typography variant=\"body2\">{error.message}</Typography>\r\n      </ErrorMessage>\r\n    );\r\n  }\r\n  // If services is not an array, show a warning\r\n  if (!Array.isArray(services)) {\r\n    return (\r\n      <ErrorMessage severity=\"warning\">\r\n        No services available at the moment. Please try again later.\r\n      </ErrorMessage>\r\n    );\r\n  }\r\n  // backgroundColor: colors.background,\r\n  return (\r\n    <Box sx={{ paddingY: { xs: 2, sm: 3, md: 4 }, backgroundColor: \"\", paddingX: 0, borderRadius: '12px' }}>\r\n      <UserGuard currentUser={storedUserType} excludeUserList={['Reseller', 'reseller partner api user']}>\r\n        {mobileNumberFilter?.includes(userNumber) !== true && (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              gap: 2,\r\n              width: \"100%\",\r\n              bgcolor: \"var(--bs-primary1)\",\r\n              color: \"var(--bs-primary2)\",\r\n              p: 2,\r\n              mb: 2,\r\n              borderRadius: 2,\r\n              border: \"2px solid var(--bs-primary3)\",\r\n            }}\r\n          >\r\n            <motion.div\r\n              initial={{ width: 50 }}\r\n              animate={{ width: focused || searchTerm ? '100%' : 50 }}\r\n              transition={{ type: \"spring\", stiffness: 800, damping: 15 }}\r\n              onHoverStart={() => setFocused(true)}\r\n              onHoverEnd={() => setFocused(false)}\r\n              style={{ width: '100%' }}\r\n            >\r\n              <TextField\r\n                variant=\"outlined\"\r\n                placeholder={placeholderTexts[placeholderIndex]}\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                onFocus={() => setFocused(true)}\r\n                onBlur={() => setFocused(false)}\r\n                fullWidth\r\n                size=\"small\"\r\n                sx={{\r\n                  bgcolor: \"var(--bs-primary1)\",\r\n                  color: \"var(--bs-primary2)\",\r\n                  borderRadius: 1,\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    color: \"var(--bs-primary2)\",\r\n                    \"& fieldset\": {\r\n                      borderColor: \"var(--bs-primary3)\",\r\n                      borderWidth: \"2px\",\r\n                    },\r\n                    \"&:hover fieldset\": {\r\n                      borderColor: \"var(--bs-primary3)\",\r\n                      borderWidth: \"2px\",\r\n                    },\r\n                    \"&.Mui-focused fieldset\": {\r\n                      borderColor: \"var(--bs-primary3)\",\r\n                      borderWidth: \"2px\",\r\n                    },\r\n                  },\r\n                  input: {\r\n                    color: \"var(--bs-primary2)\",\r\n                  },\r\n                }}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon sx={{ cursor: \"pointer\", color: \"var(--bs-primary2)\" }} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </motion.div>\r\n          </Box>\r\n        )}\r\n\r\n      </UserGuard>\r\n      {filteredServices.length === 0 && searchTerm && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          No services found matching your search.\r\n        </Alert>\r\n      )}\r\n      <Grid container spacing={2}>\r\n        {filteredServices.map((service) => {\r\n          try {\r\n            const serviceId = service?._id || '';\r\n            const serviceName = service?.service_name || 'Unnamed Service';\r\n            const serviceIcon = service?.icon || '';\r\n            const pathName = service?.route || \"#\";\r\n            return (\r\n              <Grid item xs={6} sm={4} md={3} lg={2} key={serviceId}>\r\n                <Link to={pathName}>\r\n                  <Card\r\n                    className=\"boxModel\"\r\n                    sx={{\r\n                      height: '100%',\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      alignItems: 'center',\r\n                      textAlign: 'center',\r\n                      padding: 2,\r\n                      boxShadow: 3,\r\n                      borderRadius: 2,\r\n                      transition: 'transform 0.2s ease-in-out',\r\n                      '&:hover': {\r\n                        transform: 'scale(1.03)',\r\n                      },\r\n                    }}\r\n                  >\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      src={genrateUrl(serviceIcon)}\r\n                      alt={serviceName}\r\n                      loading=\"eager\"\r\n                      onError={(e) => {\r\n                        e.target.onerror = null;\r\n                        e.target.src = '/servicesicon.png';\r\n                      }}\r\n                      sx={{\r\n                        width: 64,\r\n                        height: 64,\r\n                        objectFit: 'contain',\r\n                        marginBottom: 1,\r\n                      }}\r\n                    />\r\n                    <CardContent sx={{ padding: 0 }}>\r\n                      <Typography variant=\"body2\" fontWeight={500}>\r\n                        {serviceName}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card></Link>\r\n              </Grid>\r\n            );\r\n          } catch (error) {\r\n            console.error('Service rendering error:', error);\r\n            return null;\r\n          }\r\n        })}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ServiceGrid;","import React from 'react';\r\nimport { ArrowDownward, ArrowUpward, Warning } from '@mui/icons-material';\r\nimport { Box, Grid, Card, CardContent, Typography, IconButton } from '@mui/material';\r\n\r\nconst DashboardCard = ({ data }) => {\r\n\r\n  return (\r\n    <Box sx={{ p: 2 }}>\r\n      <Grid container spacing={3}>\r\n        {/* Total Transactions */}\r\n        {/* <Grid item xs={12} sm={6} md={6}>\r\n          <Card sx={{ bgcolor: '#ffffff', boxShadow: 1 , borderRadius: 2, height: '100%' }}>\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                <IconButton\r\n                  sx={{\r\n                    bgcolor: '#42a5f5',\r\n                    p: 2,\r\n                    borderRadius: '50%',\r\n                    color: '#fff',\r\n                    '&:hover': {\r\n                      bgcolor: '#2196f3',\r\n                    },\r\n                  }}\r\n                >\r\n                  SVG for Indian Rupee Symbol\r\n                  <svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"insert-row-above\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><defs></defs><path d=\"M878.7 336H145.3c-18.4 0-33.3 14.3-33.3 32v464c0 17.7 14.9 32 33.3 32h733.3c18.4 0 33.3-14.3 33.3-32V368c.1-17.7-14.8-32-33.2-32zM360 792H184V632h176v160zm0-224H184V408h176v160zm240 224H424V632h176v160zm0-224H424V408h176v160zm240 224H664V632h176v160zm0-224H664V408h176v160zm64-408H120c-4.4 0-8 3.6-8 8v80c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-80c0-4.4-3.6-8-8-8z\" /></svg>\r\n                </IconButton>\r\n                <Typography variant=\"h6\" sx={{ color: '#2196f3', fontWeight: 'bold' }}>\r\n                  {data?.dmtTotal ?? 0} ₹\r\n                </Typography>\r\n              </Box>\r\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" sx={{ textAlign: 'center', mt: 1 }}>\r\n                Total Transactions\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid> */}\r\n\r\n        {/* Credit */}\r\n        <Grid item xs={12} sm={6} md={6}>\r\n          <Card sx={{ bgcolor: '#ffffff', boxShadow: 3, borderRadius: 2, height: '100%' }}>\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                <IconButton\r\n                //   sx={{\r\n                //     bgcolor: '#4caf50',\r\n                //     p: 2,\r\n                //     borderRadius: '50%',\r\n                //     color: '#fff',\r\n                //     '&:hover': {\r\n                //       bgcolor: '#388e3c',\r\n                //     },\r\n                //   }}\r\n                >\r\n                  <ArrowDownward />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" sx={{ color: '#388e3c', fontWeight: 'bold' }}>\r\n                  {data?.totalCredit ?? 0} ₹\r\n                </Typography>\r\n              </Box>\r\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" sx={{ textAlign: 'center', mt: 1 }}>\r\n                Credit\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Debit */}\r\n        <Grid item xs={12} sm={6} md={6}>\r\n          <Card sx={{ bgcolor: '#ffffff', boxShadow: 3, borderRadius: 2, height: '100%' }}>\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                <IconButton\r\n                //   sx={{\r\n                //     bgcolor: '#e57373',\r\n                //     p: 2,\r\n                //     borderRadius: '50%',\r\n                //     color: '#fff',\r\n                //     '&:hover': {\r\n                //       bgcolor: '#d32f2f',\r\n                //     },\r\n                //   }}\r\n                >\r\n                  <ArrowUpward />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" sx={{ color: '#d32f2f', fontWeight: 'bold' }}>\r\n                  {data?.totalDebit ?? 0} ₹\r\n                </Typography>\r\n              </Box>\r\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" sx={{ textAlign: 'center', mt: 1 }}>\r\n                Debit\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Dispute Requests */}\r\n        <Grid item xs={12} sm={6} md={6}>\r\n          <Card sx={{ bgcolor: '#ffffff', boxShadow: 3, borderRadius: 2, height: '100%' }}>\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                <IconButton\r\n                //   sx={{\r\n                //     bgcolor: '#9c27b0',\r\n                //     p: 2,\r\n                //     borderRadius: '50%',\r\n                //     color: '#fff',\r\n                //     '&:hover': {\r\n                //       bgcolor: '#8e24aa',\r\n                //     },\r\n                //   }}\r\n                >\r\n                  <Warning />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" sx={{ color: '#8e24aa', fontWeight: 'bold' }}>\r\n                  {data?.totalDisputeCount ?? 0}\r\n                </Typography>\r\n              </Box>\r\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" sx={{ textAlign: 'center', mt: 1 }}>\r\n                Dispute Request\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DashboardCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  Pagination,\r\n  TextField,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Autocomplete, // Import Autocomplete component\r\n  Avatar,\r\n  Paper,\r\n  Button\r\n} from '@mui/material';\r\n\r\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\r\nimport TrendingDownIcon from '@mui/icons-material/TrendingDown';\r\nimport PendingIcon from '@mui/icons-material/Pending';\r\nimport { FaArrowDownLong, FaArrowUpLong, FaEyeSlash, FaEye } from \"react-icons/fa6\";\r\nimport Dashboardcard from './Dashboardcard';\r\nimport { getDAshboardDataForASMZSM, getRetailersForASMZSM } from '../../../../api/login/Login';\r\nimport { Link } from 'react-router-dom';\r\nimport UserGuard from '../../../../utils/UserGuard';\r\n\r\nconst customColors = {\r\n  success: {\r\n    iconBg: '#4CAF50',      // green\r\n    border: '#388E3C',\r\n    text: '#2E7D32',\r\n    label: 'Success',\r\n    key:'success'\r\n  },\r\n  failed: {\r\n    iconBg: '#F44336',      // red\r\n    border: '#D32F2F',\r\n    text: '#C62828',\r\n    label: 'Failed',\r\n    key:'failed'\r\n  },\r\n  pending: {\r\n    iconBg: '#FF9800',      // orange\r\n    border: '#F57C00',\r\n    text: '#EF6C00',\r\n    label: 'Pending',\r\n    key:'pending'\r\n  },\r\n  refund: {\r\n    iconBg: '#F44336',      // red\r\n    border: '#D32F2F',\r\n    text: '#C62828',\r\n    label: 'Refund',\r\n    key:'refund'\r\n\r\n\r\n  },\r\n\r\n  totalAmount : {\r\n    iconBg: '#4CAF50',      // green\r\n    border: '#388E3C',\r\n    text: '#2E7D32',\r\n    label: 'Total Amount',\r\n      key :\"totalAmount\"\r\n  },\r\n  balance_reverse : {\r\n    iconBg: '#FF9800',      // orange\r\n    border: '#F57C00',\r\n    text: '#EF6C00',\r\n    label: 'Balance Reverse',\r\n    key :\"balance_reverse\"\r\n  },\r\n  balance_transfer : {\r\n    iconBg: '#4CAF50',      // green\r\n    border: '#388E3C',\r\n    text: '#2E7D32',\r\n    label: 'Balance Transfer',\r\n     key :\"balance_transfer\"\r\n  },\r\n  cardGradient: 'linear-gradient(135deg, #FFFFFF, #F7F9FC)', // card background\r\n  titleColor: '#1E88E5',   // blue\r\n};\r\n\r\n\r\n\r\nconst obj =  {\r\n  success: {\r\n      \"count\": 0,\r\n      \"totalAmount\": 0\r\n  },\r\n  pending: {\r\n      \"count\": 0,\r\n      \"totalAmount\": 0\r\n  },\r\n  failed: {\r\n      \"count\": 0,\r\n      \"totalAmount\": 0\r\n  },\r\n  refund: {\r\n      \"count\": 0,\r\n      \"totalAmount\": 0\r\n  }\r\n}\r\n\r\nconst  fundTransferObj = {\r\n  totalAmount: 0,\r\n  balance_reverse: 0,\r\n  balance_transfer: 0,\r\n  totalCount: 0\r\n}\r\n\r\nconst SummaryCard = ({ title, data , url }) => {\r\n\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  return (\r\n    <Card   elevation={4}\r\n    sx={{\r\n      height: '100%',\r\n      background: customColors.cardGradient,\r\n      borderRadius: 3,\r\n      p: 2,\r\n      '&:hover': {\r\n        boxShadow: '0 8px 20px rgba(0, 0, 0, 0.15)',\r\n        transform: 'scale(1.02)',\r\n        transition: 'all 0.3s ease-in-out',\r\n      },\r\n    }}>\r\n        <Link to={url}>\r\n     \r\n      <CardContent>\r\n      <Typography\r\n          variant={isMobile ? 'h6' : 'h5'}\r\n          fontWeight=\"bold\"\r\n          gutterBottom\r\n          sx={{\r\n            color: 'var(--bs-nav)',\r\n            textAlign: 'center',\r\n            mb: 3,\r\n            fontSize:'16px'\r\n          }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n\r\n          {Object.keys(data)?.filter((item) => !['totalCount'].includes(item))\r\n          .map((status) => (\r\n            <Grid item xs={12} key={status}>\r\n              {/* <Chip \r\n                icon={status === 'success' ? <TrendingUpIcon /> : status === 'failed' ? <TrendingDownIcon /> : <PendingIcon />}\r\n                label={`${status.charAt(0).toUpperCase() + status.slice(1)}: ${data[status] ?? 'N/A'}`}\r\n                color={status === 'success' ? \"success\" : status === 'failed' ? \"error\" : \"warning\"}\r\n                sx={{ \r\n                  width: '100%', \r\n                  justifyContent: 'flex-start',\r\n                  fontWeight: 'bold',\r\n                  padding: theme.spacing(1.5),\r\n                  '& .MuiChip-icon': {\r\n                    color: 'white'\r\n                  }\r\n                }}\r\n              /> */}\r\n            \r\n             \r\n                <Chip\r\n                avatar={\r\n                  <Avatar sx={{ bgcolor: customColors[status]?.iconBg || customColors?.success?.iconBg }}>\r\n                    {status === 'success' ? <TrendingUpIcon fontSize={'20px'} sx={{ fill:'#fff', color: '#fff' }} /> :\r\n                     status === 'failed' ? <TrendingDownIcon fontSize={'20px'} sx={{ fill:'#fff', color: '#fff' }} /> :\r\n                     <PendingIcon fontSize={'20px'} sx={{ fill:'#fff', color: '#fff' }} />}\r\n                  </Avatar>\r\n                }\r\n                label={`${\r\n                  customColors?.[status]?.label || status || \"N/A\"\r\n                }: ${\r\n                  data?.[status]?.totalAmount ??\r\n                  data?.[customColors?.[status]?.key] ??\r\n                  \"0.00\"\r\n                }`}\r\n                \r\n                variant=\"outlined\"\r\n                sx={{\r\n                  width: '100%',\r\n                  justifyContent: 'flex-start',\r\n                  fontWeight: 'bold',\r\n                  p: 1,\r\n                  borderColor: customColors[status]?.border || customColors?.success?.border,\r\n                  '& .MuiChip-label': {\r\n                    fontWeight: 600,\r\n                    color: customColors[status]?.text ||  customColors?.success?.text,\r\n                  },\r\n                  '&:hover': {\r\n                    backgroundColor: `${customColors[status]?.iconBg}20`, // light transparent bg on hover\r\n                  },\r\n                  '& .MuiChip-icon': {\r\n                    fill:'#fff',\r\n                  },\r\n                }}\r\n              />\r\n              \r\n            </Grid>\r\n          ))} \r\n         \r\n        </Grid>\r\n      </CardContent>\r\n      </Link>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst PaginatedBusinessSummary = ({ data }) => {\r\n  const today = new Date().toISOString().split('T')[0]; \r\n  const [page, setPage] = useState(1);\r\n  const storedUserType = localStorage.getItem('userType');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [retailers , setRetailers] = useState([]) \r\n  const [selectedRetailer , setSelectedRetailer] = useState(null)\r\n  const [dashboardData , setDashboardData] = useState()\r\n  const itemsPerPage = 10;\r\n  const theme = useTheme();\r\n  const [fromDate, setFromDate] = useState(today);\r\n  const [toDate, setToDate] = useState(today);\r\n  const [submit , setSubmit ] = useState(false)\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleSearchChange = (event, newValue) => {\r\n    setSearchTerm(newValue || ''); // Set search term from selected value\r\n    setPage(1); // Reset to the first page on search\r\n  };\r\n\r\n  const summaryData = [\r\n    { title: \"Bank Transfer Summary\", data: dashboardData?.dmtTxns ?? obj , url:`/super/bank-transfer-report?start-date=${fromDate}&end-date=${toDate}` },\r\n    { title: \"AEPS Summary\", data: dashboardData?.aepsTxns ?? obj , url:`/super/aeps-transfer-report?start-date=${fromDate}&end-date=${toDate}` },\r\n    { title: \"BBPS Summary\", data: dashboardData?.bbpsTxns ?? obj , url:`/super/bbps-report?start-date=${fromDate}&end-date=${toDate}` },\r\n    { title: \"Fund Transfer Summary\", data: dashboardData?.fundTransfer ?? fundTransferObj , url:`/super/fund-transfer-report?start-date=${fromDate}&end-date=${toDate}` },\r\n  \r\n  ];\r\n\r\n\r\n  // console.log(summaryData , \"summary\")\r\n\r\n  // Filter summary data based on the search term\r\n  const filteredData = summaryData.filter(item =>\r\n    item.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const pageCount = Math.ceil(filteredData.length / itemsPerPage);\r\n  const displayedData = filteredData.slice((page - 1) * itemsPerPage, page * itemsPerPage);\r\n   \r\n  const handleSubmit = () => {\r\n    // Add your filter logic here\r\n   setSubmit((pre)=>!pre)\r\n  };\r\n\r\n  const getDashboardData  = async()=>{\r\n\r\n    let body = {\r\n      start_date :fromDate,\r\n      end_date:toDate,\r\n    }\r\n    console.log(selectedRetailer , \"sel\")\r\n     if(selectedRetailer)\r\n     {\r\n      body.retailer_id = selectedRetailer?._id\r\n     }\r\n    let res  = await getDAshboardDataForASMZSM(body)\r\n    setDashboardData(res?.data?.data || null)\r\n\r\n    \r\n  }\r\n\r\n    const getRetailers = async()=>{\r\n      let res = await getRetailersForASMZSM()\r\n      if(res?.data?.error === false)\r\n      {\r\n        setRetailers(res.data?.data || [])\r\n      }\r\n      else{\r\n        setRetailers([])\r\n      }\r\n    }\r\n\r\n    const handleReset  = ()=>{\r\n      setToDate('')\r\n      setFromDate('')\r\n      setSelectedRetailer(null)\r\n      setSubmit((pre)=>!pre)\r\n    }\r\n\r\n  useEffect(()=>{\r\n    getRetailers()\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    getDashboardData()\r\n  },[submit])\r\n\r\n \r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n   \r\n\r\n     <Card\r\n      elevation={0}\r\n      sx={{\r\n        p: 3,\r\n        pb:0,\r\n        mb: 0,\r\n        borderRadius: 3,\r\n        background: '#fff',\r\n        boxShadow: 0\r\n      }}\r\n    >\r\n      <Grid container spacing={2} >\r\n  <Grid item xs={12}>\r\n    <Box\r\n      sx={{\r\n        p: 2,\r\n        paddingX:0,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'start', // or 'flex-start' if you want left aligned\r\n        gap: 2,\r\n        width:'100%',\r\n        flexWrap: 'wrap', // 👈 prevent wrapping\r\n      }}\r\n    >\r\n      <TextField\r\n        label=\"From\"\r\n        type=\"date\"\r\n        size=\"small\"\r\n        value={fromDate}\r\n        onChange={(e) => setFromDate(e.target.value)}\r\n        InputLabelProps={{ shrink: true }}\r\n        inputProps={{\r\n          max: today, \r\n        }}\r\n        sx={{\r\n          flex:1,\r\n          minWidth: 160,\r\n          '& .MuiInputBase-root': { backgroundColor: '#fff' },\r\n          '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': { borderColor: 'var(--bs-primary1)' },\r\n            '&.Mui-focused fieldset': { borderColor: 'var(--bs-primary1)' },\r\n          },\r\n        }}\r\n      />\r\n\r\n      <TextField\r\n        label=\"To\"\r\n        type=\"date\"\r\n        size=\"small\"\r\n        value={toDate}\r\n        onChange={(e) => setToDate(e.target.value)}\r\n        InputLabelProps={{ shrink: true }}\r\n        inputProps={{\r\n          max: today, \r\n        }}\r\n        sx={{\r\n          flex:1,\r\n          minWidth: 160,\r\n          '& .MuiInputBase-root': { backgroundColor: '#fff' },\r\n          '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': { borderColor: 'var(--bs-primary1)' },\r\n            '&.Mui-focused fieldset': { borderColor: 'var(--bs-primary1)' },\r\n          },\r\n        }}\r\n      />\r\n   <UserGuard currentUser={storedUserType} excludeUserList={['Reseller']}>\r\n\r\n \r\n      <Autocomplete\r\n        options={retailers}\r\n        getOptionLabel={(option) => option.name}\r\n        value={selectedRetailer ?? null}\r\n        size='small'\r\n        onChange={(e, newVal) => setSelectedRetailer(newVal)}\r\n        sx={{   flex:1, minWidth: 220, flexShrink: 0 }} \r\n        renderOption={(props, option) => (\r\n          <li {...props} key={option.retailer_id}>\r\n            <Box\r\n              sx={{\r\n                fontSize: '13px',\r\n                color: 'var(--bs-nav)',\r\n              }}\r\n              display=\"flex\"\r\n              columnGap={1.5}\r\n              alignItems=\"center\"\r\n            >\r\n              {option.name}\r\n            </Box>\r\n          </li>\r\n        )}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Select Retailer\"\r\n            InputLabelProps={{\r\n              sx: {\r\n                '&.MuiInputLabel-root:not(.MuiInputLabel-shrink)': {\r\n                  top: '-3px',\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n      </UserGuard>\r\n      \r\n    </Box>\r\n  </Grid>\r\n  <Grid item xs={12}>\r\n  <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mr-3\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Search\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light\"\r\n              onClick={handleReset}\r\n            >\r\n              Reset\r\n            </button>\r\n      </Grid>\r\n</Grid>\r\n\r\n    </Card>\r\n   \r\n      <Dashboardcard  data={dashboardData }/>\r\n      <UserGuard currentUser={storedUserType} excludeUserList={['Reseller']}>\r\n    <Card\r\n      // elevation={1}\r\n      sx={{\r\n        p: 3,\r\n        pb:0,\r\n        borderRadius: 3,\r\n        boxShadow:0,\r\n        background: '#fff',\r\n      }}\r\n    >\r\n      <Typography variant=\"h4\" fontSize={'20px'} mb={2} gutterBottom fontWeight=\"bold\" color=\"var(--bs-nav)\" align=\"center\">\r\n        Business Summary\r\n      </Typography>\r\n\r\n\r\n      {/* Search Bar with Autocomplete */}\r\n      {/* <Autocomplete\r\n        freeSolo\r\n        options={summaryData.map(item => item.title)} // List of service titles for suggestions\r\n        onInputChange={handleSearchChange} // Handle search input changes\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            placeholder=\"Search by title...\"\r\n            fullWidth\r\n            sx={{ mb: 4 ,  \"& .MuiOutlinedInput-root\": {\r\n              \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n              \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n            }, }}\r\n          />\r\n        )}\r\n      /> */}\r\n\r\n      <Grid container spacing={3} sx={{ mb: 4 }}>\r\n        {displayedData.length > 0 ? (\r\n          displayedData.map((item, index) => (\r\n            <Grid item xs={12} md={6} key={index}>\r\n              <SummaryCard title={item.title} data={item.data}  url={item.url} />\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" color=\"textSecondary\" align=\"center\">\r\n              No data found for \"{searchTerm}\"\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n\r\n      {/* <Box display=\"flex\" justifyContent=\"center\">\r\n        <Pagination \r\n          count={pageCount} \r\n          page={page} \r\n          onChange={handleChangePage} \r\n          color=\"primary\" \r\n          size=\"large\"\r\n          disabled={pageCount <= 1}\r\n        />\r\n      </Box> */}\r\n      </Card>\r\n      </UserGuard>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaginatedBusinessSummary;\r\n","const filterApiUser = (content) => {\r\n    let user = localStorage.getItem('userType');\r\n    \r\n    if (user === 'Api User') {\r\n        return null; \r\n    }\r\n\r\n    return content;\r\n};\r\n\r\nexport default filterApiUser\r\n\r\n\r\nexport const  addAPIUserContent = (content)=>{\r\n    let user = localStorage.getItem('userType');\r\n    if (user === 'Api User') {\r\n        return content; \r\n    }\r\n\r\n    return null;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Tabs, Tab, Card, CardContent, Typography, Box, Container, useMediaQuery } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport { LocalOffer, Receipt } from '@mui/icons-material';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport ServiceGrid from './ServiceGrid';\r\nimport Todaybusiness from './Todaybusiness';\r\nimport \"./Tabstyle.css\"\r\nimport Dashboardcard from './Dashboardcard';\r\nimport filterApiUser from '../../../../utils/apiuserfilter';\r\n// Custom theme values\r\n// Custom Theme (only background color kept)\r\nconst customTheme = {\r\n  colors: {\r\n    background: 'var(--bs-primary3)', // only this color remains\r\n  },\r\n  fontWeights: {\r\n    regular: 400,\r\n    medium: 500,\r\n    bold: 700,\r\n  },\r\n  fontSize: {\r\n    small: '14px',\r\n    medium: '16px',\r\n    large: '20px',\r\n  },\r\n  spacing: (factor) => `${8 * factor}px`,\r\n  breakpoints: {\r\n    sm: '600px',\r\n  },\r\n  shadows: {\r\n    medium: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n    large: '0 10px 15px rgba(0, 0, 0, 0.1)',\r\n  },\r\n};\r\n\r\n// Styled Tabs with background color only\r\nconst StyledTabs = styled(Tabs)({\r\n  display: 'none',\r\n  '& .MuiTabs-indicator': {\r\n    backgroundColor: customTheme.colors.background,\r\n    height: 3,\r\n    display: 'none',\r\n  },\r\n});\r\n\r\n// Styled Tab with font styling, no color styling\r\nconst StyledTab = styled(Tab)({\r\n  textTransform: 'none',\r\n  fontWeight: customTheme.fontWeights.medium,\r\n  fontSize: customTheme.fontSize.medium,\r\n  marginRight: customTheme.spacing(4),\r\n  [`@media (max-width: ${customTheme.breakpoints.sm})`]: {\r\n    fontSize: customTheme.fontSize.small,\r\n    marginRight: customTheme.spacing(2),\r\n  },\r\n});\r\n\r\n// TabPanel with padding only\r\nconst TabPanel = styled(Box)({\r\n  padding: customTheme.spacing(3),\r\n  [`@media (max-width: ${customTheme.breakpoints.sm})`]: {\r\n    padding: customTheme.spacing(2),\r\n  },\r\n});\r\n\r\nconst RetailerDashboard = ({ storedUserType, services, data, isInstantpaypresnt }) => {\r\n  const [tabValue, setTabValue] = useState(null);\r\n  const isMobile = useMediaQuery(`(max-width: ${customTheme.breakpoints.sm})`);\r\n  useEffect(() => {\r\n    if (storedUserType === 'zsm' || storedUserType === 'asm' || storedUserType === 'Super Distributor' || storedUserType === 'Distributor') {\r\n      setTabValue(1)\r\n    }\r\n    else {\r\n      setTabValue(0)\r\n    }\r\n  }, [storedUserType])\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n\r\n\r\n  if (storedUserType != 'Retailer' && tabValue === 1) {\r\n    return (\r\n      <Box sx={{ p: customTheme.spacing(3) }}>\r\n        {/* <Typography variant=\"h4\" sx={{ color: customTheme.colors.text, fontWeight: customTheme.fontWeights.bold }}>\r\n          Transactions\r\n        </Typography> */}\r\n        {/* <Dashboardcard data={data}/> */}\r\n        <Todaybusiness data={data} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container sx={{ p: 0, backgroundColor: \"var(--bs-primary3)\" }}>\r\n      <StyledTabs\r\n        value={tabValue}\r\n        onChange={handleTabChange}\r\n        aria-label=\"dashboard tabs\"\r\n        variant={isMobile ? \"fullWidth\" : \"standard\"}\r\n        centered={!isMobile}\r\n      >\r\n        <StyledTab icon={<LocalOffer />} label=\"Services\" />\r\n        {filterApiUser(<StyledTab icon={<Receipt />} label=\"Transactions\" />)}\r\n      </StyledTabs>\r\n      <TabPanel sx={{ p: 0 }}>\r\n        {tabValue === 0 && <ServiceGrid services={services} isInstantpaypresnt={isInstantpaypresnt} />}\r\n        {tabValue === 1 && (\r\n          <Box>\r\n            {/* <Typography variant=\"h4\" gutterBottom sx={{ color: customTheme.colors.main, fontWeight: customTheme.fontWeights.bold }}>\r\n              Transaction Page\r\n            </Typography> */}\r\n            <Todaybusiness data={data} />\r\n          </Box>\r\n        )}\r\n      </TabPanel>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// const ServiceGrid = ({ services }) => {\r\n//   return (\r\n//     <Row xs={1} sm={2} md={3} lg={4} className=\"g-4\">\r\n//       {services.map((service, index) => (\r\n//         <Col key={index}>\r\n//           <ServiceCard>\r\n//             <CardContent>\r\n//               <CustomIcon component={service.icon} />\r\n//               <Typography variant=\"h6\" component=\"div\" sx={{ color: customTheme.colors.text, fontWeight: customTheme.fontWeights.medium }}>\r\n//                 {service.name}\r\n//               </Typography>\r\n//             </CardContent>\r\n//           </ServiceCard>\r\n//         </Col>\r\n//       ))}\r\n//     </Row>\r\n//   );\r\n// };\r\n\r\nexport default RetailerDashboard;","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { verifyOtpForTpin, generateOtpForResendTpin } from \"../../../api/login/Login\";\r\nimport { toast } from 'react-toastify';\r\nimport './Dashboard.css';\r\n\r\nconst DashboardOtpModal = ({ \r\n  modalVisibility, \r\n  handleCloseModal3, \r\n  handleSubmitmodal3, \r\n  storedUserid,\r\n  setModalVisibility,\r\n  getUserTpinStatus\r\n}) => {\r\n  const [otp, setOtp] = useState(new Array(6).fill(''));\r\n  const [timeLeft, setTimeLeft] = useState(120);\r\n  const [isTimerEnded, setIsTimerEnded] = useState(false);\r\n  const [resendLoading, setResendLoading] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const inputs = useRef([]);\r\n  const timerRef = useRef(null);\r\n\r\n  const formatTime = useCallback((time) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n    return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n  }, []);\r\n\r\n  const startTimer = useCallback(() => {\r\n    if (timerRef.current) clearInterval(timerRef.current);\r\n\r\n    setTimeLeft(120);\r\n    setIsTimerEnded(false);\r\n\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft((prevTime) => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(timerRef.current);\r\n          setIsTimerEnded(true);\r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (modalVisibility.showModal3) {\r\n      startTimer();\r\n    }\r\n    return () => {\r\n      if (timerRef.current) clearInterval(timerRef.current);\r\n    };\r\n  }, [modalVisibility.showModal3, startTimer]);\r\n\r\n  const otpHandleChange = useCallback((index, value) => {\r\n    const newOtp = [...otp];\r\n    newOtp[index] = value.slice(0, 1);\r\n    setOtp(newOtp);\r\n\r\n    if (value && index < 5 && inputs.current[index + 1]) {\r\n      inputs.current[index + 1].focus();\r\n    }\r\n  }, [otp]);\r\n\r\n  const handleKeyDown = useCallback((index, e) => {\r\n    if (e.key === 'Backspace' && !otp[index] && index > 0 && inputs.current[index - 1]) {\r\n      inputs.current[index - 1].focus();\r\n    }\r\n  }, [otp]);\r\n\r\n  const handleResendOTP = useCallback(async () => {\r\n    setResendLoading(true);\r\n    setError('');\r\n    setMessage('');\r\n\r\n    try {\r\n      const response = await generateOtpForResendTpin({ user_id: storedUserid });\r\n      if (response.status === 200) {\r\n        setMessage('OTP has been resent successfully.');\r\n        startTimer();\r\n        setOtp(new Array(6).fill(''));\r\n      } else {\r\n        setError('Failed to resend OTP.');\r\n      }\r\n    } catch (error) {\r\n      setError('Failed to resend OTP.');\r\n    } finally {\r\n      setResendLoading(false);\r\n    }\r\n  }, [storedUserid, startTimer]);\r\n\r\n  const handleSubmitOTP = useCallback(async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    setError('');\r\n\r\n    try {\r\n      const response = await verifyOtpForTpin({ user_id: storedUserid, otp: otp.join('') });\r\n      if (response?.data?.statusCode === 200) {\r\n        setMessage('OTP verified successfully.');\r\n        toast.success('OTP verified successfully.');\r\n        getUserTpinStatus(\"OV\");\r\n        handleSubmitmodal3();\r\n      } else {\r\n        setError(response?.data?.message || 'Failed to verify OTP.');\r\n        toast.error(response?.data?.message || 'Failed to verify OTP.');\r\n      }\r\n    } catch (error) {\r\n      setError('Failed to verify OTP.');\r\n      toast.error('Failed to verify OTP.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [storedUserid, otp, handleSubmitmodal3, getUserTpinStatus]);\r\n\r\n  if (!modalVisibility.showModal3) return null;\r\n\r\n  return (\r\n    <div className=\"modal fade modal-cssclasss mediaqurymodalpop show d-block\" tabIndex=\"-1\" role=\"dialog\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content modal-content-otp\">\r\n          <div className=\"modal-header text-center\">\r\n            <h5 className=\"modal-title modaltitle-otp\">OTP Verification</h5>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            {isTimerEnded ? (\r\n              <>\r\n                <p>We've sent a 6-digit verification code to your mobile number, please enter it here!</p>\r\n                <button type=\"button\" className=\"btn btn-resend-otp\" onClick={handleResendOTP}>\r\n                  {resendLoading ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : 'Resend OTP'}\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <p>We've sent a 6-digit verification code to your mobile number, please enter it here!!</p>\r\n                <div className=\"verification-timer\">OTP expires in {formatTime(timeLeft)} <span className=\"resend-otp\" \r\n                   style={{\r\n                    cursor: isTimerEnded ? 'pointer' : 'default',\r\n                    color: isTimerEnded ? 'blue' : 'gray',\r\n                    pointerEvents: isTimerEnded ? 'auto' : 'none',\r\n                  }}  onClick={handleResendOTP}>Resend OTP</span></div>\r\n                <div className=\"otp-inputs\">\r\n                  {otp.map((value, index) => (\r\n                    <input\r\n                      key={index}\r\n                      type=\"number\"\r\n                      maxLength=\"1\"\r\n                      value={value}\r\n                      onChange={(e) => otpHandleChange(index, e.target.value)}\r\n                      onKeyDown={(e) => handleKeyDown(index, e)}\r\n                      ref={(input) => (inputs.current[index] = input)}\r\n                      className=\"otp-input\"\r\n                    />\r\n                  ))}\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-submit-otp\"\r\n                  onClick={handleSubmitOTP}\r\n                  disabled={otp.some(digit => digit === '') || loading}\r\n                >\r\n                  {loading ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : 'Submit OTP'}\r\n                </button>\r\n                {message && <div className=\"alert alert-success mt-3\">{message}</div>}\r\n                {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(DashboardOtpModal);","import { FaArrowDownLong, FaArrowUpLong, FaEyeSlash, FaEye } from \"react-icons/fa6\";\r\nimport imsgChart from '../../../asesets/adminImage/chart.png';\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\nimport { Bar, Doughnut, Line, PolarArea } from \"react-chartjs-2\";\r\nimport DasBoardSlideProduct from \"./dasboardSlideProduct/DasBoardSlideProduct\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { Getprofile, dateGet, generateOtpForTpin, verifyOtpForTpin, generatenewTpin, resendOtpsCustomer, generateOtpForResendTpin, demoapiCheck } from \"../../../api/login/Login\";\r\nimport { TiTick, TiTickOutline } from 'react-icons/ti';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport './Dashboard.css';\r\nimport image from \"../../../asesets/logo/image4.jpeg\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getUserTpinStatus } from \"../../../utils/localStorage\";\r\nimport CustomMarquee from \"./CustomMarquee\";\r\nimport BBpsservicelist from \"./dasboardSlideProduct/BBPSServiceList\";\r\nimport RetailerDashboard from \"./dasboardSlideProduct/RetailerDashboard\";\r\nimport DashboardOtpModal from \"./DashboardOtpModal\";\r\nfunction DasBoardCheck({ walletData, services, isInstantpaypresnt = { isInstantpaypresnt } }) {\r\n    const [data, setData] = useState({});\r\n    const [number, setNumber] = useState('');\r\n    const [loader1, setLoader1] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n    const [newPin, setNewPin] = useState('');\r\n    const [confirmPin, setConfirmPin] = useState('');\r\n    const [pinError, setPinError] = useState(false);\r\n    const [confirmError, setConfirmError] = useState(false);\r\n\r\n    const [userTpinstatus, setUserTpinstatus] = useState(null);\r\n    const [dataprofile, setDataprofile] = useState(null);\r\n    const [message1, setMessage1] = useState('');\r\n    const [error1, setError1] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [message2, setMessage2] = useState('');\r\n    const [error2, setError2] = useState('');\r\n    const [message3, setMessage3] = useState('');\r\n    const [error3, setError3] = useState('');\r\n    const storedUserid = localStorage.getItem('userIdToken');\r\n    console.log(\"storedUserid\", storedUserid);\r\n    const [showNewPin, setShowNewPin] = useState(false);\r\n    const [showConfirmPin, setShowConfirmPin] = useState(false);\r\n    const [timeLeft, setTimeLeft] = useState(180);\r\n    const [isTimerEnded, setIsTimerEnded] = useState(false);\r\n    const [resendLoading, setResendLoading] = useState(false);\r\n    const [initializing, setInitializing] = useState(true);\r\n    const [modalVisibility, setModalVisibility] = useState({\r\n        showModal: false,\r\n        showModal2: false,\r\n        showModal3: false,\r\n        showOverlay: false\r\n    })\r\n\r\n    const currentDates = async () => {\r\n        const date = new Date();\r\n        let day = date.getDate();\r\n        let month = date.getMonth() + 1;\r\n        let year = date.getFullYear();\r\n        let currentDate = `${year}-${month}-${day}`;\r\n        // let currentDate = '2024-1-1'\r\n\r\n        try {\r\n            const res = await dateGet(currentDate);\r\n            setData(res?.data?.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    const handleCloseModal1 = () => {\r\n        setModalVisibility(prev => ({ ...prev, showModal: false, showOverlay: false }));\r\n        setMessage1('');\r\n        setError1('');\r\n    };\r\n    const handleCloseModal2 = () => {\r\n        setModalVisibility(prev => ({ ...prev, showModal2: false, showOverlay: false }));\r\n    };\r\n\r\n    const handleOpenModal3 = () => {\r\n        setModalVisibility(prev => ({ ...prev, showModal3: true, showOverlay: true }));\r\n    };\r\n\r\n    const handleCloseModal3 = () => {\r\n        setModalVisibility(prev => ({ ...prev, showModal3: false, showOverlay: false }));\r\n    };\r\n    const handleSubmitmodal3 = (e) => {\r\n        setModalVisibility(prev => ({ ...prev, showModal3: false, showModal2: true }));\r\n    }\r\n\r\n    const handleNewPinChange = (e) => {\r\n        const pin = e.target.value;\r\n        if (/^\\d{0,6}$/.test(pin)) {\r\n            setNewPin(pin);\r\n            setPinError(pin.length !== 4);\r\n        } else {\r\n            setPinError(true);\r\n        }\r\n    };\r\n\r\n    const handleConfirmPinChange = (e) => {\r\n        const pin = e.target.value;\r\n        if (/^\\d{0,6}$/.test(pin)) {\r\n            setConfirmPin(pin);\r\n            setConfirmError(pin.length !== 4 || pin !== newPin);\r\n        } else {\r\n            setConfirmError(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        currentDates();\r\n        const storedTpinStatus = localStorage.getItem('userTpinstatus');\r\n        setUserTpinstatus(storedTpinStatus);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const initializeModals = () => {\r\n            if (userTpinstatus === \"CV\") {\r\n\r\n                setModalVisibility({\r\n                    showModal: false,\r\n                    showModal2: false,\r\n                    showModal3: false,\r\n                    showOverlay: false\r\n                });\r\n            } else if (userTpinstatus === \"NP\" || userTpinstatus === null || userTpinstatus === undefined || userTpinstatus === '' || userTpinstatus == \"undefined\") {\r\n\r\n                setModalVisibility({\r\n                    showModal: true,\r\n                    showModal2: false,\r\n                    showModal3: false,\r\n                    showOverlay: true\r\n                });\r\n            } else if (userTpinstatus === \"OV\") {\r\n\r\n                setModalVisibility({\r\n                    showModal: false,\r\n                    showModal2: true,\r\n                    showModal3: false,\r\n                    showOverlay: true\r\n                });\r\n            } else {\r\n\r\n                setModalVisibility({\r\n                    showModal: false,\r\n                    showModal2: false,\r\n                    showModal3: false,\r\n                    showOverlay: false\r\n                });\r\n            }\r\n        };\r\n\r\n\r\n        if (userTpinstatus !== null) {\r\n            initializeModals();\r\n        }\r\n    }, [userTpinstatus]);\r\n\r\n\r\n    const handleSubmitmodal1 = async () => {\r\n        setLoader1(true);\r\n\r\n        try {\r\n            const response = await generateOtpForTpin({});\r\n            setLoader1(false);\r\n\r\n            if (response && response.data && response.data.error === false) {\r\n                toast.success('TPIN generated successfully');\r\n                console.log(\"tpin generated\");\r\n                setMessage1(response.data.message);\r\n                handleCloseModal1();\r\n                handleOpenModal3();\r\n            } else {\r\n                setError1(\"Failed to generate TPIN\");\r\n                toast.error('Failed to generate TPIN');\r\n            }\r\n        } catch (error) {\r\n            setLoader1(false);\r\n            setError1('Failed to generate OTP for Tpin');\r\n            toast.error('Failed to generate TPIN');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (newPin.length !== 4 || confirmPin.length !== 4 || newPin !== confirmPin) {\r\n            setConfirmError(true);\r\n            return;\r\n        }\r\n        setLoader(true);\r\n        setMessage3('');\r\n        setError3('');\r\n        try {\r\n            const response = await generatenewTpin({\r\n                user_id: storedUserid,\r\n                genTpin: newPin,\r\n                confirmTpin: confirmPin\r\n            });\r\n            if (response?.data?.statusCode == '200') {\r\n                getUserTpinStatus(\"CV\")\r\n                setMessage3('New TPIN generated successfully.');\r\n                toast.success('New TPIN generated successfully!');\r\n                handleCloseModal2();\r\n            } else {\r\n                setError3('Failed to generate TPIN.');\r\n                toast.error('Failed to generate TPIN.');\r\n            }\r\n        } catch (error) {\r\n            setError3('Failed to generate TPIN.');\r\n            toast.error('Failed to generate TPIN.');\r\n        } finally {\r\n            setLoader(false);\r\n        }\r\n    };\r\n    const length1 = 6;\r\n    const [otp1, setOtp1] = useState(new Array(length1).fill(''));\r\n    const inputs1 = useRef([]);\r\n    const otpChandleChange1 = (index, value) => {\r\n        const newOtp = [...otp1];\r\n        if (value.length === 2) {\r\n            return;\r\n        }\r\n        newOtp[index] = value;\r\n        setOtp1(newOtp);\r\n        if (value && index < length1 - 1 && inputs1.current[index + 1]) {\r\n            inputs1.current[index + 1].focus();\r\n        }\r\n    };\r\n\r\n    const handleKeyDown1 = (index, e) => {\r\n        if (e.key === 'Backspace' && !otp1[index] && index > 0 && inputs1.current[index - 1]) {\r\n            inputs1.current[index - 1].focus();\r\n        }\r\n    };\r\n\r\n    const isAllInputsFilled = !otp1.includes('');\r\n\r\n    const handleSubmitOTP = async () => {\r\n        setLoading(true);\r\n        setMessage2('');\r\n        setError2('');\r\n\r\n        try {\r\n            const response = await verifyOtpForTpin({ user_id: storedUserid, otp: otp1.join('') });\r\n            console.log(\"otpres\", response);\r\n\r\n            if (response?.data?.statusCode == '200') {\r\n                getUserTpinStatus(\"OV\");\r\n                setMessage2('OTP verified successfully.');\r\n                toast.success('OTP verified successfully.');\r\n                handleSubmitmodal3();\r\n            } else if (response?.message === 'Invalid OTP') {\r\n                setError2('Invalid OTP.');\r\n                toast.error('Invalid OTP.');\r\n            } else {\r\n                setError2('Failed to verify OTP.');\r\n                toast.error('Failed to verify OTP.');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"otperr\", error);\r\n\r\n            if (error.response?.data?.message === 'Invalid OTP') {\r\n                setError2('Invalid OTP.');\r\n                toast.error('Invalid OTP.');\r\n            } else {\r\n                setError2('Failed to verify OTP.');\r\n                toast.error('Failed to verify OTP.');\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const dummyInputs = new Array(length1).fill(null);\r\n    function processCustomerMobile() {\r\n\r\n        var value = window.localStorage.getItem('regisNumber');\r\n\r\n\r\n        var mobile = '';\r\n\r\n\r\n        if (value) {\r\n\r\n            if (value.charAt(0) == '+' || value.charAt(0) == '0') {\r\n                mobile = value.replace(/[^a-zA-Z0-9+]/g, \"\").substr(3);\r\n            } else {\r\n                mobile = value.replace(/[^a-zA-Z0-9]/g, \"\");\r\n            }\r\n        } else {\r\n            console.log('No registration number found in localStorage.');\r\n        }\r\n\r\n\r\n        return mobile;\r\n    }\r\n\r\n\r\n    var customerMobile = processCustomerMobile();\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\" timeLeft:\", timeLeft, \"isTimerEnded:\", isTimerEnded);\r\n        let timer;\r\n        if (timeLeft > 0 && !isTimerEnded) {\r\n            timer = setTimeout(() => {\r\n                console.log(\"Decreasing timeLeft:\", timeLeft - 1);\r\n                setTimeLeft(prevTime => prevTime - 1);\r\n            }, 1000);\r\n        } else if (timeLeft === 0 && !isTimerEnded) {\r\n            setIsTimerEnded(true);\r\n            console.log(\"Timer ended\");\r\n        }\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    const formatTime = (time) => {\r\n        const minutes = Math.floor(time / 60);\r\n        const seconds = time % 60;\r\n        return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n    };\r\n\r\n    const handleResendOTP = async () => {\r\n        setResendLoading(true);\r\n        setError2('');\r\n        setMessage2('');\r\n\r\n        try {\r\n            const response = await generateOtpForResendTpin({ customer_mobile: customerMobile, user_id: storedUserid });\r\n            if (response.status === 200) {\r\n                setMessage2('OTP has been resent successfully.');\r\n                setTimeLeft(180);\r\n                setIsTimerEnded(false);\r\n            } else {\r\n                setError2('Failed to resend OTP.');\r\n            }\r\n        } catch (error) {\r\n            setError2('Failed to resend OTP.');\r\n        } finally {\r\n            setResendLoading(false);\r\n        }\r\n    };\r\n    const storedUserType = localStorage.getItem('userType');\r\n    const userName = walletData ? walletData?.name : \"\";\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await demoapiCheck()\r\n                console.log('ledgerreport report Service Report Data:', data);\r\n            } catch (error) {\r\n                console.error('Error fetching commission service report data:', error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    return (\r\n        <>\r\n            {modalVisibility.showOverlay && <div className=\"overlay modalpinoverlayclass\"></div>}\r\n            <div className=\"ContentArea\">\r\n                <div className=\"card\" style={{ backgroundColor: 'var(--bs-primary3)' }}>\r\n                    <CustomMarquee retailerName={userName} />\r\n                    <RetailerDashboard storedUserType={storedUserType} services={services} data={data} isInstantpaypresnt={isInstantpaypresnt} />\r\n                    {/* {!(storedUserType === 'Super Distributor' || storedUserType === 'Distributor') && (\r\n                        <>\r\n                            <BBpsservicelist services={services} />\r\n                            {<RetailerDashboard storedUserType={storedUserType} />}\r\n                        </>\r\n                    )} */}\r\n                </div>\r\n            </div>\r\n            {/* Bootstrap Modal 1 */}\r\n            {modalVisibility.showModal && (\r\n                <div className={`modal fade mediaqurymodalpop show d-block`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" onHide={handleCloseModal1} >\r\n                    <div className=\"lock-screen\">\r\n                        <div className=\"lock-screen__content\">\r\n                            <div className=\"image-bg\" >\r\n                                <img className=\"lock-screen__imgae\" src={image} />\r\n                            </div>\r\n                            {/* <h1 className=\"lock-screen__greeting\">Hey, {dataprofile?.name?.split(' ')[0] || \"\"}</h1> */}\r\n                            <h2 className=\"lock-screen__message mt-3\">\r\n                                Generate Tpin for secure payments.\r\n                            </h2>\r\n                            <p className=\"lock-screen__instruction\">Click on button to generate Tpin</p>\r\n                            <button className=\"unlock-button\" onClick={handleSubmitmodal1}>\r\n                                {loader1 ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : 'Generate Tpin'}</button>\r\n                            {message1 && (\r\n                                <div className=\"alert alert-success mt-1\" role=\"alert\">\r\n                                    {message1}\r\n                                </div>\r\n                            )}\r\n                            {error1 && (\r\n                                <div className=\"alert alert-danger mt-1\" role=\"alert\">\r\n                                    {error1}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {modalVisibility.showModal3 && (\r\n                <>\r\n                    <DashboardOtpModal\r\n                        modalVisibility={modalVisibility}\r\n                        handleCloseModal3={handleCloseModal3}\r\n                        handleSubmitmodal3={handleSubmitmodal3}\r\n                        storedUserid={storedUserid}\r\n                        setModalVisibility={setModalVisibility}\r\n                        getUserTpinStatus={getUserTpinStatus}\r\n                    />\r\n                </>\r\n            )}\r\n            {modalVisibility.showModal2 && (\r\n                <div className={`modal fade modal-cssclasss mediaqurymodalpop show d-block`} tabIndex=\"-1\" role=\"dialog\">\r\n                    <div className=\"modal-dialog getpinmodal\" role=\"document\">\r\n                        <div className=\"modal-content text-center\">\r\n                            <div className=\"modal-header text-center\">\r\n                                <h5 className=\"modal-title modaltitle-otp\">Create your Tpin</h5>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <div className=\"mb-3\">\r\n                                            <div className=\"input-group\">\r\n                                                <input\r\n                                                    type={showNewPin ? \"text\" : \"password\"}\r\n                                                    className={`form-control ${newPin.length === 4 && !pinError ? 'is-valid' : ''}`}\r\n                                                    id=\"newPin\"\r\n                                                    value={newPin}\r\n                                                    onChange={handleNewPinChange}\r\n                                                    placeholder=\"Enter new PIN\"\r\n                                                    aria-label=\"New PIN\"\r\n                                                    aria-describedby=\"basic-addon1\"\r\n                                                    required\r\n                                                />\r\n                                                {newPin.length === 4 && !pinError && (\r\n                                                    <span className=\"position-absolute top-50 end-0 translate-middle-y pe-2\">\r\n                                                        <TiTick />\r\n                                                    </span>\r\n                                                )}\r\n                                                <button\r\n                                                    className=\"btn \" style={{ borderColor: '#aaaaaa57' }}\r\n                                                    type=\"button\"\r\n                                                    onClick={() => setShowNewPin(!showNewPin)}\r\n                                                >\r\n                                                    {showNewPin ? <FaEyeSlash /> : <FaEye />}\r\n                                                </button>\r\n                                            </div>\r\n                                            {pinError && (\r\n                                                <div className=\"text-danger\">\r\n                                                    Please enter exactly 4 numeric digits.\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"mb-3\">\r\n                                            <div className=\"input-group\">\r\n                                                <input\r\n                                                    type={showConfirmPin ? \"text\" : \"password\"}\r\n                                                    className={`form-control ${confirmPin.length === 4 && !confirmError ? 'is-valid' : ''}`}\r\n                                                    id=\"confirmPin\"\r\n                                                    value={confirmPin}\r\n                                                    onChange={handleConfirmPinChange}\r\n                                                    placeholder=\"Confirm new PIN\"\r\n                                                    aria-label=\"Confirm PIN\"\r\n                                                    aria-describedby=\"basic-addon2\"\r\n                                                    required\r\n                                                />\r\n\r\n                                                <button\r\n                                                    className=\"btn \" style={{ borderColor: '#aaaaaa57' }}\r\n                                                    type=\"button\"\r\n                                                    onClick={() => setShowConfirmPin(!showConfirmPin)}\r\n                                                >\r\n                                                    {showConfirmPin ? <FaEyeSlash /> : <FaEye />}\r\n                                                </button>\r\n                                            </div>\r\n                                            {confirmError && <div className=\"text-danger\">PINs do not match or are not 4 digits.</div>}\r\n                                        </div>\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-submit-otp\"\r\n                                            disabled={pinError || confirmError || newPin.length !== 4 || confirmPin.length !== 4}\r\n                                        >\r\n                                            {loader ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : 'Submit'}\r\n                                        </button>\r\n                                        {message3 && <div className=\"alert alert-success mt-3\">{message3}</div>}\r\n                                        {error3 && <div className=\"alert alert-danger mt-3\">{error3}</div>}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n        </>\r\n    );\r\n}\r\nexport default DasBoardCheck;\r\n\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { Box, Typography, Stack, Avatar, Divider } from \"@mui/material\";\r\nimport { genrateUrl } from \"../../../utils/genrateUrl\";\r\nconst ProfileModal = ({ show, handleClose, profiledata }) => {\r\n  if (!profiledata) return null;\r\n  const business = profiledata?.businessInfo || {};\r\n  return (\r\n    <Modal show={show} onHide={handleClose} centered size=\"md\" className=\"custom-modal\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Profile Details</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/* Profile Header */}\r\n        <Stack alignItems=\"center\" spacing={1.2} mb={2}>\r\n          <Avatar\r\n            src={genrateUrl(profiledata?.profile)}\r\n            sx={{\r\n              width: 80,\r\n              height: 80,\r\n              border: \"2px solid var(--bs-primary3)\",\r\n              boxShadow: \"0 0 8px rgba(0,0,0,0.1)\",\r\n            }}\r\n          />\r\n          <Typography variant=\"h6\" sx={{ fontWeight: 600, textAlign: \"center\" }}>\r\n            {profiledata?.name || \"—\"}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            sx={{ color: \"text.secondary\", textAlign: \"center\" }}\r\n          >\r\n            Code: {profiledata?.refer_id || \"N/A\"}\r\n          </Typography>\r\n        </Stack>\r\n\r\n        <Divider sx={{ mb: 2 }} />\r\n\r\n        {/* Profile Details */}\r\n        <Box sx={{ px: 1 }}>\r\n          {profiledata?.isGstAvailable ? (\r\n            <>\r\n              <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                <strong>GST Number:</strong> {business?.gst_NUmber || \"—\"}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                <strong>Legal Name:</strong>{\" \"}\r\n                {business?.legal_name_of_business || \"—\"}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                <strong>Business Type:</strong>{\" \"}\r\n                {business?.constitution_of_business || \"—\"}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Address:</strong>{\" \"}\r\n                {business?.principal_place_address || \"—\"}\r\n              </Typography>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                <strong>Shop:</strong> {profiledata?.shop_name || \"—\"}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                <strong>Address:</strong> {profiledata?.business_Address || \"—\"}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                <strong>Area:</strong> {profiledata?.business_Area || \"—\"}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>City:</strong> {profiledata?.business_city || \"—\"}\r\n              </Typography>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ProfileModal;\r\n","import { Avatar, Grid, Stack, Typography, Chip, Box, Button, Divider } from \"@mui/material\";\r\nimport DasBoardCheck from \"../../../components/admin/daseboardCheck/DasBoardChaeck\";\r\nimport { genrateUrl } from \"../../../utils/genrateUrl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\nconst DetailRow = ({ label, value }) => {\r\n  return (\r\n    <Grid container borderBottom={1} borderColor=\"#F4F0F0\" width=\"100%\" alignItems=\"center\" backgroundColor=\"var(--bs-primary2)\">\r\n      <Grid item xs={6}>\r\n        <Typography\r\n          textAlign=\"left\"\r\n          variant=\"h6\"\r\n          sx={{ px: 2, py: 1, fontSize: \"12px\", color: \"var(--bs-nav)\" }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Typography\r\n          textAlign=\"right\"\r\n          variant=\"body2\"\r\n          sx={{ px: 2, py: 1, fontSize: \"11px\", color: \"var(--bs-nav)\" }}\r\n        >\r\n          {value}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nfunction DaseboardCheckPage({ profiledata, walletData, services, position, isInstantpaypresnt }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const transactions = [\r\n    { id: 1, title: \"Payment received\", amount: \"+₹1,200\" },\r\n    { id: 2, title: \"Withdrawal processed\", amount: \"-₹500\" },\r\n    { id: 3, title: \"Commission added\", amount: \"+₹300\" },\r\n    { id: 4, title: \"Recharge success\", amount: \"-₹200\" },\r\n    { id: 5, title: \"Cashback credited\", amount: \"+₹100\" },\r\n  ];\r\n  return (\r\n    <Grid container sx={{ height: \"100%\", overflow: \"auto\", backgroundColor: \"var(--bs-primary3)\" }}>\r\n      {/* Left scrollable section */}\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        md={10.2}\r\n        sx={{\r\n          height: \"100%\",\r\n          overflowY: \"auto\",\r\n          pr: 2,\r\n          scrollbarWidth: \"none\",\r\n          \"&::-webkit-scrollbar\": {\r\n            display: \"none\",\r\n          },\r\n        }}\r\n      >\r\n        <DasBoardCheck\r\n          walletData={walletData}\r\n          services={services}\r\n          position={position}\r\n          isInstantpaypresnt={isInstantpaypresnt}\r\n        />\r\n      </Grid>\r\n      {/* Right fixed sidebar */}\r\n      <>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={1.8}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            gap: 2,\r\n          }}\r\n        >\r\n          {/* PROFILE SECTION */}\r\n          <Box\r\n            sx={{\r\n              width: \"100%\",\r\n              color: \"var(--bs-primary2)\",\r\n              borderRadius: \"16px\",\r\n              boxShadow: \"0 4px 10px rgba(0,0,0,0.05)\",\r\n              p: 2,\r\n              textAlign: \"center\",\r\n              backgroundColor: \"var(--bs-primary1)\"\r\n            }}\r\n          >\r\n            <Stack alignItems=\"center\" spacing={1}>\r\n              <Avatar\r\n                src={genrateUrl(profiledata?.profile)}\r\n                sx={{\r\n                  width: 70,\r\n                  height: 70,\r\n                  border: \"2px solid var(--bs-primary3)\",\r\n                  boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\r\n                }}\r\n              />\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                sx={{\r\n                  color: \"var(--bs-primary2)\",\r\n                  whiteSpace: \"nowrap\",\r\n                  overflow: \"hidden\",\r\n                  textOverflow: \"ellipsis\",\r\n                  fontWeight: 600,\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                {profiledata?.name || \"—\"}\r\n              </Typography>\r\n\r\n              <Typography\r\n                variant=\"body2\"\r\n                sx={{ color: \"var(--bs-primary2)\", fontSize: \"14px\" }}\r\n              >\r\n                Balance: ₹{profiledata?.wallet_balance ?? \"XXXX\"}\r\n              </Typography>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                sx={{\r\n                  backgroundColor: \"var(--bs-primary3)\",\r\n                  textTransform: \"none\",\r\n                  fontSize: \"13px\",\r\n                  mt: 1,\r\n                }}\r\n                onClick={() => setShowModal(true)}\r\n              >\r\n                View\r\n              </Button>\r\n            </Stack>\r\n          </Box>\r\n\r\n          {/* HELP CENTER SECTION */}\r\n          <Box\r\n            sx={{\r\n              width: \"100%\",\r\n              color: \"var(--bs-primary2)\",\r\n              borderRadius: \"16px\",\r\n              boxShadow: \"0 4px 10px rgba(0,0,0,0.05)\",\r\n              p: 2,\r\n              backgroundColor: \"var(--bs-primary1)\"\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h6\"\r\n              sx={{\r\n                fontSize: \"16px\",\r\n                fontWeight: 600,\r\n                color: \"var(--bs-primary2)\",\r\n                mb: 1,\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Help Center\r\n            </Typography>\r\n\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{ color: \"text.secondary\", fontSize: \"13px\", textAlign: \"center\", color: \"var(--bs-primary2)\", }}\r\n            >\r\n              📞 +91 9876543210\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{ color: \"text.secondary\", fontSize: \"13px\", textAlign: \"center\", color: \"var(--bs-primary2)\", }}\r\n            >\r\n              ✉️ support@example.com\r\n            </Typography>\r\n\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{\r\n                textTransform: \"none\",\r\n                fontSize: \"13px\",\r\n                mt: 1.5,\r\n                borderColor: \"var(--bs-primary3)\",\r\n                color: \"var(--bs-primary2)\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              Contact Us\r\n            </Button>\r\n          </Box>\r\n\r\n          {/* LATEST TRANSACTIONS SECTION */}\r\n          <Box\r\n            sx={{\r\n              width: \"100%\",\r\n              color: \"var(--bs-primary2)\",\r\n              borderRadius: \"16px\",\r\n              boxShadow: \"0 4px 10px rgba(0,0,0,0.05)\",\r\n              p: 2,\r\n              backgroundColor: \"var(--bs-primary1)\"\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h6\"\r\n              sx={{\r\n                fontSize: \"16px\",\r\n                fontWeight: 600,\r\n                color: \"var(--bs-primary2)\",\r\n                mb: 1,\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Recent Transactions\r\n            </Typography>\r\n\r\n            {transactions.map((txn, index) => (\r\n              <Box key={txn.id}>\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    py: 0.5,\r\n                    color: \"var(--bs-primary2)\",\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    sx={{ fontSize: \"13px\" }}\r\n                  >\r\n                    {txn.title}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    sx={{\r\n                      fontWeight: 600,\r\n                      fontSize: \"13px\",\r\n                    }}\r\n                  >\r\n                    {txn.amount}\r\n                  </Typography>\r\n                </Box>\r\n                {index < transactions.length - 1 && <Divider />}\r\n              </Box>\r\n            ))}\r\n\r\n            <Button\r\n              variant=\"text\"\r\n              size=\"small\"\r\n              sx={{\r\n                textTransform: \"none\",\r\n                fontSize: \"13px\",\r\n                mt: 1,\r\n                color: \"var(--bs-primary2)\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              View More →\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n\r\n        {/* BOOTSTRAP PROFILE MODAL */}\r\n        <ProfileModal\r\n          show={showModal}\r\n          handleClose={() => setShowModal(false)}\r\n          profiledata={profiledata}\r\n        />\r\n      </>\r\n\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default DaseboardCheckPage;\r\n","const UserGuard = ({\r\n  currentUser,\r\n  allowUserList = [],\r\n  excludeUserList = [],\r\n  children\r\n}) => {\r\n  // If currentUser is in the exclude list, block it\r\n  if (excludeUserList.includes(currentUser)) return null;\r\n \r\n  // If allowUserList is provided, only allow users in that list\r\n  if (allowUserList.length > 0 && !allowUserList.includes(currentUser)) return null;\r\n \r\n  // Otherwise render children\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default UserGuard","import { baseUrlImage } from \"../baseUrl\"\r\n\r\n\r\n\r\nexport const genrateUrl = url =>  baseUrlImage + (url || '')"],"names":["_ref","retailerName","_jsx","className","children","_jsxs","placeholderTexts","colors","ErrorMessage","styled","Paper","theme","padding","spacing","textAlign","backgroundColor","display","flexDirection","alignItems","justifyContent","cursor","transition","borderRadius","border","height","position","zIndex","transform","boxShadow","backgroundClip","Box","_ref2","marginBottom","top","width","breakpoints","up","Alert","_ref3","margin","_ref4","services","isInstantpaypresnt","useNavigate","userNumber","localStorage","getItem","searchTerm","setSearchTerm","useState","focused","setFocused","error","setError","filteredServices","setFilteredServices","useTheme","useMediaQuery","only","useEffect","Array","isArray","Error","err","console","placeholderIndex","setPlaceholderIndex","interval","setInterval","prev","length","clearInterval","filtered","filter","service","service_name","serviceName","String","search","localeCompare","undefined","sensitivity","includes","storedUserType","severity","Typography","variant","message","sx","paddingY","xs","sm","md","paddingX","UserGuard","currentUser","excludeUserList","mobileNumberFilter","gap","bgcolor","color","p","mb","motion","div","initial","animate","type","stiffness","damping","onHoverStart","onHoverEnd","style","TextField","placeholder","value","onChange","e","target","onFocus","onBlur","fullWidth","size","borderColor","borderWidth","input","InputProps","startAdornment","InputAdornment","SearchIcon","Grid","container","map","serviceId","_id","serviceIcon","icon","pathName","route","item","lg","Link","to","Card","CardMedia","component","src","genrateUrl","alt","loading","onError","onerror","objectFit","CardContent","fontWeight","_data$totalCredit","_data$totalDebit","_data$totalDisputeCou","data","IconButton","ArrowDownward","totalCredit","mt","ArrowUpward","totalDebit","Warning","totalDisputeCount","customColors","success","iconBg","text","label","key","failed","pending","refund","totalAmount","balance_reverse","balance_transfer","cardGradient","titleColor","obj","fundTransferObj","totalCount","SummaryCard","_Object$keys","title","url","isMobile","down","elevation","background","gutterBottom","fontSize","Object","keys","status","_customColors$status","_customColors$success","_customColors$status2","_data$status$totalAmo","_data$status","_customColors$status3","_customColors$status4","_customColors$success2","_customColors$status5","_customColors$success3","_customColors$status6","Chip","avatar","Avatar","TrendingUpIcon","fill","TrendingDownIcon","PendingIcon","concat","_dashboardData$dmtTxn","_dashboardData$aepsTx","_dashboardData$bbpsTx","_dashboardData$fundTr","today","Date","toISOString","split","page","setPage","retailers","setRetailers","selectedRetailer","setSelectedRetailer","dashboardData","setDashboardData","fromDate","setFromDate","toDate","setToDate","submit","setSubmit","filteredData","dmtTxns","aepsTxns","bbpsTxns","fundTransfer","toLowerCase","displayedData","Math","ceil","slice","async","_res$data2","res","getRetailersForASMZSM","_res$data3","getRetailers","_res$data","body","start_date","end_date","log","retailer_id","getDAshboardDataForASMZSM","getDashboardData","flexGrow","pb","flexWrap","InputLabelProps","shrink","inputProps","max","flex","minWidth","Autocomplete","options","getOptionLabel","option","name","newVal","flexShrink","renderOption","props","_createElement","columnGap","renderInput","params","onClick","handleSubmit","pre","handleReset","Dashboardcard","align","index","content","customTheme","regular","medium","bold","small","large","factor","StyledTabs","Tabs","StyledTab","Tab","textTransform","marginRight","TabPanel","tabValue","setTabValue","Todaybusiness","Container","handleTabChange","event","newValue","centered","LocalOffer","filterApiUser","Receipt","ServiceGrid","DashboardOtpModal","modalVisibility","handleCloseModal3","handleSubmitmodal3","storedUserid","setModalVisibility","getUserTpinStatus","otp","setOtp","timeLeft","setTimeLeft","isTimerEnded","setIsTimerEnded","resendLoading","setResendLoading","setLoading","setMessage","inputs","useRef","timerRef","formatTime","useCallback","time","minutes","floor","seconds","padStart","startTimer","current","prevTime","showModal3","otpHandleChange","newOtp","focus","handleKeyDown","handleResendOTP","generateOtpForResendTpin","user_id","handleSubmitOTP","_response$data","response","verifyOtpForTpin","join","_response$data2","_response$data3","statusCode","toast","tabIndex","role","_Fragment","pointerEvents","maxLength","onKeyDown","ref","disabled","some","digit","React","walletData","setData","number","setNumber","loader1","setLoader1","loader","setLoader","newPin","setNewPin","confirmPin","setConfirmPin","pinError","setPinError","confirmError","setConfirmError","userTpinstatus","setUserTpinstatus","dataprofile","setDataprofile","message1","setMessage1","error1","setError1","message2","setMessage2","error2","setError2","message3","setMessage3","error3","setError3","showNewPin","setShowNewPin","showConfirmPin","setShowConfirmPin","initializing","setInitializing","showModal","showModal2","showOverlay","handleCloseModal1","date","day","getDate","month","getMonth","year","getFullYear","currentDate","dateGet","currentDates","storedTpinStatus","otp1","setOtp1","window","mobile","charAt","replace","substr","processCustomerMobile","timer","setTimeout","clearTimeout","userName","demoapiCheck","fetchData","CustomMarquee","RetailerDashboard","onHide","image","generateOtpForTpin","onSubmit","preventDefault","generatenewTpin","genTpin","confirmTpin","id","pin","test","required","TiTick","FaEyeSlash","FaEye","show","handleClose","profiledata","business","businessInfo","Modal","Header","closeButton","Title","Body","Stack","profile","refer_id","Divider","px","isGstAvailable","gst_NUmber","legal_name_of_business","constitution_of_business","principal_place_address","shop_name","business_Address","business_Area","business_city","Footer","Button","_profiledata$wallet_b","setShowModal","transactions","amount","overflow","overflowY","pr","scrollbarWidth","DasBoardCheck","whiteSpace","textOverflow","wallet_balance","txn","py","ProfileModal","allowUserList","baseUrlImage"],"sourceRoot":""}