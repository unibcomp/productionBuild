{"version":3,"file":"static/js/7276.db783ed3.chunk.js","mappings":"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","sources":["components/admin/settings/passwordChange/PasswordChange.js","pages/admin/settings/passwordChage/index.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { changePassword } from \"../../../../api/login/Login\"\r\nimport {  toast } from \"react-toastify\";\r\nimport { IoMdEye } from \"react-icons/io\";\r\nimport { FaEyeSlash } from \"react-icons/fa\";\r\n\r\nfunction PasswordChange() {\r\n    const [loader1, setloader1] = useState(false)\r\n    const [isValid, setIsValid] = useState(false);\r\n    const [initialData, setInitialData] = useState({\r\n        user_id: '',\r\n        oldPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const handleChange = (e, str) => {\r\n        const clone = { ...initialData }\r\n        const value = e.target.value\r\n        if (str == 'newPassword') {\r\n            const regex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!&])[A-Z](?=.*[a-zA-Z\\d@$!&])[a-zA-Z\\d@$!&]{8,}$/;\r\n            setIsValid(regex.test(value));\r\n        }\r\n        const name = e.target.name\r\n        clone[name] = value\r\n        setInitialData(clone)\r\n    }\r\n\r\n    const toastSuccessMessage = (str) => {\r\n        toast.success(`${str}`, {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n        })\r\n    };\r\n\r\n    const toastErrorMessage = (str) => {\r\n        toast.error(`${str}`, {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n        })\r\n    };\r\n\r\n    const submitData = async () => {\r\n        setloader1(true)\r\n        const clone = { ...initialData, user_id: window.localStorage.getItem('userIdToken') }\r\n        try {\r\n            const res = await changePassword(clone)\r\n            // console.log(res?.data);\r\n            if (res?.data?.statusCode == '200') {\r\n                toastSuccessMessage(res?.data?.data?.mesage);\r\n                setInitialData({\r\n                    user_id: '',\r\n                    oldPassword: '',\r\n                    newPassword: '',\r\n                    confirmPassword: ''\r\n                })\r\n            }\r\n            if (res?.data?.statusCode == '403') {\r\n                toastErrorMessage(res?.data?.message);\r\n            }\r\n            setloader1(false)\r\n\r\n        } catch (error) {\r\n            setloader1(false)\r\n        }\r\n    }\r\n\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showPassword2, setShowPassword2] = useState(false);\r\n\r\n    const toggleShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const toggleShowPassword2 = () => {\r\n        setShowPassword2(!showPassword2);\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"PageHeading\">\r\n                <h1>Password</h1>\r\n            </div>\r\n            <div className=\"ContentArea\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\"><span>Change Your Password</span></div>\r\n                    <div className=\"card-body\">\r\n                        <form action=\"\" method=\"post\" name=\"frmCallAction\" id=\"frmCallAction\">\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-4\">\r\n                                    <label htmlFor=\"txtOldPassword\">Old Password <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input className=\"form-control\" id=\"txtOldPassword\" name=\"oldPassword\" type=\"password\" value={initialData.oldPassword} placeholder=\"Old Password\" onChange={handleChange} />\r\n                                </div>\r\n                                <div className=\"form-group input-group-eye input-group-eye-2 col-md-4\">\r\n                                    <label htmlFor=\"txtNewPassword\">New Password <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input className=\"form-control\" id=\"txtNewPassword\" name=\"newPassword\" type={showPassword ? 'text' : 'password'} value={initialData.newPassword} placeholder=\"New Password\" onChange={(e) => handleChange(e, 'newPassword')} />\r\n                                    <div className=\"eye\" onClick={toggleShowPassword}>{showPassword ? <IoMdEye /> : <FaEyeSlash />} </div>\r\n                                    {initialData.newPassword && (\r\n                                        isValid ? (\r\n                                            <p style={{ color: 'green' }}>Valid password</p>\r\n                                        ) : (\r\n                                            <p style={{ color: 'red', marginBottom: '4px' }}> Password: 8+ chars, start with a capital, include a special char, alphanumeric.</p>\r\n                                        )\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group col-md-4 input-group-eye input-group-eye-2\">\r\n                                    <label htmlFor=\"txtCnfPassword\">Confirm Password <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input className=\"form-control\" id=\"txtCnfPassword\" name=\"confirmPassword\" type={showPassword2 ? 'text' : 'password'} value={initialData.confirmPassword} placeholder=\"Confirm New Password\" onChange={handleChange} />\r\n                                    <div className=\"eye\" onClick={toggleShowPassword2}>{showPassword2 ? <IoMdEye /> : <FaEyeSlash />} </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-align-center\">\r\n                                <button type=\"button\" disabled={!initialData.oldPassword || !initialData.newPassword || !initialData.confirmPassword} onClick={submitData} className={`btn ${!initialData.oldPassword || !initialData.newPassword || !initialData.confirmPassword ? 'commonbotton_disable' : 'btn-primary'} `}>\r\n                                    Change Password\r\n                                    {loader1 && <div style={{ height: \"16px\", width: \"16px\" }} className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"visually-hidden\">Loading...</span>\r\n                                    </div>\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n          \r\n\r\n        </>\r\n    )\r\n}\r\nexport default PasswordChange","import PasswordChange from \"../../../../components/admin/settings/passwordChange/PasswordChange\"\r\n\r\n\r\nfunction PasswordChagePage() {\r\n    return (\r\n        <>\r\n            <PasswordChange />\r\n        </>\r\n    )\r\n}\r\nexport default PasswordChagePage"],"names":["loader1","setloader1","useState","isValid","setIsValid","initialData","setInitialData","user_id","oldPassword","newPassword","confirmPassword","handleChange","e","str","clone","value","target","test","name","showPassword","setShowPassword","showPassword2","setShowPassword2","_jsxs","_Fragment","children","_jsx","className","action","method","id","htmlFor","style","color","type","placeholder","onChange","onClick","toggleShowPassword","IoMdEye","FaEyeSlash","marginBottom","toggleShowPassword2","disabled","async","window","localStorage","getItem","_res$data","_res$data3","res","changePassword","_res$data2","_res$data2$data","_res$data4","data","statusCode","mesage","toast","success","concat","position","autoClose","error","toastErrorMessage","message","height","width","role","PasswordChange"],"sourceRoot":""}