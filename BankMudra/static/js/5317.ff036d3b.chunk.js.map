{"version":3,"file":"static/js/5317.ff036d3b.chunk.js","mappings":"oOA6EA,QAxEA,SAA4BA,GAAgD,IAA/C,UAAEC,EAAS,iBAAEC,EAAgB,YAAEC,GAAaH,EACvE,MAAOI,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,GACzCC,GAAWC,EAAAA,EAAAA,MAKjB,OACEC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,mBAAkBC,UAClCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBC,SAAA,CACjC,KACDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,UAC5CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EAErCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0EAAyEC,UACtFF,EAAAA,EAAAA,KAAA,OACEI,MAAO,CACLC,QAAS,eACTC,QAAS,MACTC,gBAAiB,OACjBC,aAAc,MACdC,UACE,6EACFP,UAEFF,EAAAA,EAAAA,KAAA,OACEU,IAAKC,EAAAA,EACLC,IAAI,OACJX,UAAU,YACVG,MAAO,CACLS,SAAU,QACVC,OAAQ,OACRC,UAAW,UACXP,aAAc,cAOtBR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wEAAuEC,SACnE,0BAAhBR,GACCM,EAAAA,EAAAA,KAAA,UACEC,UAAU,kCACVe,QAzCDC,KACbC,OAAOC,aAAaC,QACpBtB,EAAS,cAAc,EAuCOI,SACjB,YAIDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CACHC,GAAG,cACHrB,UAAU,gDAA+CC,SAC1D,WAGDF,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CACHC,GAAG,UACHrB,UAAU,mCAAkCC,SAC7C,yBAWnB,C,iPCxBA,QA/CA,SAAqBX,GAAwD,IAAvD,KAAEgC,EAAI,MAAEC,EAAK,UAAEC,EAAS,SAAEC,EAAQ,eAAEC,GAAgBpC,EACxE,MAAMqC,EAAoB,4BACnBC,EAAgBC,IAAqBjC,EAAAA,EAAAA,UAAS+B,IAC9CG,EAAYC,IAAiBnC,EAAAA,EAAAA,UAAS,CAAC,GAqB9C,OApBAoC,EAAAA,EAAAA,YAAU,KACR,GAAIV,GAAQA,EAAKW,OAAS,EAAG,CAC3B,MAAMC,EAAQZ,EAAKa,WAAUC,GAAQA,EAAKC,MAAQV,KACnC,IAAXO,IACFV,EAAUU,EAAOP,GACjBD,EAAeC,GAEnB,IACC,CAACL,KAaFpB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+CAA8CC,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,MAAA,UACEoC,GAAG,iBACHC,KAAK,eACLC,MAAOZ,EACPa,SAjBoBC,IAC1B,MAAMC,EAAaD,EAAEE,OAAOJ,MAC5BX,EAAkBc,GAClB,MAAMT,EAAQZ,EAAKa,WAAUC,GAAQA,EAAKC,MAAQM,IAClDnB,EAAUU,EAAOS,GACjBjB,EAAeiB,GAEfZ,GAAcc,IAAI,IAAUA,EAAMC,UAAW,MAAM,EAW7C9C,UAAU,2BAA0BC,SAAA,EAEpCF,EAAAA,EAAAA,KAAA,UAAQyC,MAAM,GAAGO,UAAQ,EAACC,UAAU,EAAK/C,SAAC,qBACzCqB,GAAQA,EAAK2B,KAAKb,IACjBrC,EAAAA,EAAAA,KAAA,UAAuByC,MAAOJ,EAAKC,IAAIpC,SACpCmC,EAAKU,WADKV,EAAKC,aAMxBtC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAE6B,EAAWgB,cAGhD,EC4JA,EArM4BxD,IAerB,IAfsB,KAC3B4D,EAAI,OACJC,EAAM,IACNC,EAAG,OACHC,EAAM,WACNC,EAAU,SACVC,EAAQ,gBACRC,EAAe,gBACfC,EAAe,cACfC,EAAa,gBACbC,EAAe,OACfC,EAAM,eAENC,EAAc,WACdC,GACDxE,EACC,MAAOyE,EAAcC,IAAmBpE,EAAAA,EAAAA,WAAS,IAC1CqE,EAAUC,IAAetE,EAAAA,EAAAA,UAAS,MAClCuE,EAAeC,IAAoBxE,EAAAA,EAAAA,WAAS,IAC5CyE,EAAkBC,IAAuB1E,EAAAA,EAAAA,WAAS,GAEnD2E,GAAWC,EAAAA,EAAAA,QAAO,MAUlBC,GAAaC,EAAAA,EAAAA,cAAY,KACzBH,EAASI,SAASC,cAAcL,EAASI,SAE7CT,EAAY,KACZF,GAAgB,GAChBM,GAAoB,GAEpBC,EAASI,QAAUE,aAAY,KAC7BX,GAAaY,GACPA,GAAY,GACdF,cAAcL,EAASI,SACvBL,GAAoB,GACpBN,GAAgB,GACT,GAEFc,EAAW,GAClB,GACD,IAAK,GACP,KAEH9C,EAAAA,EAAAA,YAAU,KACR,GAAKkB,EAEL,OADAuB,IACO,KACDF,EAASI,SAASC,cAAcL,EAASI,QAAQ,CACtD,GACA,CAACzB,EAAMuB,IAEV,MAAMM,GAAkBL,EAAAA,EAAAA,cAAYM,UAClC,IAAK,IAADC,EACFb,GAAiB,GACjBE,GAAoB,GACpB,MAAMY,QAAiBC,EAAAA,EAAAA,IAAgB,CACrCC,gBAAiBvB,EACjBwB,QAASvB,IAG6B,IAADwB,EAIhCC,EAAAC,EAJP,GADAC,QAAQC,IAAI,WAAYR,GACU,MAAtB,OAARA,QAAQ,IAARA,GAAc,QAAND,EAARC,EAAU5D,YAAI,IAAA2D,OAAN,EAARA,EAAgBU,aAClBC,EAAAA,EAAAA,GAA4B,OAARV,QAAQ,IAARA,GAAc,QAANI,EAARJ,EAAU5D,YAAI,IAAAgE,OAAN,EAARA,EAAgBO,SACpCjC,EAAO,IAAIkC,MAAM,GAAGC,KAAK,KACzBtB,SAEAuB,EAAAA,EAAAA,GAA0B,OAARd,QAAQ,IAARA,GAAc,QAANK,EAARL,EAAU5D,YAAI,IAAAiE,GAAM,QAANC,EAAdD,EAAgBjE,YAAI,IAAAkE,OAAZ,EAARA,EAAsBK,QAE5C,CAAE,MAAOI,GACPR,QAAQQ,MAAM,uBAAwBA,EACxC,CAAC,QACC7B,GAAiB,GACjBE,GAAoB,EACtB,IACC,CAACG,EAAYb,EAAQuB,EAAAA,GAAiBtB,EAAgBC,IAEzD,OACE/D,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CACJhD,KAAMA,EACNC,OAAQA,EACRgD,UAAQ,EACRnG,UAAU,mBACVG,MAAO,CAAEiG,OAAQ,MAAOnG,UAExBF,EAAAA,EAAAA,KAACmG,EAAAA,EAAMG,KAAI,CACTlG,MAAO,CACLG,gBAAgB,qBAChBgG,MAAM,qBACNC,OAAQ,+BACRC,UAAW,iBACXvG,UAEFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,6BACJF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,WAAUC,SAAC,2FAKzB8D,GACChE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDAAkDC,UAC/DF,EAAAA,EAAAA,KAAA,UACE0G,KAAK,SACLzG,UAAU,YACVe,QAASgE,EACThC,SAAUoB,GAAiBE,EAAiBpE,SAE3CkE,GACCpE,EAAAA,EAAAA,KAAA,QACEC,UAAU,mCACV0G,KAAK,SACL,cAAY,SAGd,kBAKNxG,EAAAA,EAAAA,MAAAyG,EAAAA,SAAA,CAAA1G,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oDAAmDC,SAAA,EAChEC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,kBA5GJ2G,KAClB,MAAMC,EAAUC,KAAKC,MAAMH,EAAU,IAC/BI,EAAmBJ,EAAU,GACnC,MAAM,GAANK,OAAUJ,EAAQK,WAAWC,SAAS,EAAG,KAAI,KAAAF,OAAID,EAC9CE,WACAC,SAAS,EAAG,KAAI,EAuGmBC,CAAWnD,OACjClE,EAAAA,EAAAA,KAAA,QACEC,UAAU,aACVe,QAASgE,EACT5E,MAAO,CACLkH,OAAQhD,EAAmB,UAAY,UACvCiC,MAAOjC,EAAmB,OAAS,OACnCiD,cAAejD,EAAmB,OAAS,QAC3CpE,SACH,mBAKHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SACxBmD,EAAIH,KAAI,CAACT,EAAON,KACfnC,EAAAA,EAAAA,KAAA,SAEE0G,KAAK,SACLc,UAAU,IACV/E,MAAOA,EACPC,SAAWC,GACTe,EAAgBvB,EAAOQ,EAAEE,OAAOJ,MAAOoB,EAAQP,GAEjDmE,UAAY9E,GAAMgB,EAAcxB,EAAOQ,EAAGW,GAC1CoE,IAAMC,GAAWrE,EAAOsB,QAAQzC,GAASwF,EACzC1H,UAAU,aATLkC,QAaXnC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDAAkDC,UAC/DF,EAAAA,EAAAA,KAAA,UACE0G,KAAK,SACLzG,UAAU,gBACVe,QAASA,IAAM4C,EAAgB,UAC/BZ,SACEoB,GAAiBf,EAAIuE,MAAMC,GAAoB,KAAVA,IACtC3H,SAEAkE,GACCpE,EAAAA,EAAAA,KAAA,QACEC,UAAU,mCACV0G,KAAK,SACL,cAAY,SAGd,oBAMTpD,IACCvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,SAAEqD,IAE5CC,IACCxD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,SAAEsD,cAM9C,ECq+BZ,QA5oCA,SAA2BjE,GA4BvB,IAADuI,EAAA,IA5ByB,YAC1BC,EAAW,aACXC,EAAY,wBACZC,EAAuB,QACvBC,EAAO,mBACPC,EAAkB,OAClBC,EAAM,UACNC,EAAS,kBACTC,EAAiB,YACjBC,EAAW,SACXC,EAAQ,SACRC,EAAQ,eACRC,EAAc,YACdC,EAAW,qBACXC,EAAoB,aACpBC,EAAY,kBACZC,EAAiB,kBACjBC,EAAiB,YACjBC,EAAW,YACXC,EAAW,eACXC,EAAc,QACdC,EAAO,cACPC,EAAa,aACbC,EAAY,WACZC,EAAU,cACVC,EAAa,mBACbC,EAAkB,sBAClBC,GACDlK,EAIC,MAAOmK,EAAcC,IAAmB9J,EAAAA,EAAAA,WAAS,IAG1C+J,EAAWC,KAFDpF,EAAAA,EAAAA,QAAO,OAEU5E,EAAAA,EAAAA,UAAS,MAEpCiK,EAAmBC,IAAwBlK,EAAAA,EAAAA,WAAS,IACpDmK,EAAoBC,IAAyBpK,EAAAA,EAAAA,WAAS,IAKtDqK,EAAWC,KAAgBtK,EAAAA,EAAAA,WAAS,IAEpCsD,GAAMiH,KAAWvK,EAAAA,EAAAA,WAAS,IAc1BwK,GAAWC,KAAgBzK,EAAAA,EAAAA,aAC3B0K,GAASC,KAAc3K,EAAAA,EAAAA,WAAS,IAChC4K,GAASC,KAAc7K,EAAAA,EAAAA,WAAS,IAChC8K,GAASC,KAAc/K,EAAAA,EAAAA,WAAS,IAChCgL,GAASC,KAAcjL,EAAAA,EAAAA,WAAS,GACjCC,IAAWC,EAAAA,EAAAA,OACVwB,GAAMwJ,KAAWlL,EAAAA,EAAAA,UAAS,OAC1BmL,GAASC,KAAcpL,EAAAA,EAAAA,UAAS,OAGhCqL,GAAQC,KAAatL,EAAAA,EAAAA,aAErBuL,GAAUC,KAAaxL,EAAAA,EAAAA,aAGvBkC,GAAYC,KAAiBnC,EAAAA,EAAAA,UAAS,CAAC,IAEvC2B,GAAO8J,KAAYzL,EAAAA,EAAAA,UAAS,IAC5B0L,GAAWC,KAAgB3L,EAAAA,EAAAA,UAAS,KACpC4L,GAAeC,KAAoB7L,EAAAA,EAAAA,UAAS,KAC5C8L,GAAaC,KAAkB/L,EAAAA,EAAAA,UAAS,KAExCmE,GAAcC,KAAmBpE,EAAAA,EAAAA,WAAS,IAC1CqE,GAAUC,KAAetE,EAAAA,EAAAA,UAAS,MAClCuE,GAAeC,KAAoBxE,EAAAA,EAAAA,WAAS,IAC5CgM,GAASC,KAAcjM,EAAAA,EAAAA,WAAS,IAChCkM,GAAUC,KAAenM,EAAAA,EAAAA,UAAS,KAClCoM,GAAQC,KAAarM,EAAAA,EAAAA,UAAS,KAC9B0D,GAAY4I,KAAiBtM,EAAAA,EAAAA,UAAS,KACtC2D,GAAU4I,KAAevM,EAAAA,EAAAA,UAAS,KAClCwM,GAAkBC,KAAuBzM,EAAAA,EAAAA,UAAS,qBAEnDwH,GAAcR,IAClB,MAAMC,EAAUC,KAAKC,MAAMH,EAAU,IAC/BI,EAAmBJ,EAAU,GACnC,MAAM,GAANK,OAAUJ,EAAQK,WAAWC,SAAS,EAAG,KAAI,KAAAF,OAAID,EAC9CE,WACAC,SAAS,EAAG,KAAI,GAEdmF,GAAcC,KAAmB3M,EAAAA,EAAAA,UAAS,KAE1CwD,GAAKQ,KAAUhE,EAAAA,EAAAA,UAAS,IAAIkG,MADpB,GACkCC,KAAK,MAC/CyG,GAAMC,KAAW7M,EAAAA,EAAAA,UAAS,IAAIkG,MAFtB,GAEoCC,KAAK,KAClD1C,IAASmB,EAAAA,EAAAA,QAAO,IAChBkI,IAAUlI,EAAAA,EAAAA,QAAO,KAChBmI,GAAMC,KAAWhN,EAAAA,EAAAA,UAAS,GAQ3BiN,IAAiB,OAAJvL,SAAI,IAAJA,IAAS,QAALuG,EAAJvG,GAAO,UAAE,IAAAuG,OAAL,EAAJA,EAAWxF,MAAO,4BAC9ByK,GAASC,KAAenN,EAAAA,EAAAA,UAAS,CAEtCoN,OAAQ7B,GACR8B,aAAcJ,GAEdtK,KAAM,GACN2K,SAAU,GACVC,SAAU,KAEZ1H,QAAQC,IAAI,WAAYoH,IA4BxB,IAAIM,GAAM,GACV,IAAK,IAAIlL,EAAQ,EAAGA,EAAQkB,GAAInB,OAAQC,IAAS,CAC/C,MAAMmL,EAAUjK,GAAIlB,GACpBkL,IAAYC,CACd,CAWA5H,QAAQC,IAAI0H,IAEZ,MAaM1J,GAAgBA,CAACxB,EAAOQ,KACd,cAAVA,EAAE4K,MAAwBlK,GAAIlB,IAAUmB,GAAOsB,QAAQzC,EAAQ,IACjEmB,GAAOsB,QAAQzC,EAAQ,GAAGqL,OAC5B,EAiBIC,GAAiB9K,IACrB,MAAM+K,EAAQ,IAAKX,IACnB,IAAItK,EAAQE,EAAEE,OAAOJ,MACrB,MAAMD,EAAOG,EAAEE,OAAOL,KAET,SAATA,IAEFC,EAAQA,EAAMkL,QAAQ,eAAgB,KAGxCD,EAAMlL,GAAQC,EACduK,GAAYU,EAAM,EAWd7H,GAAuBC,IAC3B8H,EAAAA,GAAMC,QAAQ,GAAD3G,OAAIpB,GAAW,CAC1BgI,SAAU,aACVC,UAAW,KACX,EAGEC,GAAwBlI,IAC5B8H,EAAAA,GAAM1H,MAAM,GAADgB,OAAIpB,GAAW,CACxBgI,SAAU,aACVC,UAAW,KACX,EAEEE,GAAgBA,KACpB9J,GAAY,KACZF,IAAgB,GAChBkI,GAAc,IACdC,GAAY,IACZvI,GAAO,IAAIkC,MA7IE,GA6IYC,KAAK,KAC9B0G,GAAQ,IAAI3G,MA9IC,GA8IaC,KAAK,IAAI,GAwF9BkI,GAAcC,KAAmBtO,EAAAA,EAAAA,UAAS,CAC/CuO,SAAU,GACVC,QAAS,KAELC,GAAgBC,GAElB,uEACgBC,KAAKD,IA+BlBE,GAAgBC,KAAqB7O,EAAAA,EAAAA,UAASqO,GAAaG,UAE3DM,GAAmBC,KAAwB/O,EAAAA,EAAAA,YAE5CgP,GAAe5J,UACnB,IAAK,IAAD6J,EAAAC,EACF,MAAMC,QAAYC,EAAAA,EAAAA,KAAcxM,GACN,IAAnB,OAAHuM,QAAG,IAAHA,GAAS,QAANF,EAAHE,EAAKzN,YAAI,IAAAuN,OAAN,EAAHA,EAAWI,UAEbrF,EAAa,2BAEW,IAAnB,OAAHmF,QAAG,IAAHA,GAAS,QAAND,EAAHC,EAAKzN,YAAI,IAAAwN,OAAN,EAAHA,EAAWG,WACbrF,EAAa,IACbsF,KAEJ,CAAE,MAAOjJ,IAAQ,GAEbkJ,GAAe5M,GACZA,EAAK6M,OAAOnN,OAAS,EAGxBiN,GAAclK,UAClByF,IAAW,GACX,IAAK,IAAD4E,EAAAC,EACF,MAAMP,QAAYQ,EAAAA,EAAAA,KAAWtB,IAEI,IAADuB,EAODC,EAP/B,IAAyB,KAAlB,OAAHV,QAAG,IAAHA,GAAS,QAANM,EAAHN,EAAKzN,YAAI,IAAA+N,OAAN,EAAHA,EAAWpJ,OACbhF,OAAOC,aAAawO,QAAQ,aAAiB,OAAHX,QAAG,IAAHA,GAAS,QAANS,EAAHT,EAAKzN,YAAI,IAAAkO,OAAN,EAAHA,EAAWlO,KAAKqO,MAC1DhH,GAAqB,GACrBK,GAAY,GACZ2F,GAAqB,IAGvB,IAAyB,KAAlB,OAAHI,QAAG,IAAHA,GAAS,QAANO,EAAHP,EAAKzN,YAAI,IAAAgO,OAAN,EAAHA,EAAWrJ,OACb0I,GAAwB,OAAHI,QAAG,IAAHA,GAAS,QAANU,EAAHV,EAAKzN,YAAI,IAAAmO,OAAN,EAAHA,EAAW5J,SAElC4E,IAAW,EACb,CAAE,MAAOxE,IACPwE,IAAW,EACb,GAOF,IAAImF,GAAO,GACX,IAAK,IAAI1N,EAAQ,EAAGA,EAAQsK,GAAKvK,OAAQC,IAAS,CAChD,MAAMmL,EAAUb,GAAKtK,GACrB0N,IAAcvC,CAChB,CAEA5H,QAAQC,IAAIkK,IAEZ,MA8CMC,IAAWrL,EAAAA,EAAAA,QAAO,OA8CjBsL,GAAUC,KAAenQ,EAAAA,EAAAA,UAAS,CAAEoQ,SAAU,KAAMC,UAAW,QAC/DhK,GAAOiK,KAAYtQ,EAAAA,EAAAA,UAAS,MAmD7B4D,GAAkBwB,UACtBZ,IAAiB,GACjB+H,GAAY,IACZD,GAAc,IAEd,IACE,IAAIhH,EAEJA,QAAiBC,EAAAA,EAAAA,IAAgB,CAAEE,QAAS4C,IAMpB,MAApB/C,EAASiL,QACXjE,GAAc,qCACd8B,MAEA7B,GAAY,wBAEhB,CAAE,MAAOlG,IACPkG,GAAY,wBACd,CAAC,QACC/H,IAAiB,EACnB,GAEIX,GAAkBA,CAACvB,EAAOM,EAAO4N,EAAgBC,KACrD,GAAI7N,EAAMP,OAAS,EAAG,OACtB,MAAMqO,EAAS,IAAKF,IAAmBxM,GAASR,GAAMoJ,IACtD8D,EAAOpO,GAASM,EAChB4N,EAAeE,GAEX9N,GAAS6N,EAAU1L,QAAQzC,EAAQ,IACrCmO,EAAU1L,QAAQzC,EAAQ,GAAGqL,OAC/B,EAEI5J,GAAkBqB,UACtBZ,IAAiB,GACjB+H,GAAY,IACZD,GAAc,IAEd,IACE,IAAIhH,EAEFA,EADW,WAATuB,QACe8J,EAAAA,EAAAA,KAAoB,CACnCnN,IAAKA,GAAIoN,KAAK,IACdnL,QAAS4C,UAGMwI,EAAAA,EAAAA,KAAc,CAC7BrN,IAAKoJ,GAAKgE,KAAK,IACfnL,QAASpE,OAAOC,aAAawP,QAAQ,iBAIb,IAAxBxL,EAAS5D,KAAK2E,OAChBiG,GAAchH,EAAS5D,KAAKuE,SACf,WAATY,GACF2E,GAAUlG,EAAS5D,KAAKA,KAAKqO,MAC7BhH,GAAqB,GACrBC,GAAa,GACbC,GAAkB,GAClBW,GAAsB,GACtBF,EAAc,MAEde,GAAanF,EAAS5D,KAAKA,KAAKqO,MAChC7F,GAAqB,GACrBF,EAAa,IACbX,GAAe,GACfS,GAAgB,GAChBf,GAAqB,GACrBK,GAAY,IAEd2H,GAAoBlK,IAEpB0F,GAAYjH,EAAS5D,KAAKuE,QAE9B,CAAE,MAAOI,IACPkG,GAAY,wBACd,CAAC,QACC/H,IAAiB,EACnB,GAGIuM,GAAuBlK,IACd,WAATA,EACF2C,IAEAM,GAAgB,GAElBsE,IAAe,EA2GjB,OAzGAhM,EAAAA,EAAAA,YAAU,KAEiBgD,WACvB,IAAK,IAAD4L,EAAAC,EACF,MAAOC,EAAYC,SAAqBC,QAAQC,IAAI,EAClDC,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,SAEFnG,GAAqB,OAAV8F,QAAU,IAAVA,OAAU,EAAVA,EAAYxP,MACvBwJ,GAAmB,OAAXiG,QAAW,IAAXA,OAAW,EAAXA,EAAazP,MACrB4J,GAAqB,OAAX6F,QAAW,IAAXA,GAAiB,QAANH,EAAXG,EAAazP,YAAI,IAAAsP,GAAK,QAALC,EAAjBD,EAAoB,UAAE,IAAAC,OAAX,EAAXA,EAAwBxO,IACpC,CAAE,MAAO4D,IACPR,QAAQQ,MAAM,+BAAgCA,GAChD,GA0CFmL,GAtCoBpM,WAClB,IACE,MAAME,QAAiBmM,EAAAA,EAAMC,IAAI,GAADrK,OAAIsK,EAAAA,GAAO,sBAC3C,IAA4B,IAAxBrM,EAAS5D,KAAK2E,MAAiB,CACjC,MAAMuL,EAAStM,EAAS5D,KAAKA,KAAK2B,KAAKwO,IAAK,CAC1CjP,MAAOiP,EAAMpP,IACbE,KAAMkP,EAAMlP,SAEdgK,GAAgBiF,EAClB,MACE/L,QAAQQ,MAAM,yBAA0Bf,EAAS5D,KAAKuE,QAE1D,CAAE,MAAOI,IACPR,QAAQQ,MAAM,yBAA0BA,GAC1C,GAyBFyL,GArBMC,UAAUC,YACZD,UAAUC,YAAYC,oBACnBhE,IACCkC,GAAY,CACVC,SAAUnC,EAASiE,OAAO9B,SAC1BC,UAAWpC,EAASiE,OAAO7B,YAE7BxK,QAAQC,IAAI,WAAYoK,GAAS,IAElC7J,IACCiK,GAASjK,EAAMJ,SACfJ,QAAQQ,MAAM,qBAAsBA,EAAMJ,QAAQ,MAItDG,EAAAA,EAAAA,GAAkB,iDAClBP,QAAQQ,MAAM,iDAMF,GACf,KAEHjE,EAAAA,EAAAA,YAAU,KACR+K,IAAalK,IAAI,IACZA,EACHqK,SAAUpF,EAAYiK,SAASC,MAAM,EAAG,OACvC,GACF,CAAClK,EAAYiK,YAEhB/P,EAAAA,EAAAA,YAAU,KACR,MAAMiQ,EAAUC,YAAW,KACzBzD,GAAkBR,GAAaG,QAAQ,GACtC,KAEH,MAAO,IAAM+D,aAAaF,EAAQ,GACjC,CAAChE,GAAaG,WAEjBpM,EAAAA,EAAAA,YAAU,KACJwM,IACFI,GAAaJ,GACf,GACC,CAACA,MAEJxM,EAAAA,EAAAA,YAAU,KACJiI,GA/NwBjF,WAC5B,IAAIoN,EAAkB,IAAKtC,IAGtBsC,EAAgBpC,UAAaoC,EAAgBnC,iBAC1C,IAAIe,SAASqB,IACjBV,UAAUC,YAAYC,oBACnBhE,IACCuE,EAAkB,CAChBpC,SAAUnC,EAASiE,OAAO9B,SAC1BC,UAAWpC,EAASiE,OAAO7B,WAE7BF,GAAYqC,GACZC,GAAS,IAEX,KACE5M,QAAQ6M,KAAK,2BACbD,GAAS,GAEX,CAAEE,QAAS,IAAMC,WAAY,GAC9B,IAIL,MAAMC,EAAiB,CACrBlQ,KAAMuK,GAAQvK,KACd+L,MAAOL,GAAaG,QACpB2D,SAAUjK,EAAYiK,SACtBN,MAAOjG,IAGL4G,EAAgBpC,UAAYoC,EAAgBnC,YAC9CwC,EAAezC,SAAWoC,EAAgBpC,SAC1CyC,EAAexC,UAAYmC,EAAgBnC,WAG7C,IACE,MAAM/K,QAAiBwN,EAAAA,EAAAA,KAAkBD,GACzChN,QAAQC,IAAI,2BAA4BR,EAC1C,CAAE,MAAOe,IACPR,QAAQQ,MAAM,oCAAqCA,GACrD,GAuLE0M,EACF,GACC,CAAC1I,KAEJjI,EAAAA,EAAAA,YAAU,KACR,MAAM4Q,EACJ9F,GAAQvK,MACRiJ,IACgC,KAAhC1D,EAAYiK,SAAS9P,QACrBgM,GAAaG,QACfpE,GAAuB4I,EAAgB,GACtC,CAAC9F,GAAQvK,KAAMiJ,GAAe1D,EAAYiK,SAAU9D,GAAaG,WAEpEpM,EAAAA,EAAAA,YAAU,KACR4B,GAAO,IAAIkC,MA/oBE,GA+oBYC,KAAK,IAAI,GACjC,CAACoD,KAEJnH,EAAAA,EAAAA,YAAU,KACRyK,GAAQ,IAAI3G,MAnpBC,GAmpBaC,KAAK,IAAI,GAClC,CAAC0D,IACJhE,QAAQC,IAAI,mBAAoB0G,KAG9BlM,EAAAA,EAAAA,MAAAyG,EAAAA,SAAA,CAAA1G,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAC8S,EAAmB,CAClB3P,KAAMiG,EACNhG,OAAQA,IAAMwN,GAAoB,UAClC5M,aAAcA,GACdI,cAAeA,GACfF,SAAUA,GACVb,IAAKA,GACLC,OAAQA,GACRC,WAAYA,GACZC,SAAUA,GACVwB,gBAAiBvB,GACjB4D,WAAYA,GACZ3D,gBAAiBA,GACjBC,cAAeA,GACfC,gBAAiBA,GACjBC,OAAQA,GACRE,WAAYmE,KAEdlI,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CACJhD,KAAMuG,EACNtG,OAAQA,IAAMwN,GAAoB,SAClCxK,UAAQ,EACRnG,UAAU,mBACVG,MAAO,CACLiG,OAAQ,MACRnG,UAEFF,EAAAA,EAAAA,KAACmG,EAAAA,EAAMG,KAAI,CACTlG,MAAO,CACLG,gBAAgB,qBAChBgG,MAAM,qBACNC,OAAQ,+BACRC,UAAW,iBACXvG,UAEFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,4BACJF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,WAAUC,SAAC,gEAIzB8D,IACChE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDAAkDC,UAC/DF,EAAAA,EAAAA,KAAA,UACE0G,KAAK,SACLzG,UAAU,qBACVe,QAASA,IAAMyC,KACfT,SAAUoB,GAAclE,SAEvBkE,IACCpE,EAAAA,EAAAA,KAAA,QACEC,UAAU,mCACV0G,KAAK,SACL,cAAY,SAGd,kBAKNxG,EAAAA,EAAAA,MAAAyG,EAAAA,SAAA,CAAA1G,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,CAAC,kBAClBmH,GAAWnD,IAAW,KACtClE,EAAAA,EAAAA,KAAA,QACEC,UAAU,aACVe,QAASA,IAAMyC,KAAyBvD,SACzC,mBAIHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SACxBuM,GAAKvJ,KAAI,CAACT,EAAON,KAChBnC,EAAAA,EAAAA,KAAA,SAEE0G,KAAK,SACLc,UAAU,IACV/E,MAAOA,EACPC,SAAWC,GACTe,GACEvB,EACAQ,EAAEE,OAAOJ,MACTiK,GACAC,IAGJlF,UAAY9E,GAAMgB,GAAcxB,EAAOQ,GACvC+E,IAAMC,GAAWgF,GAAQ/H,QAAQzC,GAASwF,EAC1C1H,UAAU,aAdLkC,QAkBXnC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDAAkDC,UAC/DF,EAAAA,EAAAA,KAAA,UACE0G,KAAK,SACLzG,UAAU,qBACVe,QAASA,IAAM4C,GAAgB,SAC/BZ,SACEoB,IAAiBqI,GAAK7E,MAAMC,GAAoB,KAAVA,IACvC3H,SAEAkE,IACCpE,EAAAA,EAAAA,KAAA,QACEC,UAAU,mCACV0G,KAAK,SACL,cAAY,SAGd,oBAMTpD,KACCvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,SAAEqD,KAE5CC,KACCxD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,SAAEsD,gBAOrDmF,GACC3I,EAAAA,EAAAA,KAAA,QAAAE,UACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAmBsC,GAAG,eAAcrC,UAClDF,EAAAA,EAAAA,KAAC+S,EAAAA,IAAS,OAEZ/S,EAAAA,EAAAA,KAAA,SACE0G,KAAK,OACLzG,UAAU,eACV+S,YAAY,kBACZxQ,KAAK,OACLC,MAAOsK,GAAQvK,KACfE,SAAU+K,SAGdzN,EAAAA,EAAAA,KAAA,KAAGI,MAAO,CAAEmG,MAAO,MAAO0M,aAAc,OAAQ/S,SAC7C6B,GAAWS,WAIhBrC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAE3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAmBsC,GAAG,eAAcrC,UAClDF,EAAAA,EAAAA,KAACkT,EAAAA,IAAoB,OAGvBlT,EAAAA,EAAAA,KAAA,SACE0G,KAAK,OACLzG,UAAU,eACV+S,YAAY,sBACZtL,IAAKoI,GACLqD,YAtcOC,IACnBC,SAASC,gBAAkBxD,GAASlL,SACtCwO,EAAMG,gBACR,EAocgBC,SAjcIJ,IACpB,MAAMzL,EAAQmI,GAASlL,QACvB,GAAI+C,EAAO,CACT,MAAM8L,EAAQ9L,EAAM+L,eACdC,EAAMhM,EAAMiM,aAEdH,EAAQ,IACVL,EAAMG,iBACFI,EAAM,EACRhM,EAAMkM,kBAAkB,EAAGF,GAE3BhM,EAAMkM,kBAAkB,EAAG,GAGjC,GAobgBC,QA5cGV,IACnBA,EAAMG,gBAAgB,EA4cN/Q,KAAK,WACLiF,UAxwBM2L,IACJ,UAAdA,EAAM7F,KACRnF,GACF,EAswBgB3F,MAAOsF,EAAYiK,SACnBtP,SAAUsF,IAEXwB,IACCxJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAAC+T,EAAAA,IAAU,SAIhBzK,IAActJ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAaC,SAAEoJ,QAE7CnJ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAmBsC,GAAG,eAAcrC,UAClDF,EAAAA,EAAAA,KAACgU,EAAAA,IAAO,OAEVhU,EAAAA,EAAAA,KAAA,SACE0G,KAAK,QACLzG,UAAU,eACV+S,YAAY,cACZxQ,KAAK,UACLiF,UAzxBO2L,IACL,UAAdA,EAAM7F,KACR4B,IACF,EAuxBgB1M,MAAOyL,GAAaG,QACpB3L,SAxmBGC,IACnB,MAAMF,EAAQE,EAAEE,OAAOJ,MACjBD,EAAOG,EAAEE,OAAOL,KAGhByR,EAAa,IAAK/F,IACxB+F,EAAWzR,GAAQC,EACnB0L,GAAgB8F,GAGhB3J,GAAa7H,GAEQ,KAAjBA,EAAM4M,QACRxF,EAAa,IACbE,GAAqB,GACrB6E,GAAqB,KAGrBA,GAAqB,IAKnBN,GAAa7L,IACfoM,GAAapM,EACf,EAglBgByR,aAAa,cAEdpK,IACC9J,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAAC+T,EAAAA,IAAU,SAIhBpF,KACC3O,EAAAA,EAAAA,KAAA,KAAGI,MAAO,CAAEmG,MAAO,OAAQrG,SAAEyO,KAE9B/E,IAAa5J,EAAAA,EAAAA,KAAA,KAAGI,MAAO,CAAEmG,MAAO,OAAQrG,SAAE0J,QAE7CzJ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAmBsC,GAAG,eAAcrC,UAClDF,EAAAA,EAAAA,KAACmU,EAAAA,IAAkB,OAErBnU,EAAAA,EAAAA,KAAA,SACE0G,KAAK,OACLzG,UAAU,eACV+S,YAAY,sBACZxQ,KAAK,WACLQ,UAAQ,EACRP,MAAOsK,GAAQI,SACfzK,SAAU+K,SAGdzN,EAAAA,EAAAA,KAAA,KAAGI,MAAO,CAAEmG,MAAO,MAAO0M,aAAc,OAAQ/S,SAC7C6B,GAAWS,WAGhBxC,EAAAA,EAAAA,KAACoU,EAAY,CACX7S,KAAMA,GACNC,MAAOA,GACPC,UA3uBIA,CAAC4S,EAAG9R,KACpB4I,GAAU5I,GACV,MAAMmL,EAAQ,IAAKX,GAASG,aAAc3K,GAE1CyK,GAAYU,GACZpC,GAAS+I,GACT,MAAMC,EAAe/S,GAAKgT,MAAMlS,GAASA,EAAKC,MAAQC,IAClD+R,GACFhI,GAAoBgI,EAAavR,UACnC,EAmuBYgK,QAASA,GACTpL,eA3wBUgB,IACtB,MACM2R,EAAe/S,GAAKgT,MAAMlS,GAASA,EAAKC,MAAQK,IAClD2R,GACFhI,GAAoBgI,EAAavR,UACnC,KAwwBU5C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8CAA6CC,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,MAAA,UACEoC,GAAG,UACHC,KAAK,WACLC,MAAOgJ,GACP/I,SA/eSC,IACzB+I,GAAiB/I,EAAEE,OAAOJ,MAAM,EA+ehBxC,UAAU,2BAA0BC,SAAA,EAEpCC,EAAAA,EAAAA,MAAA,UAAQsC,MAAM,GAAGO,UAAQ,EAAA9C,SAAA,CAAC,eACX,OAEdqM,GACEiI,QAAQ9C,GACPA,EAAMlP,KACHiS,cACAC,SAAS/I,GAAY8I,iBAEzBvR,KAAKwO,IACJ1R,EAAAA,EAAAA,KAAA,UAA0ByC,MAAOiP,EAAMjP,MAAMvC,SAC1CwR,EAAMlP,MADIkP,EAAMjP,eAM3BzC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAE6B,GAAW2P,WAEtB,QAArBrF,KACClM,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAmBsC,GAAG,eAAcrC,UAClDF,EAAAA,EAAAA,KAACmU,EAAAA,IAAkB,OAErBnU,EAAAA,EAAAA,KAAA,SACE0G,KAAK,OACLzG,UAAU,eACV+S,YAAY,iBACZxQ,KAAK,WACLC,MAAOsK,GAAQK,SACf1K,SAAU+K,SAGdzN,EAAAA,EAAAA,KAAA,KAAGI,MAAO,CAAEmG,MAAO,MAAO0M,aAAc,OAAQ/S,SAC7C6B,GAAWqL,cAKI,QAArBf,KACCrM,EAAAA,EAAAA,KAAA4G,EAAAA,SAAA,CAAA1G,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,MAAA,OACEF,UAAU,6BACVG,MAAO,CAAEuU,YAAa,QAASzU,SAAA,EAE/BF,EAAAA,EAAAA,KAAA,SACEC,UAAU,mBACVyG,KAAK,WACLnE,GAAG,mBACHqS,QAAS1K,EACTxH,SA1iBQ0Q,IAC5BjJ,GAAaiJ,EAAMvQ,OAAO+R,QAAQ,EA0iBd5R,SAAUgH,KAEZhK,EAAAA,EAAAA,KAAA,SACEC,UAAU,mBACV4U,QAAQ,mBAAkB3U,SAC3B,6BAOTF,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAAA,UACEuG,KAAK,SACL1D,UACGoM,GAAYrC,GAAQvK,QACpBuK,GAAQvK,OACRuK,GAAQI,WACPJ,GAAQK,UACa,8BAArBf,KACCnC,IACFoE,GAAaJ,GAAaG,UACK,KAAhCtG,EAAYiK,SAAS9P,QACrByM,GAEF1O,UAAS,OAAAiH,OACNkI,GAAYrC,GAAQvK,OACpBuK,GAAQvK,MACRuK,GAAQI,WACPJ,GAAQK,UACa,+BAArBf,IACCnC,IACFoE,GAAaJ,GAAaG,UACK,KAAhCtG,EAAYiK,SAAS9P,SACrByM,GAEI,YADA,qBAGN3N,QA/xBKiE,UACnB6F,IAAW,GACX,MAAMgK,EAAQ,IACT/H,GACHE,OAAQ7B,GACRmD,MAAOlE,GACPqH,MAAOjG,IAET/F,QAAQC,IAAI,QAASmP,GAErB1B,EAAMG,iBACNvR,GAvLkB+S,KAClB,MAAM7O,EAAQ,CAAC,EAoBf,OAlBKkJ,GAAY2F,EAAOvS,QACtB0D,EAAM1D,KAAO,qBAQVuS,EAAO5H,WACVjH,EAAMiH,SAAW,yBAEd4H,EAAO3H,WACVlH,EAAMkH,SAAW,sBAEd3B,KACHvF,EAAMwL,MAAQ,sBAETxL,CAAK,EAkKE8O,CAAWF,IAEzB,IACE,MAAM9F,QAAYiG,EAAAA,EAAAA,KAAaH,GACR,QAAhB,OAAH9F,QAAG,IAAHA,OAAG,EAAHA,EAAKpJ,cACPC,GAAoB,6BAEpBsM,YAAW,KACTrS,GAAS,cAAc,GACtB,MAEkB,MAAhB,OAAHkP,QAAG,IAAHA,OAAG,EAAHA,EAAKpJ,aACPoI,GAAwB,OAAHgB,QAAG,IAAHA,OAAG,EAAHA,EAAKlJ,SAE5BgF,IAAW,EACb,CAAE,MAAO5E,IACP4E,IAAW,EAGb,GAiwBoC5K,SAAA,CAErB2K,KACC7K,EAAAA,EAAAA,KAAA,OACEI,MAAO,CAAEU,OAAQ,OAAQoU,MAAO,QAChCjV,UAAU,iBACV0G,KAAK,SAAQzG,UAEbF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBC,SAAC,iBAEpC,sBAOVF,EAAAA,EAAAA,KAAA4G,EAAAA,SAAA,KAEFzG,EAAAA,EAAAA,MAACgG,EAAAA,EAAK,CACJhD,KAAMA,GACNC,OA7iCY+R,KAClBhL,IAAa,GACbC,IAAQ,EAAM,EA4iCR,kBAAgB,gCAChBhE,UAAQ,EACRhG,MAAO,CACLiG,OAAQ,MACRnG,SAAA,EAEFF,EAAAA,EAAAA,KAACmG,EAAAA,EAAMiP,OAAM,CAACC,aAAW,EAAAnV,UACvBF,EAAAA,EAAAA,KAACmG,EAAAA,EAAMmP,MAAK,CAAClV,MAAO,CAAEmG,MAAO,SAAUrG,SAAC,mBAE1CF,EAAAA,EAAAA,KAACmG,EAAAA,EAAMG,KAAI,CACTlG,MAAO,CACLG,gBAAiB,UACjBkG,UAAW,gBACX8O,mBAAoB,UACpBrV,UAEFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,2FAIHC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,gEAC6D,KAC9DF,EAAAA,EAAAA,KAAA,KAAGwV,KAAK,gCAAgC3S,OAAO,QAAO3C,SAAC,2BAElD,IAAI,mBAOnBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,mBACc,KACjBF,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CACHC,GAAG,cACHrB,UAAU,4BACVG,MAAO,CAAEmG,MAAO,iBAAkBrG,SACnC,UAEO,WAKlB,E,qCCp9BA,QAjNA,WACI,MAAOiJ,EAASsM,IAAc5V,EAAAA,EAAAA,WAAS,IAChCuJ,EAAesM,IAAoB7V,EAAAA,EAAAA,WAAS,IAC5CyJ,EAAYC,IAAiB1J,EAAAA,EAAAA,aAG7BsI,EAAoBW,IAAqBjJ,EAAAA,EAAAA,WAAS,IAClDwI,EAAWQ,IAAgBhJ,EAAAA,EAAAA,WAAS,IACpCyI,EAAmBM,IAAwB/I,EAAAA,EAAAA,WAAS,IACpD4I,EAAUQ,IAAepJ,EAAAA,EAAAA,WAAS,IAClC8I,EAAaO,IAAkBrJ,EAAAA,EAAAA,WAAS,IACxCmJ,EAAa2M,IAAkB9V,EAAAA,EAAAA,aAC/B+V,EAAgBC,IAAqBhW,EAAAA,EAAAA,UAAS,OAC9CqI,EAAS4N,IAAajW,EAAAA,EAAAA,aACtBkW,EAAcC,IAAmBnW,EAAAA,EAAAA,UAAS,KAG1CkI,EAAakO,IAAmBpW,EAAAA,EAAAA,UAAS,CAC5CmS,SAAU,MACV3D,QAAS,MAEN7E,EAAoBC,IAAyB5J,EAAAA,EAAAA,WAAS,GA+CvDqW,EAAejR,UACjB,IAAK,IAADkR,EAAAC,EACA,MAAMpH,QAAYqH,EAAAA,EAAAA,KAAc5T,GAChCiD,QAAQC,IAAO,OAAHqJ,QAAG,IAAHA,GAAS,QAANmH,EAAHnH,EAAKzN,YAAI,IAAA4U,OAAN,EAAHA,EAAWjH,SACG,IAAnB,OAAHF,QAAG,IAAHA,GAAS,QAANoH,EAAHpH,EAAKzN,YAAI,IAAA6U,OAAN,EAAHA,EAAWlH,SAGX3F,EAAc,iCAIdA,EAAc,IAEdtB,EAAwBxF,GA5EViT,GAAiB,GA+EvC,CAAE,MAAOxP,GACLR,QAAQQ,MAAM,mCAAoCA,EACtD,GAWE+B,EAA0BhD,UAC5BwQ,GAAW,GACX,MAAM/H,EAAQ,IAAK3F,EAAaiK,SAAUvP,GAC1C,IAAK,IAAD6T,EAAAC,EAAAC,EACA,MAAMxH,QAAYyH,EAAAA,EAAAA,KAAS/I,GAE3BoI,EAAa,OAAH9G,QAAG,IAAHA,GAAS,QAANsH,EAAHtH,EAAKzN,YAAI,IAAA+U,GAAM,QAANC,EAATD,EAAW/U,YAAI,IAAAgV,OAAZ,EAAHA,EAAiB3G,MACE,QAAtB,OAAHZ,QAAG,IAAHA,GAAS,QAANwH,EAAHxH,EAAKzN,YAAI,IAAAiV,OAAN,EAAHA,EAAW5Q,cAbnBgI,EAAAA,GAAMC,QAAQ,yBAA0B,CACpCC,SAAU,aACVC,UAAW,MAaPjF,GAAkB,GAClBD,GAAa,IAEjB4M,GAAW,EAEf,CAAE,MAAOvP,GACLuP,GAAW,EACf,GA4BJ,OACIzV,EAAAA,EAAAA,KAAA4G,EAAAA,SAAA,CAAA1G,UAEIC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UAClCF,EAAAA,EAAAA,KAAA,OAAKU,IAAKgW,EAAgB9V,IAAI,sBAAuBX,UAAU,qBAGzED,EAAAA,EAAAA,KAAA,WAASC,UAAU,SAAQC,UACvBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAC2W,EAAAA,EAAe,CAAAzW,UACZF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACvBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kDAAiDC,SAAA,EAC5DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oBAAmBC,SAAC,YAClCF,EAAAA,EAAAA,KAAC4W,EAAkB,CACfzO,mBAAoBA,EACpBC,OA1CzBA,KACXH,GAAyB,EA0CWI,UAAWA,EACXC,kBAAmBA,EACnBC,YAzCpBA,KAEhBU,GAAY,GACZL,GAAqB,EAAM,EAuCSJ,SA9BvBA,KACbU,GAAe,GACfN,GAAqB,EAAM,EA6BSH,SAAUA,EACVC,eAtCjBA,KACnBQ,GAAe,GACfN,GAAqB,GACrBK,GAAY,EAAM,EAoCkBN,YAAaA,EACbC,qBAAsBA,EAEtBC,aAAcA,EACdC,kBAAmBA,EAEnBf,YAAaA,EACbC,aApJlBrF,IAAO,IAADkU,EACxB,MACMlP,EAAQhF,EAAEE,OAAOJ,MAAMkL,QAAQ,WAAY,IAE3CnL,EAAOG,EAAEE,OAAOL,KAItB,GAA6B,GAAzBG,EAAEE,OAAOJ,MAAMP,OACf,OAEJ,IAAI4U,EAAW,IAAK/O,GACP,aAATvF,GACA+G,EAAc,IACdE,GAAsB,GAGlB9B,EAAMzF,QAAU,KAChB4U,EAAW,IAAKA,EAAU,CAACtU,GAAOmF,KAGtCmP,EAAW,IAAKA,EAAU,CAACtU,GAAOmF,GAKtCsO,EAAgBa,GAEkB,MAAb,QAAjBD,EAAAC,EAAS9E,gBAAQ,IAAA6E,OAAA,EAAjBA,EAAmB3U,SACnBgU,EAAaY,EAAS9E,SAC1B,EAuHoC/J,wBAAyBA,EACzBC,QAASA,EAETa,kBApHbpG,IACvBgT,EAAehT,EAAEE,OAAOJ,OACxB,MAAMiL,EAAQ,IAAK3F,EAAaiK,SAAUrP,EAAEE,OAAOJ,OACnDwT,EAAgBvI,EAAM,EAkHc1E,YAAaA,EAEbC,YAAaA,EACbC,eAAgBA,EAChBC,QAASA,EAETC,cAAeA,EACfC,aApLnBA,IAAMqM,GAAiB,GAqLJpM,WAAYA,EACZC,cAAeA,EACfC,mBAAoBA,EACpBC,sBAAuBA,kBAYnDzJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UACzBF,EAAAA,EAAAA,KAAC+W,EAAAA,EAAM,CAACC,YAAY,UAOxC,EChNA,QAPA,WACI,OACIhX,EAAAA,EAAAA,KAAA4G,EAAAA,SAAA,CAAA1G,UACQF,EAAAA,EAAAA,KAACiX,EAAc,KAG/B,C","sources":["common/merchantLoginHeader/MerchantLoginHeader.js","components/merchantLoginArea/sinupMerchant/tabSinUp/NewTabSignUp.js","components/merchantLoginArea/sinupMerchant/signUpMerchantForm/MobilesinupOtpModal.js","components/merchantLoginArea/sinupMerchant/signUpMerchantForm/SignUpMerchantForm.js","components/merchantLoginArea/sinupMerchant/SinUpMerchant.js","pages/merchantLoginArea/sinupMerchant/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { FaPhone, FaClock, FaEnvelope, FaCommentDots } from \"react-icons/fa\";\r\nimport \"./helpline.css\";\r\nimport { imageLogo } from \"../../asesets\";\r\nfunction MerchantLoginHeader({ loginForm, handleSubmitBack, currentPage }) {\r\n  const [showTooltip, setShowTooltip] = useState(false);\r\n  const navigate = useNavigate();\r\n  const logOut = () => {\r\n    window.localStorage.clear();\r\n    navigate(\"/login-area\");\r\n  };\r\n  return (\r\n    <header className=\" page-container \">\r\n      <div className=\"MerchantLoginHeader\">\r\n        {\" \"}\r\n        <div className=\"container-fluid border-bottom\">\r\n          <div className=\"row align-items-center\">\r\n            {/* Left: Logo */}\r\n            <div className=\"col-lg-6 col-md-6 col-6 d-flex align-items-center justify-content-start\">\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  padding: \"8px\",\r\n                  backgroundColor: \"#fff\",\r\n                  borderRadius: \"8px\",\r\n                  boxShadow:\r\n                    \"inset 0 0 10px rgba(255, 255, 255, 0.9), 0 0 8px rgba(255, 255, 255, 0.7)\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={imageLogo}\r\n                  alt=\"Logo\"\r\n                  className=\"img-fluid\"\r\n                  style={{\r\n                    maxWidth: \"140px\",\r\n                    height: \"auto\",\r\n                    objectFit: \"contain\",\r\n                    borderRadius: \"8px\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Right: Buttons */}\r\n            <div className=\"col-lg-6 col-md-6 col-6 d-flex justify-content-end align-items-center\">\r\n              {currentPage === \"/registrationComplete\" ? (\r\n                <button\r\n                  className=\"btn btn-danger px-4 fw-semibold\"\r\n                  onClick={logOut}\r\n                >\r\n                  LOGOUT\r\n                </button>\r\n              ) : (\r\n                <div className=\"d-flex\">\r\n                  <Link\r\n                    to=\"/login-area\"\r\n                    className=\"btn btn-outline-primary me-2 px-4 fw-semibold\"\r\n                  >\r\n                    LOGIN\r\n                  </Link>\r\n                  <Link\r\n                    to=\"/Signup\"\r\n                    className=\"btn btn-primary px-4 fw-semibold\"\r\n                  >\r\n                    SIGNUP\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default MerchantLoginHeader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\n\r\nfunction NewTabSignUp({ data, count, tabChange, register, handleResiter2 }) {\r\n  const initialUserTypeId = '65f3fb87a6a2a92f979b47eb';\r\n  const [selectedOption, setSelectedOption] = useState(initialUserTypeId);\r\n  const [errorValue, setErrorValue] = useState({});\r\n  useEffect(() => {\r\n    if (data && data.length > 0) {\r\n      const index = data.findIndex(item => item._id === initialUserTypeId);\r\n      if (index !== -1) {\r\n        tabChange(index, initialUserTypeId);\r\n        handleResiter2(initialUserTypeId);\r\n      }\r\n    }\r\n  }, [data]);\r\n\r\n  const handleSelectChange = (e) => {\r\n    const selectedId = e.target.value;\r\n    setSelectedOption(selectedId);\r\n    const index = data.findIndex(item => item._id === selectedId);\r\n    tabChange(index, selectedId);\r\n    handleResiter2(selectedId);\r\n    \r\n    setErrorValue(prev => ({ ...prev, user_type: \"\" }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-lg-6 col-md-6 col-sm-12  form-group mb-1\">\r\n      <div className=\"input-group\">\r\n        <select\r\n          id=\"userTypeSelect\"\r\n          name=\"user_type_id\"\r\n          value={selectedOption}\r\n          onChange={handleSelectChange}\r\n          className=\"form-select form-control\"\r\n        >\r\n          <option value=\"\" disabled selected={true}>Select User Type</option>\r\n          {data && data.map((item) => (\r\n            <option key={item._id} value={item._id}>\r\n              {item.user_type}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <span className=\"text-danger\">{errorValue.user_type}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTabSignUp;","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { resendOtpslogin } from \"../../../../api/login/Login\";\r\nimport {\r\n  toastErrorMessage,\r\n  toastSuccessMessage,\r\n} from \"../../../compeleteRegister/ToastShare\";\r\n\r\nconst MobilesinupOtpModal = ({\r\n  show,\r\n  onHide,\r\n  otp,\r\n  inputs,\r\n  otpMessage,\r\n  otpError,\r\n  handleResendOTP,\r\n  otpHandleChange,\r\n  handleKeyDown,\r\n  handleOtpSubmit,\r\n  setOtp,\r\n  // resendOtpslogin, // Assuming you have an API function for resending OTP\r\n  storedMobileNo,\r\n  logintoken,\r\n}) => {\r\n  const [isTimerEnded, setIsTimerEnded] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(120);\r\n  const [resendLoading, setResendLoading] = useState(false);\r\n  const [isResendDisabled, setIsResendDisabled] = useState(true);\r\n\r\n  const timerRef = useRef(null);\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, \"0\")}:${remainingSeconds\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const startTimer = useCallback(() => {\r\n    if (timerRef.current) clearInterval(timerRef.current);\r\n\r\n    setTimeLeft(120);\r\n    setIsTimerEnded(false);\r\n    setIsResendDisabled(true);\r\n\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft((prevTime) => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(timerRef.current);\r\n          setIsResendDisabled(false);\r\n          setIsTimerEnded(true);\r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!show) return;\r\n    startTimer();\r\n    return () => {\r\n      if (timerRef.current) clearInterval(timerRef.current);\r\n    };\r\n  }, [show, startTimer]);\r\n\r\n  const handleResendOtp = useCallback(async () => {\r\n    try {\r\n      setResendLoading(true);\r\n      setIsResendDisabled(true);\r\n      const response = await resendOtpslogin({\r\n        customer_mobile: storedMobileNo,\r\n        user_id: logintoken,\r\n      });\r\n      console.log(\"response\", response);\r\n      if (response?.data?.statusCode == 200) {\r\n        toastSuccessMessage(response?.data?.message);\r\n        setOtp(new Array(6).fill(\"\"));\r\n        startTimer();\r\n      } else {\r\n        toastErrorMessage(response?.data?.data?.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error resending OTP:\", error);\r\n    } finally {\r\n      setResendLoading(false);\r\n      setIsResendDisabled(false);\r\n    }\r\n  }, [startTimer, setOtp, resendOtpslogin, storedMobileNo, logintoken]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      centered\r\n      className=\"email-optp-modle\"\r\n      style={{ zIndex: 1050 }}\r\n    >\r\n      <Modal.Body\r\n        style={{\r\n          backgroundColor: `var(--bs-primary1)`,\r\n          color: `var(--bs-primary2)`,\r\n          border: \"2px solid var(--bs-primary3)\",\r\n          transform: \"translateZ(0)\",\r\n        }}\r\n      >\r\n        <div className=\"set-head\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"headinf-otp\">\r\n                <h2>Mobile OTP Verification</h2>\r\n                <p className=\"set-lage\">\r\n                  We've sent a 6-digit verification code to your mobile number,\r\n                  please enter it here!\r\n                </p>\r\n              </div>\r\n              {isTimerEnded ? (\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-login\"\r\n                    onClick={handleResendOtp}\r\n                    disabled={resendLoading || isResendDisabled}\r\n                  >\r\n                    {resendLoading ? (\r\n                      <span\r\n                        className=\"spinner-border spinner-border-sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                      ></span>\r\n                    ) : (\r\n                      \"Resend OTP\"\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>OTP expires in {formatTime(timeLeft)}</span>\r\n                    <span\r\n                      className=\"resend-otp\"\r\n                      onClick={handleResendOtp}\r\n                      style={{\r\n                        cursor: isResendDisabled ? \"default\" : \"pointer\",\r\n                        color: isResendDisabled ? \"gray\" : \"blue\",\r\n                        pointerEvents: isResendDisabled ? \"none\" : \"auto\",\r\n                      }}\r\n                    >\r\n                      Resend OTP\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"otp-inputs\">\r\n                    {otp.map((value, index) => (\r\n                      <input\r\n                        key={index}\r\n                        type=\"number\"\r\n                        maxLength=\"1\"\r\n                        value={value}\r\n                        onChange={(e) =>\r\n                          otpHandleChange(index, e.target.value, setOtp, inputs)\r\n                        }\r\n                        onKeyDown={(e) => handleKeyDown(index, e, inputs)}\r\n                        ref={(input) => (inputs.current[index] = input)}\r\n                        className=\"otp-input\"\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-login\"\r\n                      onClick={() => handleOtpSubmit(\"mobile\")}\r\n                      disabled={\r\n                        resendLoading || otp.some((digit) => digit === \"\")\r\n                      }\r\n                    >\r\n                      {resendLoading ? (\r\n                        <span\r\n                          className=\"spinner-border spinner-border-sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        ></span>\r\n                      ) : (\r\n                        \"Submit OTP\"\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {otpMessage && (\r\n                <div className=\"alert alert-success mt-3\">{otpMessage}</div>\r\n              )}\r\n              {otpError && (\r\n                <div className=\"alert alert-danger mt-3\">{otpError}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MobilesinupOtpModal;\r\n","import { FaMobileScreenButton } from \"react-icons/fa6\";\r\nimport { FaRegUser } from \"react-icons/fa\";\r\nimport { MdOutlineEmail } from \"react-icons/md\";\r\nimport { RiLockPasswordFill } from \"react-icons/ri\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { TiTick } from \"react-icons/ti\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport TabSignUp from \"../tabSinUp/TabSignUp\";\r\nimport {\r\n  CountryList,\r\n  emailSinup,\r\n  emailSinupOtp,\r\n  isEmailExits,\r\n  isEmailExits2,\r\n  isVerifiedMobileOtp,\r\n  registerUser,\r\n  userType,\r\n  resendOtpslogin,\r\n} from \"../../../../api/login/Login\";\r\nimport { getUserDetails } from \"../../../../utils/localStorage\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { MdVerified } from \"react-icons/md\";\r\nimport { onboardingRequest } from \"../../../../api/login/Login\";\r\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../../baseUrl\";\r\nimport {\r\n  toastErrorMessage,\r\n  toastSuccessMessage,\r\n} from \"../../../compeleteRegister/ToastShare\";\r\nimport NewTabSignUp from \"../tabSinUp/NewTabSignUp\";\r\nimport MobilesinupOtpModal from \"./MobilesinupOtpModal\";\r\nfunction SignUpMerchantForm({\r\n  initalValue,\r\n  handleChange,\r\n  mobileGenerateOtpMobile,\r\n  userIDD,\r\n  mobileVeridedInput,\r\n  getOtp,\r\n  mobileOtp,\r\n  emailVeridedInput,\r\n  emailgetOtp,\r\n  nextForm,\r\n  emailOtp,\r\n  submitOtpEmail,\r\n  formResiter,\r\n  setEmailVeridedInput,\r\n  setMobileOtp,\r\n  setMobileVerified,\r\n  handleCountryCode,\r\n  countryCode,\r\n  setEmailOtp,\r\n  setFormResiter,\r\n  loader1,\r\n  showMobileOtp,\r\n  handleClose2,\r\n  mobileExit,\r\n  setMobileExit,\r\n  veriFiedIconMobile,\r\n  setVeriFiedIconMobile,\r\n}) {\r\n  // console.log(countryCode);\r\n  // console.log(initalValue.mobileNo.length);\r\n\r\n  const [showEmailOtp, setShowEmailOtp] = useState(false);\r\n  const timerRef = useRef(null);\r\n\r\n  const [emailExit, setemailExit] = useState(\"\");\r\n\r\n  const [veriFiedIconEmail, setVeriFiedIconEmail] = useState(false);\r\n  const [isCheckboxDisabled, setIsCheckboxDisabled] = useState(true);\r\n\r\n  const handleClose3 = () => setShowEmailOtp(false);\r\n  const handleShow3 = () => setShowEmailOtp(true);\r\n\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setIsChecked(false);\r\n    setShow(false);\r\n    // setMobileVerified(true)\r\n    // setMobileOtp(false)\r\n    // setFormResiter(false)\r\n\r\n  };\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const [emailUser, setEmailUser] = useState();\r\n  const [loader2, setloader2] = useState(false);\r\n  const [loader3, setloader3] = useState(false);\r\n  const [loader4, setloader4] = useState(false);\r\n  const [loader5, setloader5] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState(null);\r\n  const [country, setCountry] = useState(null);\r\n  // console.log(country);\r\n\r\n  const [userId, setUserId] = useState();\r\n  // console.log(userId);\r\n  const [mobileId, setMobile] = useState();\r\n  // console.log(mobileId);\r\n\r\n  const [errorValue, setErrorValue] = useState({});\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [stateList, setStateList] = useState([]);\r\n  const [selectedState, setSelectedState] = useState(\"\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const [isTimerEnded, setIsTimerEnded] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(180);\r\n  const [resendLoading, setResendLoading] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message2, setMessage2] = useState(\"\");\r\n  const [error2, setError2] = useState(\"\");\r\n  const [otpMessage, setOtpMessage] = useState(\"\");\r\n  const [otpError, setOtpError] = useState(\"\");\r\n  const [selectedUserType, setSelectedUserType] = useState(\"Super Distributor\");\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, \"0\")}:${remainingSeconds\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  };\r\n  const [stateOptions, setStateOptions] = useState([]);\r\n  const length = 6;\r\n  const [otp, setOtp] = useState(new Array(length).fill(\"\"));\r\n  const [otp1, setOtp1] = useState(new Array(length).fill(\"\"));\r\n  const inputs = useRef([]);\r\n  const inputs1 = useRef([]);\r\n  const [step, setStep] = useState(1);\r\n\r\n  const nextStep = () => setStep(step + 1);\r\n  const prevStep = () => setStep(step - 1);\r\n\r\n  // console.log(initalValue.mobileNo.slice(3, 13));\r\n  // const user_id=data?.[0]?._id :''\r\n\r\n  const user_idcus = data?.[0]?._id || \"65f3fb87a6a2a92f979b47eb\";\r\n  const [resiter, setResister] = useState({\r\n    // email: '',\r\n    mobile: mobileId,\r\n    user_type_id: user_idcus,\r\n\r\n    name: \"\",\r\n    password: \"\",\r\n    refer_id: \"\",\r\n  });\r\n  console.log(\"register\", resiter);\r\n\r\n  const validation = (values) => {\r\n    const error = {};\r\n    const regexEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n    if (!isNameValid(values.name)) {\r\n      error.name = \"Name is Required!\";\r\n    }\r\n\r\n    // if (!values.email) {\r\n    //     error.email = \"Email is required\";\r\n    // } else if (!regexEmail.test(values.email)) {\r\n    //     error.email = \"Invalid Email\";\r\n    // }\r\n    if (!values.password) {\r\n      error.password = \"Password is Required!\";\r\n    }\r\n    if (!values.refer_id) {\r\n      error.refer_id = \"Refer Id Required!\";\r\n    }\r\n    if (!selectedState) {\r\n      error.state = \"State is Required!\";\r\n    }\r\n    return error;\r\n  };\r\n\r\n  // console.log(otp);\r\n\r\n  let str = \"\";\r\n  for (let index = 0; index < otp.length; index++) {\r\n    const element = otp[index];\r\n    str = str + element;\r\n  }\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      getOtp();\r\n    }\r\n  };\r\n  const handleKeyPress2 = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      SubmitEmail();\r\n    }\r\n  };\r\n  console.log(str);\r\n\r\n  const otpChandleChange = (index, value) => {\r\n    const newOtp = [...otp];\r\n    if (value.length == 2) {\r\n      return;\r\n    }\r\n    newOtp[index] = value;\r\n    setOtp(newOtp);\r\n\r\n    if (value && inputs.current[index + 1]) {\r\n      inputs.current[index + 1].focus();\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (index, e) => {\r\n    if (e.key === \"Backspace\" && !otp[index] && inputs.current[index - 1]) {\r\n      inputs.current[index - 1].focus();\r\n    }\r\n  };\r\n\r\n  const handleEnterPress = (e) => {\r\n    if (e.key === \"Enter\" && otp.every((value) => value.length === 1)) {\r\n      submitOtp();\r\n    }\r\n  };\r\n\r\n  // const otpChandleChange = (e) => {\r\n  //     const clone = { ...otp }\r\n  //     const vlaue = e.target.value\r\n  //     const name = e.target.name\r\n  //     clone[name] = vlaue\r\n  //     setOtp(clone)\r\n  // }\r\n\r\n  const handleResiter = (e) => {\r\n    const clone = { ...resiter };\r\n    let value = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    if (name === \"name\") {\r\n      // Only allow letters and spaces for the name field\r\n      value = value.replace(/[^a-zA-Z\\s]/g, \"\");\r\n    }\r\n\r\n    clone[name] = value;\r\n    setResister(clone);\r\n  };\r\n\r\n  const handleResiter2 = (e) => {\r\n    const clone = { ...resiter, user_type_id: e };\r\n    const selectedUser = data.find((item) => item._id === e);\r\n    if (selectedUser) {\r\n      setSelectedUserType(selectedUser.user_type);\r\n    }\r\n  };\r\n\r\n  const toastSuccessMessage = (message) => {\r\n    toast.success(`${message}`, {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n    });\r\n  };\r\n\r\n  const toastSuccessMessage1 = (message) => {\r\n    toast.error(`${message}`, {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n    });\r\n  };\r\n  const resetOtpState = () => {\r\n    setTimeLeft(180);\r\n    setIsTimerEnded(false);\r\n    setOtpMessage(\"\");\r\n    setOtpError(\"\");\r\n    setOtp(new Array(length).fill(\"\"));\r\n    setOtp1(new Array(length).fill(\"\"));\r\n  };\r\n\r\n  const tabChange = (i, id) => {\r\n    setUserId(id);\r\n    const clone = { ...resiter, user_type_id: id };\r\n    // console.log(clone);\r\n    setResister(clone);\r\n    setCount(i);\r\n    const selectedUser = data.find((item) => item._id === id);\r\n    if (selectedUser) {\r\n      setSelectedUserType(selectedUser.user_type);\r\n    }\r\n  };\r\n\r\n  const handlemobileotpclose = () => {\r\n    handleClose2();\r\n\r\n    setTimeLeft(180);\r\n    setIsTimerEnded(false);\r\n    setMessage2(\"\");\r\n    setError2(\"\");\r\n    setOtp(new Array(length).fill(\"\"));\r\n  };\r\n  const submitOtp = async () => {\r\n    // debugger\r\n    setloader2(true);\r\n    try {\r\n      const res = await isVerifiedMobileOtp({ otp: str, user_id: userIDD });\r\n      // console.log(res?.data?.data.user);\r\n      setMobile(res?.data?.data?.user);\r\n      if (res?.data?.statusCode == \"200\") {\r\n        getUserDetails(res?.data?.user);\r\n        toastSuccessMessage(res.data.data.message);\r\n        // debugger\r\n        setTimeout(() => {\r\n          setEmailVeridedInput(true);\r\n          setMobileOtp(false);\r\n          setMobileVerified(false);\r\n        }, 2000);\r\n        handlemobileotpclose();\r\n        setVeriFiedIconMobile(true);\r\n        setMobileExit(\"\");\r\n      }\r\n      setloader2(false);\r\n\r\n      if (res?.data?.error == true) {\r\n        toastSuccessMessage1(res?.data?.message);\r\n      }\r\n      // console.log(res);\r\n    } catch (error) {\r\n      setloader2(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    setloader5(true);\r\n    const cloen = {\r\n      ...resiter,\r\n      mobile: mobileId,\r\n      email: emailUser,\r\n      state: selectedState,\r\n    };\r\n    console.log(\"cloen\", cloen);\r\n\r\n    event.preventDefault();\r\n    setErrorValue(validation(cloen));\r\n\r\n    try {\r\n      const res = await registerUser(cloen);\r\n      if (res?.statusCode == \"200\") {\r\n        toastSuccessMessage(\"User created Successfully\");\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/login-area\");\r\n        }, 2000);\r\n      }\r\n      if (res?.statusCode == 402) {\r\n        toastSuccessMessage1(res?.message);\r\n      }\r\n      setloader5(false);\r\n    } catch (error) {\r\n      setloader5(true);\r\n      // console.log(error);\r\n      // toastSuccessMessage(res?.data?.message)\r\n    }\r\n  };\r\n\r\n  const [emailInitial, setEmailInitial] = useState({\r\n    deviceId: \"\",\r\n    emailId: \"\",\r\n  });\r\n  const isValidEmail = (email) => {\r\n    const emailRegex =\r\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleEmail = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    // Update emailInitial state\r\n    const cloneEmail = { ...emailInitial };\r\n    cloneEmail[name] = value;\r\n    setEmailInitial(cloneEmail);\r\n\r\n    // Update emailUser state\r\n    setEmailUser(value);\r\n\r\n    if (value.trim() === \"\") {\r\n      setemailExit(\"\");\r\n      setVeriFiedIconEmail(false);\r\n      setErrorMessageEmail(\"\"); // Clear the error message when input is empty\r\n    } else {\r\n      // Clear the \"Valid email field is required\" message when user starts typing\r\n      setErrorMessageEmail(\"\");\r\n    }\r\n\r\n    // You might want to add basic email validation here\r\n    // and only call isEmailExitt if the email looks valid\r\n    if (isValidEmail(value)) {\r\n      isEmailExitt(value);\r\n    }\r\n  };\r\n\r\n  const [debouncedValue, setDebouncedValue] = useState(emailInitial.emailId);\r\n\r\n  const [errorMessageEmail, setErrorMessageEmail] = useState();\r\n\r\n  const isEmailExitt = async (value) => {\r\n    try {\r\n      const res = await isEmailExits2(value);\r\n      if (res?.data?.isExist == true) {\r\n        // alert('Email Does Not Exit')\r\n        setemailExit(\"Email ID Already Exists\");\r\n      }\r\n      if (res?.data?.isExist == false) {\r\n        setemailExit(\"\");\r\n        SubmitEmail();\r\n      }\r\n    } catch (error) {}\r\n  };\r\n  const isNameValid = (name) => {\r\n    return name.trim().length > 0;\r\n  };\r\n\r\n  const SubmitEmail = async () => {\r\n    setloader3(true);\r\n    try {\r\n      const res = await emailSinup(emailInitial);\r\n\r\n      if (res?.data?.error === false) {\r\n        window.localStorage.setItem(\"emailToken\", res?.data?.data.user);\r\n        setEmailVeridedInput(false);\r\n        setEmailOtp(true);\r\n        setErrorMessageEmail(\"\");\r\n      }\r\n\r\n      if (res?.data?.error === true) {\r\n        setErrorMessageEmail(res?.data?.message);\r\n      }\r\n      setloader3(false);\r\n    } catch (error) {\r\n      setloader3(false);\r\n    }\r\n  };\r\n\r\n  const length1 = 6;\r\n\r\n  // console.log(otp);\r\n\r\n  let str1 = \"\";\r\n  for (let index = 0; index < otp1.length; index++) {\r\n    const element = otp1[index];\r\n    str1 = str1 + element;\r\n  }\r\n\r\n  console.log(str1);\r\n\r\n  const otpChandleChange1 = (index, value) => {\r\n    const newOtp = [...otp1];\r\n    if (value.length == 2) {\r\n      return;\r\n    }\r\n    newOtp[index] = value;\r\n    setOtp1(newOtp);\r\n\r\n    if (value && inputs1.current[index + 1]) {\r\n      inputs1.current[index + 1].focus();\r\n    }\r\n  };\r\n\r\n  const handleEnterPressEmail = (e) => {\r\n    if (e.key === \"Enter\" && otp1.every((value) => value.length === 1)) {\r\n      submitEmailOtp();\r\n    }\r\n  };\r\n\r\n  const submitEmailOtp = async () => {\r\n    setloader4(true);\r\n    const otpEmailData = {\r\n      otp: str1,\r\n      user_id: window.localStorage.getItem(\"emailToken\"),\r\n    };\r\n    try {\r\n      const res = await emailSinupOtp(otpEmailData);\r\n      setEmailUser(res?.data?.data.user);\r\n      // console.log(res?.data?.data.user);\r\n      if (res.data.error == false) {\r\n        toastSuccessMessage(res?.data?.message);\r\n        setVeriFiedIconEmail(true);\r\n        setemailExit(\"\");\r\n        setFormResiter(true);\r\n        setShowEmailOtp(false);\r\n        setEmailVeridedInput(false);\r\n        setEmailOtp(false);\r\n      }\r\n      if (res.data.error == true) {\r\n        toastSuccessMessage1(res?.data?.message);\r\n      }\r\n      setloader4(false);\r\n    } catch (error) {\r\n      setloader4(false);\r\n    }\r\n  };\r\n  const inputRef = useRef(null);\r\n\r\n  const handlePaste = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleMouseDown = (event) => {\r\n    if (document.activeElement === inputRef.current) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const handleSelect = (event) => {\r\n    const input = inputRef.current;\r\n    if (input) {\r\n      const start = input.selectionStart;\r\n      const end = input.selectionEnd;\r\n\r\n      if (start < 3) {\r\n        event.preventDefault();\r\n        if (end > 3) {\r\n          input.setSelectionRange(3, end);\r\n        } else {\r\n          input.setSelectionRange(3, 3);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFocus = (event) => {\r\n    if (inputRef.current) {\r\n      inputRef.current.setSelectionRange(3, inputRef.current.value.length);\r\n    }\r\n  };\r\n  const handleCheckboxChange = (event) => {\r\n    setIsChecked(event.target.checked);\r\n    // handleShow();\r\n  };\r\n\r\n  const handleStateChange = (e) => {\r\n    setSelectedState(e.target.value);\r\n  };\r\n  const handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const [location, setLocation] = useState({ latitude: null, longitude: null });\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendOnboardingRequest = async () => {\r\n    let currentLocation = { ...location };\r\n\r\n    // If location is not set, try to get it one more time\r\n    if (!currentLocation.latitude || !currentLocation.longitude) {\r\n      await new Promise((resolve) => {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            currentLocation = {\r\n              latitude: position.coords.latitude,\r\n              longitude: position.coords.longitude,\r\n            };\r\n            setLocation(currentLocation);\r\n            resolve();\r\n          },\r\n          () => {\r\n            console.warn(\"Unable to get location.\");\r\n            resolve();\r\n          },\r\n          { timeout: 5000, maximumAge: 0 }\r\n        );\r\n      });\r\n    }\r\n\r\n    const onboardingData = {\r\n      name: resiter.name,\r\n      email: emailInitial.emailId,\r\n      mobileNo: initalValue.mobileNo,\r\n      state: selectedState,\r\n    };\r\n\r\n    if (currentLocation.latitude && currentLocation.longitude) {\r\n      onboardingData.latitude = currentLocation.latitude;\r\n      onboardingData.longitude = currentLocation.longitude;\r\n    }\r\n\r\n    try {\r\n      const response = await onboardingRequest(onboardingData);\r\n      console.log(\"Onboarding request sent:\", response);\r\n    } catch (error) {\r\n      console.error(\"Error sending onboarding request:\", error);\r\n    }\r\n  };\r\n\r\n  const disabledButtonStyle = {\r\n    cursor: \"none\",\r\n    backgroundColor: \"#d3d3d3\",\r\n  };\r\n\r\n  const handleResendOTP = async (type) => {\r\n    setResendLoading(true);\r\n    setOtpError(\"\");\r\n    setOtpMessage(\"\");\r\n\r\n    try {\r\n      let response;\r\n      // if (type === 'mobile') {\r\n      response = await resendOtpslogin({ user_id: userIDD });\r\n      // } else {\r\n      //     // Assuming you have a similar function for email OTP resend\r\n      //     response = await resendEmailOtp({user_id: window.localStorage.getItem('emailToken')});\r\n      // }\r\n\r\n      if (response.status === 200) {\r\n        setOtpMessage(\"OTP has been resent successfully.\");\r\n        resetOtpState();\r\n      } else {\r\n        setOtpError(\"Failed to resend OTP.\");\r\n      }\r\n    } catch (error) {\r\n      setOtpError(\"Failed to resend OTP.\");\r\n    } finally {\r\n      setResendLoading(false);\r\n    }\r\n  };\r\n  const otpHandleChange = (index, value, setOtpFunction, inputsRef) => {\r\n    if (value.length > 1) return;\r\n    const newOtp = [...(setOtpFunction === setOtp ? otp : otp1)];\r\n    newOtp[index] = value;\r\n    setOtpFunction(newOtp);\r\n\r\n    if (value && inputsRef.current[index + 1]) {\r\n      inputsRef.current[index + 1].focus();\r\n    }\r\n  };\r\n  const handleOtpSubmit = async (type) => {\r\n    setResendLoading(true);\r\n    setOtpError(\"\");\r\n    setOtpMessage(\"\");\r\n\r\n    try {\r\n      let response;\r\n      if (type === \"mobile\") {\r\n        response = await isVerifiedMobileOtp({\r\n          otp: otp.join(\"\"),\r\n          user_id: userIDD,\r\n        });\r\n      } else {\r\n        response = await emailSinupOtp({\r\n          otp: otp1.join(\"\"),\r\n          user_id: window.localStorage.getItem(\"emailToken\"),\r\n        });\r\n      }\r\n\r\n      if (response.data.error === false) {\r\n        setOtpMessage(response.data.message);\r\n        if (type === \"mobile\") {\r\n          setMobile(response.data.data.user);\r\n          setEmailVeridedInput(true);\r\n          setMobileOtp(false);\r\n          setMobileVerified(false);\r\n          setVeriFiedIconMobile(true);\r\n          setMobileExit(\"\");\r\n        } else {\r\n          setEmailUser(response.data.data.user);\r\n          setVeriFiedIconEmail(true);\r\n          setemailExit(\"\");\r\n          setFormResiter(true);\r\n          setShowEmailOtp(false);\r\n          setEmailVeridedInput(false);\r\n          setEmailOtp(false);\r\n        }\r\n        handleCloseOtpModal(type);\r\n      } else {\r\n        setOtpError(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      setOtpError(\"Failed to verify OTP.\");\r\n    } finally {\r\n      setResendLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCloseOtpModal = (type) => {\r\n    if (type === \"mobile\") {\r\n      handleClose2();\r\n    } else {\r\n      setShowEmailOtp(false);\r\n    }\r\n    resetOtpState();\r\n  };\r\n  useEffect(() => {\r\n    // Fetch initial data\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const [countryRes, userTypeRes] = await Promise.all([\r\n          CountryList(),\r\n          userType(),\r\n        ]);\r\n        setCountry(countryRes?.data);\r\n        setData(userTypeRes?.data);\r\n        setUserId(userTypeRes?.data?.[0]?._id);\r\n      } catch (error) {\r\n        console.error(\"Error fetching initial data:\", error);\r\n      }\r\n    };\r\n\r\n    // Fetch states\r\n    const fetchStates = async () => {\r\n      try {\r\n        const response = await axios.get(`${baseUrl}state/country/101`);\r\n        if (response.data.error === false) {\r\n          const states = response.data.data.map((state) => ({\r\n            value: state._id,\r\n            name: state.name,\r\n          }));\r\n          setStateOptions(states);\r\n        } else {\r\n          console.error(\"Error fetching states:\", response.data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching states:\", error);\r\n      }\r\n    };\r\n\r\n    const getGeolocation = () => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            setLocation({\r\n              latitude: position.coords.latitude,\r\n              longitude: position.coords.longitude,\r\n            });\r\n            console.log(\"location\", location);\r\n          },\r\n          (error) => {\r\n            setError(error.message);\r\n            console.error(\"Geolocation error:\", error.message);\r\n          }\r\n        );\r\n      } else {\r\n        toastErrorMessage(\"Geolocation is not supported by this browser.\");\r\n        console.error(\"Geolocation is not supported by this browser.\");\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n    fetchStates();\r\n    getGeolocation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setResister((prev) => ({\r\n      ...prev,\r\n      password: initalValue.mobileNo.slice(3, 13),\r\n    }));\r\n  }, [initalValue.mobileNo]);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(emailInitial.emailId);\r\n    }, 2000);\r\n\r\n    return () => clearTimeout(handler);\r\n  }, [emailInitial.emailId]);\r\n\r\n  useEffect(() => {\r\n    if (debouncedValue) {\r\n      isEmailExitt(debouncedValue);\r\n    }\r\n  }, [debouncedValue]);\r\n\r\n  useEffect(() => {\r\n    if (isChecked) {\r\n      sendOnboardingRequest();\r\n    }\r\n  }, [isChecked]);\r\n\r\n  useEffect(() => {\r\n    const areFieldsFilled =\r\n      resiter.name &&\r\n      selectedState &&\r\n      initalValue.mobileNo.length === 13 &&\r\n      emailInitial.emailId;\r\n    setIsCheckboxDisabled(!areFieldsFilled);\r\n  }, [resiter.name, selectedState, initalValue.mobileNo, emailInitial.emailId]);\r\n\r\n  useEffect(() => {\r\n    setOtp(new Array(length).fill(\"\"));\r\n  }, [showMobileOtp]);\r\n\r\n  useEffect(() => {\r\n    setOtp1(new Array(length).fill(\"\"));\r\n  }, [showEmailOtp]);\r\n  console.log(\"selectedUserType\", selectedUserType);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"my-3\">\r\n        <MobilesinupOtpModal\r\n          show={showMobileOtp}\r\n          onHide={() => handleCloseOtpModal(\"mobile\")}\r\n          isTimerEnded={isTimerEnded}\r\n          resendLoading={resendLoading}\r\n          timeLeft={timeLeft}\r\n          otp={otp}\r\n          inputs={inputs}\r\n          otpMessage={otpMessage}\r\n          otpError={otpError}\r\n          handleResendOtp={handleResendOTP}\r\n          formatTime={formatTime}\r\n          otpHandleChange={otpHandleChange}\r\n          handleKeyDown={handleKeyDown}\r\n          handleOtpSubmit={handleOtpSubmit}\r\n          setOtp={setOtp}\r\n          logintoken={userIDD}\r\n        />\r\n        <Modal\r\n          show={showEmailOtp}\r\n          onHide={() => handleCloseOtpModal(\"email\")}\r\n          centered\r\n          className=\"email-optp-modle\"\r\n          style={{\r\n            zIndex: 1050,\r\n          }}\r\n        >\r\n          <Modal.Body\r\n            style={{\r\n              backgroundColor: `var(--bs-primary1)`,\r\n              color: `var(--bs-primary2)`,\r\n              border: \"2px solid var(--bs-primary3)\",\r\n              transform: \"translateZ(0)\",\r\n            }}\r\n          >\r\n            <div className=\"set-head\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"headinf-otp\">\r\n                    <h2>Email OTP Verification</h2>\r\n                    <p className=\"set-lage\">\r\n                      Enter 6 Digit Number Verification Code On Your Email ID!\r\n                    </p>\r\n                  </div>\r\n                  {isTimerEnded ? (\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-resend-otp\"\r\n                        onClick={() => handleResendOTP(\"email\")}\r\n                        disabled={resendLoading}\r\n                      >\r\n                        {resendLoading ? (\r\n                          <span\r\n                            className=\"spinner-border spinner-border-sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                        ) : (\r\n                          \"Resend OTP\"\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"verification-timer\">\r\n                        OTP expires in {formatTime(timeLeft)}{\" \"}\r\n                        <span\r\n                          className=\"resend-otp\"\r\n                          onClick={() => handleResendOTP(\"email\")}\r\n                        >\r\n                          Resend OTP\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"otp-inputs\">\r\n                        {otp1.map((value, index) => (\r\n                          <input\r\n                            key={index}\r\n                            type=\"number\"\r\n                            maxLength=\"1\"\r\n                            value={value}\r\n                            onChange={(e) =>\r\n                              otpHandleChange(\r\n                                index,\r\n                                e.target.value,\r\n                                setOtp1,\r\n                                inputs1\r\n                              )\r\n                            }\r\n                            onKeyDown={(e) => handleKeyDown(index, e, inputs1)}\r\n                            ref={(input) => (inputs1.current[index] = input)}\r\n                            className=\"otp-input\"\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-submit-otp\"\r\n                          onClick={() => handleOtpSubmit(\"email\")}\r\n                          disabled={\r\n                            resendLoading || otp1.some((digit) => digit === \"\")\r\n                          }\r\n                        >\r\n                          {resendLoading ? (\r\n                            <span\r\n                              className=\"spinner-border spinner-border-sm\"\r\n                              role=\"status\"\r\n                              aria-hidden=\"true\"\r\n                            ></span>\r\n                          ) : (\r\n                            \"Submit OTP\"\r\n                          )}\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  {otpMessage && (\r\n                    <div className=\"alert alert-success mt-3\">{otpMessage}</div>\r\n                  )}\r\n                  {otpError && (\r\n                    <div className=\"alert alert-danger mt-3\">{otpError}</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n        {formResiter ? (\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 mb-2\">\r\n                <div className=\"input-group \">\r\n                  <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                    <FaRegUser />\r\n                  </span>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Your Name\"\r\n                    name=\"name\"\r\n                    value={resiter.name}\r\n                    onChange={handleResiter}\r\n                  />\r\n                </div>\r\n                <p style={{ color: \"red\", marginBottom: \"2px\" }}>\r\n                  {errorValue.name}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-12 mb-2 \">\r\n                {/* <label htmlFor=\"\">Mobile <span style={{ color: 'red' }}>*</span></label> */}\r\n                <div className=\"input-group input-group-set-mob\">\r\n                  <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                    <FaMobileScreenButton />\r\n                  </span>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Mobile Number\"\r\n                    ref={inputRef}\r\n                    onMouseDown={handleMouseDown}\r\n                    onSelect={handleSelect}\r\n                    onPaste={handlePaste}\r\n                    name=\"mobileNo\"\r\n                    onKeyDown={handleKeyPress}\r\n                    value={initalValue.mobileNo}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {veriFiedIconMobile && (\r\n                    <div className=\"setVerufied\">\r\n                      <MdVerified />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {mobileExit && <p className=\"text-danger\">{mobileExit}</p>}\r\n              </div>\r\n              <div className=\"col-12 mb-2 \">\r\n                <div className=\"input-group input-group-set-mob\">\r\n                  <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                    <MdEmail />\r\n                  </span>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Email\"\r\n                    name=\"emailId\"\r\n                    onKeyDown={handleKeyPress2}\r\n                    value={emailInitial.emailId}\r\n                    onChange={handleEmail}\r\n                    autocomplete=\"new-email\"\r\n                  />\r\n                  {veriFiedIconEmail && (\r\n                    <div className=\"setVerufied\">\r\n                      <MdVerified />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {errorMessageEmail && (\r\n                  <p style={{ color: \"red\" }}>{errorMessageEmail}</p>\r\n                )}\r\n                {emailExit && <p style={{ color: \"red\" }}>{emailExit}</p>}\r\n              </div>\r\n              <div className=\"col-12 mb-2\">\r\n                <div className=\"input-group \">\r\n                  <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                    <RiLockPasswordFill />\r\n                  </span>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Your Password\"\r\n                    name=\"password\"\r\n                    disabled\r\n                    value={resiter.password}\r\n                    onChange={handleResiter}\r\n                  />\r\n                </div>\r\n                <p style={{ color: \"red\", marginBottom: \"2px\" }}>\r\n                  {errorValue.name}\r\n                </p>\r\n              </div>\r\n              <NewTabSignUp\r\n                data={data}\r\n                count={count}\r\n                tabChange={tabChange}\r\n                resiter={resiter}\r\n                handleResiter2={handleResiter2}\r\n              />\r\n              <div className=\"col-lg-6 col-md-6 col-sm-12 form-group mb-2\">\r\n                <div className=\"input-group\">\r\n                  <select\r\n                    id=\"myState\"\r\n                    name=\"state_id\"\r\n                    value={selectedState}\r\n                    onChange={handleStateChange}\r\n                    className=\"form-select form-control\"\r\n                  >\r\n                    <option value=\"\" disabled>\r\n                      Select State{\" \"}\r\n                    </option>\r\n                    {stateOptions\r\n                      .filter((state) =>\r\n                        state.name\r\n                          .toLowerCase()\r\n                          .includes(searchQuery.toLowerCase())\r\n                      )\r\n                      .map((state) => (\r\n                        <option key={state.value} value={state.value}>\r\n                          {state.name}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n                <span className=\"text-danger\">{errorValue.state}</span>\r\n              </div>\r\n              {selectedUserType !== \"zsm\" && (\r\n                <div className=\"col-lg-6 mb-2\">\r\n                  <div className=\"input-group\">\r\n                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                      <RiLockPasswordFill />\r\n                    </span>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Enter Refer ID\"\r\n                      name=\"refer_id\"\r\n                      value={resiter.refer_id}\r\n                      onChange={handleResiter}\r\n                    />\r\n                  </div>\r\n                  <p style={{ color: \"red\", marginBottom: \"2px\" }}>\r\n                    {errorValue.refer_id}\r\n                  </p>\r\n                </div>\r\n              )}\r\n\r\n              {selectedUserType !== \"zsm\" && (\r\n                <>\r\n                  <div className=\"col-lg-6 mb-2\">\r\n                    <div\r\n                      className=\"form-check form-check-form\"\r\n                      style={{ paddingLeft: \"2rem\" }}\r\n                    >\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        id=\"flexCheckDefault\"\r\n                        checked={isChecked}\r\n                        onChange={handleCheckboxChange}\r\n                        disabled={isCheckboxDisabled}\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"flexCheckDefault\"\r\n                      >\r\n                        Without Refer ID\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  disabled={\r\n                    !isNameValid(resiter.name) ||\r\n                    !resiter.name ||\r\n                    !resiter.password ||\r\n                    (!resiter.refer_id &&\r\n                      selectedUserType !== \"Super Distributortttttttt\" &&\r\n                      !isChecked) ||\r\n                    !isValidEmail(emailInitial.emailId) ||\r\n                    initalValue.mobileNo.length !== 13 ||\r\n                    errorMessageEmail\r\n                  }\r\n                  className={`btn ${\r\n                    !isNameValid(resiter.name) ||\r\n                    !resiter.name ||\r\n                    !resiter.password ||\r\n                    (!resiter.refer_id &&\r\n                      selectedUserType !== \"Super Distributorttttttttt\" &&\r\n                      !isChecked) ||\r\n                    !isValidEmail(emailInitial.emailId) ||\r\n                    initalValue.mobileNo.length !== 13 ||\r\n                    errorMessageEmail\r\n                      ? \"disableebuttoncls\"\r\n                      : \"btn-login\"\r\n                  }`}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  {loader5 && (\r\n                    <div\r\n                      style={{ height: \"16px\", width: \"16px\" }}\r\n                      className=\"spinner-border\"\r\n                      role=\"status\"\r\n                    >\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  )}\r\n                  REGISTER\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Modal\r\n          show={show}\r\n          onHide={handleClose}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          style={{\r\n            zIndex: 1050,\r\n          }}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title style={{ color: \"green\" }}>Thank You !</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            style={{\r\n              backgroundColor: \"#ffffff\",\r\n              transform: \"translateZ(0)\",\r\n              backfaceVisibility: \"hidden\",\r\n            }}\r\n          >\r\n            <div className=\"para-comor\">\r\n              <p>\r\n                Thank you for choosing BankMudraa!.Our enterprise team will\r\n                reach out to you shortly.\r\n              </p>\r\n              <p>\r\n                If you have any further questions, feel free to contact us at{\" \"}\r\n                <a href=\"mailto:support@bankMudraa.com\" target=\"blank\">\r\n                  support@bankMudraa.com\r\n                </a>{\" \"}\r\n                .\r\n              </p>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n      <div className=\"text-align-center mt-1\">\r\n        <div>\r\n          Have an account?{\" \"}\r\n          <Link\r\n            to=\"/login-area\"\r\n            className=\"text-decoration-underline\"\r\n            style={{ color: \"var(--bs-nav)\" }}\r\n          >\r\n            Login\r\n          </Link>{\" \"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default SignUpMerchantForm;\r\n","import { useState } from \"react\"\r\nimport MerchantLoginHeader from \"../../../common/merchantLoginHeader/MerchantLoginHeader\"\r\nimport SignUpMerchantForm from \"./signUpMerchantForm/SignUpMerchantForm\"\r\nimport { isMobileExits, sinupApi, userType } from \"../../../api/login/Login\"\r\nimport { toast } from \"react-toastify\"\r\nimport Footer from \"../../footer/footer\"\r\nimport tranParentLogo from \"../../../asesets/banner/transparentLogo.png\";\r\nimport AnimatedWrapper from \"../../../common/AnimateWrapper\"\r\nfunction SignUpMerchant() {\r\n    const [loader1, setloader1] = useState(false)\r\n    const [showMobileOtp, setShowMobileOtp] = useState(false);\r\n    const [mobileExit, setMobileExit] = useState()\r\n    const handleClose2 = () => setShowMobileOtp(false);\r\n    const handleShow2 = () => setShowMobileOtp(true);\r\n    const [mobileVeridedInput, setMobileVerified] = useState(true)\r\n    const [mobileOtp, setMobileOtp] = useState(false)\r\n    const [emailVeridedInput, setEmailVeridedInput] = useState(false)\r\n    const [emailOtp, setEmailOtp] = useState(false)\r\n    const [formResiter, setFormResiter] = useState(true);\r\n    const [countryCode, setCountryCode] = useState()\r\n    const [verifyotpValue, setVarifyOtpValue] = useState(null);\r\n    const [userIDD, setUserID] = useState()\r\n    const [countryCode1, setCountryCode1] = useState(10)\r\n    // console.log(userIDD);\r\n\r\n    const [initalValue, setInitialValue] = useState({\r\n        mobileNo: '+91',\r\n        emailId: ''\r\n    })\r\n    const [veriFiedIconMobile, setVeriFiedIconMobile] = useState(false)\r\n    // console.log(initalValue);\r\n\r\n    const handleChange = (e) => {\r\n        const clone = { ...initalValue }\r\n        const input = e.target.value.replace(/[^0-9+]/g, '');\r\n        const vlaue = input\r\n        const name = e.target.name\r\n\r\n        // clone[name] = vlaue\r\n\r\n        if (e.target.value.length == 2) {\r\n            return\r\n        }\r\n        let newValue = { ...initalValue };\r\n        if (name === \"mobileNo\") {\r\n            setMobileExit('');\r\n            setVeriFiedIconMobile(false);\r\n\r\n\r\n            if (input.length <= 13) {\r\n                newValue = { ...newValue, [name]: input };\r\n            }\r\n        } else {\r\n            newValue = { ...newValue, [name]: input };\r\n        }\r\n\r\n\r\n\r\n        setInitialValue(newValue);\r\n\r\n        if (newValue.mobileNo?.length === 13) {\r\n            isMobileExit(newValue.mobileNo);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const handleCountryCode = (e) => {\r\n        setCountryCode(e.target.value);\r\n        const clone = { ...initalValue, mobileNo: e.target.value }\r\n        setInitialValue(clone)\r\n\r\n    }\r\n\r\n\r\n    const isMobileExit = async (value) => {\r\n        try {\r\n            const res = await isMobileExits(value)\r\n            console.log(res?.data?.isExist);\r\n            if (res?.data?.isExist == true) {\r\n                // alert('Mobile Exit')\r\n\r\n                setMobileExit('Mobile Number Already Exists')\r\n\r\n            }\r\n            else {\r\n                setMobileExit('');\r\n\r\n                mobileGenerateOtpMobile(value);\r\n                handleShow2();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error checking mobile existence:', error);\r\n        }\r\n    }\r\n\r\n\r\n    const toastSuccessMessage = () => {\r\n        toast.success(`OTP Send Successfully.`, {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n        });\r\n    };\r\n\r\n    const mobileGenerateOtpMobile = async (value) => {\r\n        setloader1(true)\r\n        const clone = { ...initalValue, mobileNo: value }\r\n        try {\r\n            const res = await sinupApi(clone)\r\n            // console.log(res?.data);\r\n            setUserID(res?.data?.data?.user);\r\n            if (res?.data?.statusCode == '200') {\r\n                toastSuccessMessage();\r\n                setMobileVerified(false)\r\n                setMobileOtp(true)\r\n            }\r\n            setloader1(false)\r\n\r\n        } catch (error) {\r\n            setloader1(false)\r\n        }\r\n    }\r\n\r\n    const getOtp = () => {\r\n        mobileGenerateOtpMobile()\r\n    }\r\n\r\n    const emailgetOtp = () => {\r\n        // setEmailVeridedInput(false)\r\n        setEmailOtp(true)\r\n        setEmailVeridedInput(false)\r\n    }\r\n\r\n    const submitOtpEmail = () => {\r\n        setFormResiter(true)\r\n        setEmailVeridedInput(false)\r\n        setEmailOtp(false)\r\n    }\r\n\r\n    const nextForm = () => {\r\n        setFormResiter(true)\r\n        setEmailVeridedInput(false)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <MerchantLoginHeader /> */}\r\n            <div className=\"container-login100\">\r\n                    <div className=\"merchant-logo-container\">\r\n                          <img src={tranParentLogo} alt=\"tranParentLogo Logo\"  className=\"merchant-logo\" />\r\n                        </div>\r\n\r\n                <section className=\"my-4-4\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <AnimatedWrapper>\r\n                                <div className=\"col-lg-12 \">\r\n                                    <div className=\"login-area-sec glass-container custom-scrollbar\">\r\n                                        <h1 className=\"text-align-center\">Signup</h1>\r\n                                        <SignUpMerchantForm\r\n                                            mobileVeridedInput={mobileVeridedInput}\r\n                                            getOtp={getOtp}\r\n                                            mobileOtp={mobileOtp}\r\n                                            emailVeridedInput={emailVeridedInput}\r\n                                            emailgetOtp={emailgetOtp}\r\n                                            nextForm={nextForm}\r\n                                            emailOtp={emailOtp}\r\n                                            submitOtpEmail={submitOtpEmail}\r\n                                            formResiter={formResiter}\r\n                                            setEmailVeridedInput={setEmailVeridedInput}\r\n\r\n                                            setMobileOtp={setMobileOtp}\r\n                                            setMobileVerified={setMobileVerified}\r\n\r\n                                            initalValue={initalValue}\r\n                                            handleChange={handleChange}\r\n                                            mobileGenerateOtpMobile={mobileGenerateOtpMobile}\r\n                                            userIDD={userIDD}\r\n\r\n                                            handleCountryCode={handleCountryCode}\r\n                                            countryCode={countryCode}\r\n\r\n                                            setEmailOtp={setEmailOtp}\r\n                                            setFormResiter={setFormResiter}\r\n                                            loader1={loader1}\r\n\r\n                                            showMobileOtp={showMobileOtp}\r\n                                            handleClose2={handleClose2}\r\n                                            mobileExit={mobileExit}\r\n                                            setMobileExit={setMobileExit}\r\n                                            veriFiedIconMobile={veriFiedIconMobile}\r\n                                            setVeriFiedIconMobile={setVeriFiedIconMobile}\r\n\r\n\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </AnimatedWrapper>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <div className=\"singupFooter\">\r\n                    <Footer notIsFixed={true}/>\r\n                </div>\r\n            \r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default SignUpMerchant","import SignUpMerchant from \"../../../components/merchantLoginArea/sinupMerchant/SinUpMerchant\"\r\nfunction SinUpMerchantPage() {\r\n    return (\r\n        <>\r\n                <SignUpMerchant /> \r\n        </>\r\n    )\r\n}\r\nexport default SinUpMerchantPage"],"names":["_ref","loginForm","handleSubmitBack","currentPage","showTooltip","setShowTooltip","useState","navigate","useNavigate","_jsx","className","children","_jsxs","style","display","padding","backgroundColor","borderRadius","boxShadow","src","imageLogo","alt","maxWidth","height","objectFit","onClick","logOut","window","localStorage","clear","Link","to","data","count","tabChange","register","handleResiter2","initialUserTypeId","selectedOption","setSelectedOption","errorValue","setErrorValue","useEffect","length","index","findIndex","item","_id","id","name","value","onChange","e","selectedId","target","prev","user_type","disabled","selected","map","show","onHide","otp","inputs","otpMessage","otpError","handleResendOTP","otpHandleChange","handleKeyDown","handleOtpSubmit","setOtp","storedMobileNo","logintoken","isTimerEnded","setIsTimerEnded","timeLeft","setTimeLeft","resendLoading","setResendLoading","isResendDisabled","setIsResendDisabled","timerRef","useRef","startTimer","useCallback","current","clearInterval","setInterval","prevTime","handleResendOtp","async","_response$data","response","resendOtpslogin","customer_mobile","user_id","_response$data2","_response$data3","_response$data3$data","console","log","statusCode","toastSuccessMessage","message","Array","fill","toastErrorMessage","error","Modal","centered","zIndex","Body","color","border","transform","type","role","_Fragment","seconds","minutes","Math","floor","remainingSeconds","concat","toString","padStart","formatTime","cursor","pointerEvents","maxLength","onKeyDown","ref","input","some","digit","_data$","initalValue","handleChange","mobileGenerateOtpMobile","userIDD","mobileVeridedInput","getOtp","mobileOtp","emailVeridedInput","emailgetOtp","nextForm","emailOtp","submitOtpEmail","formResiter","setEmailVeridedInput","setMobileOtp","setMobileVerified","handleCountryCode","countryCode","setEmailOtp","setFormResiter","loader1","showMobileOtp","handleClose2","mobileExit","setMobileExit","veriFiedIconMobile","setVeriFiedIconMobile","showEmailOtp","setShowEmailOtp","emailExit","setemailExit","veriFiedIconEmail","setVeriFiedIconEmail","isCheckboxDisabled","setIsCheckboxDisabled","isChecked","setIsChecked","setShow","emailUser","setEmailUser","loader2","setloader2","loader3","setloader3","loader4","setloader4","loader5","setloader5","setData","country","setCountry","userId","setUserId","mobileId","setMobile","setCount","stateList","setStateList","selectedState","setSelectedState","searchQuery","setSearchQuery","loading","setLoading","message2","setMessage2","error2","setError2","setOtpMessage","setOtpError","selectedUserType","setSelectedUserType","stateOptions","setStateOptions","otp1","setOtp1","inputs1","step","setStep","user_idcus","resiter","setResister","mobile","user_type_id","password","refer_id","str","element","key","focus","handleResiter","clone","replace","toast","success","position","autoClose","toastSuccessMessage1","resetOtpState","emailInitial","setEmailInitial","deviceId","emailId","isValidEmail","email","test","debouncedValue","setDebouncedValue","errorMessageEmail","setErrorMessageEmail","isEmailExitt","_res$data6","_res$data7","res","isEmailExits2","isExist","SubmitEmail","isNameValid","trim","_res$data8","_res$data10","emailSinup","_res$data9","_res$data11","setItem","user","str1","inputRef","location","setLocation","latitude","longitude","setError","status","setOtpFunction","inputsRef","newOtp","isVerifiedMobileOtp","join","emailSinupOtp","getItem","handleCloseOtpModal","_userTypeRes$data","_userTypeRes$data$","countryRes","userTypeRes","Promise","all","CountryList","userType","fetchInitialData","axios","get","baseUrl","states","state","fetchStates","navigator","geolocation","getCurrentPosition","coords","mobileNo","slice","handler","setTimeout","clearTimeout","currentLocation","resolve","warn","timeout","maximumAge","onboardingData","onboardingRequest","sendOnboardingRequest","areFieldsFilled","MobilesinupOtpModal","FaRegUser","placeholder","marginBottom","FaMobileScreenButton","onMouseDown","event","document","activeElement","preventDefault","onSelect","start","selectionStart","end","selectionEnd","setSelectionRange","onPaste","MdVerified","MdEmail","cloneEmail","autocomplete","RiLockPasswordFill","NewTabSignUp","i","selectedUser","find","filter","toLowerCase","includes","paddingLeft","checked","htmlFor","cloen","values","validation","registerUser","width","handleClose","Header","closeButton","Title","backfaceVisibility","href","setloader1","setShowMobileOtp","setCountryCode","verifyotpValue","setVarifyOtpValue","setUserID","countryCode1","setCountryCode1","setInitialValue","isMobileExit","_res$data","_res$data2","isMobileExits","_res$data3","_res$data3$data","_res$data4","sinupApi","tranParentLogo","AnimatedWrapper","SignUpMerchantForm","_newValue$mobileNo","newValue","Footer","notIsFixed","SignUpMerchant"],"sourceRoot":""}