{"version":3,"file":"static/js/1599.5d1fc2ca.chunk.js","mappings":"wKAGA,MAmSA,EAnRsBA,IAAoC,IAAnC,KAAEC,EAAI,YAAEC,EAAW,OAAEC,GAAQH,EAClD,MAAOI,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IACxCC,EAAUC,IAAeF,EAAAA,EAAAA,WAAS,IAClCG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,OAC5CK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IAC5BO,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,OACxCS,EAAYC,IAAiBV,EAAAA,EAAAA,WAAS,IACtCW,EAAWC,IAAgBZ,EAAAA,EAAAA,UAAS,MACrCa,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAmBD,EAAAA,EAAAA,QAAO,MAC1BE,GAAYF,EAAAA,EAAAA,QAAO,MACnBG,GAAYH,EAAAA,EAAAA,QAAO,KAEzBI,EAAAA,EAAAA,YAAU,KACJvB,GA7BC,IAAIwB,SAASC,IACbC,UAAUC,cAAiBD,UAAUC,aAAaC,iBAGrDF,UAAUC,aAAaC,mBACpBC,MAAKC,IACJL,EAAQK,EAAQC,MAAKC,GAA0B,eAAhBA,EAAOC,OAAuB,IAE9DC,OAAM,KACLT,GAAQ,EAAM,IAPlBA,GAAQ,EASV,IAmBiBI,MAAKM,IAClBlB,EAAa,SAASkB,GACjBA,GACHtB,EAAe,6DACjB,GAEJ,GACC,CAACb,KAEJuB,EAAAA,EAAAA,YAAU,KACR,IAAIa,EAQJ,OAPIjC,IAAgBG,EAClB8B,EAAWC,aAAY,KACrB1B,GAAU2B,GAAcA,EAAY,GAAE,GACrC,KAEHC,cAAcH,GAET,IAAMG,cAAcH,EAAS,GACnC,CAACjC,EAAaG,IAEjB,MAAMkC,GAAiBC,EAAAA,EAAAA,cAAY,KAC5BzB,EAKLU,UAAUC,aAAae,aAAa,CAAEC,OAAO,EAAMC,OAAO,IACvDf,MAAKgB,IACJ3B,EAAS4B,QAAQC,UAAYF,EAC7BxB,EAAUyB,QAAUD,EACpBzB,EAAiB0B,QAAU,IAAIE,cAAcH,GAC7CzB,EAAiB0B,QAAQG,gBAAkBC,EAC3C9B,EAAiB0B,QAAQK,OAASC,EAClChC,EAAiB0B,QAAQO,MAAM,KAC/BjD,GAAe,GACfG,GAAY,GACZI,EAAS,GACTW,EAAUwB,QAAU,GACpBjC,EAAe,KAAK,IAErBqB,OAAMoB,IACLC,QAAQD,MAAM,iCAAkCA,GAC7B,oBAAfA,EAAME,KACR3C,EAAe,mEACS,kBAAfyC,EAAME,KACf3C,EAAe,yGAEfA,EAAe,yEACjB,IA1BFA,EAAe,6DA2Bb,GACH,CAACG,IAUEyC,GAAgBhB,EAAAA,EAAAA,cAAY,KAC5BrB,EAAiB0B,SAA8C,aAAnC1B,EAAiB0B,QAAQY,QACvDtC,EAAiB0B,QAAQa,OACzBtC,EAAUyB,QAAQc,YAAYC,SAAQC,GAASA,EAAMH,SACvD,GACC,IASGI,GAAiBtB,EAAAA,EAAAA,cAAY,KAC7BrB,EAAiB0B,SAA8C,cAAnC1B,EAAiB0B,QAAQY,QACvDtC,EAAiB0B,QAAQkB,QACzBzD,GAAY,GACd,GACC,IAUG0D,GAAkBxB,EAAAA,EAAAA,cAAY,KAC9BrB,EAAiB0B,SAA8C,WAAnC1B,EAAiB0B,QAAQY,QACvDtC,EAAiB0B,QAAQoB,SACzB3D,GAAY,GACd,GACC,IASG2C,GAAsBT,EAAAA,EAAAA,cAAY0B,IAAe,IAAd,KAAEC,GAAMD,EAC3CC,EAAKC,KAAO,GACd/C,EAAUwB,QAAQwB,KAAKF,EACzB,GACC,IAUGhB,GAAaX,EAAAA,EAAAA,cAAY,KAC7B,MAAM8B,EAAY,IAAIC,KAAKlD,EAAUwB,QAAS,CAAE2B,KAAM,eAChDC,EAAWC,IAAIC,gBAAgBL,GACrC9D,EAAiBiE,GACjBtE,GAAe,GACfG,GAAY,EAAM,GACjB,IAqBGsE,EAAeA,KACfxD,EAAUyB,SACZzB,EAAUyB,QAAQc,YAAYC,SAAQC,GAASA,EAAMH,SAEvDlD,EAAiB,MACjBL,GAAe,GACfG,GAAY,GACZI,EAAS,GACTE,EAAe,MACfE,GAAc,GACdd,GAAa,EA8Bf,OACE6E,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAC/E,KAAMA,EAAMgF,OAAQH,EAAcI,UAAQ,EAACZ,KAAK,KAAIa,SAAA,EACzDC,EAAAA,EAAAA,KAACJ,EAAAA,EAAMK,OAAM,CAACC,aAAW,EAAAH,UACvBC,EAAAA,EAAAA,KAACJ,EAAAA,EAAMO,MAAK,CAAAJ,SAAC,oBAEfC,EAAAA,EAAAA,KAACJ,EAAAA,EAAMQ,KAAI,CAACC,UAAU,cAAaN,UAClB,IAAdlE,GACCmE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qBAAoBN,SAAC,+DAGlCtE,GACFuE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qBAAoBN,SAChCtE,KAGHkE,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,GACK/E,IAAgBK,KACjB2E,EAAAA,EAAAA,KAAA,SAAOO,IAAKxE,EAAUyE,MAAM,OAAOC,OAAO,OAAOC,UAAQ,EAACC,MAAO3F,EAAa4F,MAAO,CAAEC,QAASxF,EAAgB,OAAS,QAAQyF,WAAazF,EAAgB,GAAK,WAEpKA,IAAkBL,IACjBgF,EAAAA,EAAAA,KAAA,SAAOe,IAAK1F,EAAe2F,UAAQ,EAACJ,MAAO,CAACJ,MAAO,OAAQS,SAAU,YAEvEtB,EAAAA,EAAAA,MAAA,OAAKU,UAAU,OAAMN,SAAA,CAClB/E,IAAe2E,EAAAA,EAAAA,MAAA,OAAAI,SAAA,CAAK,mBA5CbmB,KAClB,MAAMC,EAAUC,KAAKC,MAAMH,EAAU,IAC/BI,EAAmBJ,EAAU,GACnC,MAAM,GAANK,OAAUJ,EAAQK,WAAWC,SAAS,EAAG,KAAI,KAAAF,OAAID,EAAiBE,WAAWC,SAAS,EAAG,KAAI,EAyC7CC,CAAWnG,OAC/CP,IAAgBK,IAChB2E,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QAASxE,EAAe0C,SAAC,oBAIpD/E,IAAgBG,IACfwE,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EACEC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QAASjD,EAAgByB,UAAU,OAAMN,SAAC,WAGpEC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,SAASC,QAASvD,EAAcyB,SAAC,sBAKpD/E,GAAeG,IACdwE,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EACEC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QAAS/C,EAAiBuB,UAAU,OAAMN,SAAC,YAGrEC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,SAASC,QAASvD,EAAcyB,SAAC,sBAKpD1E,IAAkBL,IACjB2E,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EACEC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,UAAUhB,MAAO,CAACkB,gBAAgB,qBAAuBC,OAAO,QAASF,QAtGtFG,KACjBjH,EAAOM,GACPP,GAAa,EAoG+GuF,UAAU,YAAWN,SAAC,gBAGpIC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAASA,KACnCvG,EAAiB,MACjBE,EAAS,EAAE,EACV6E,UAAU,OAAMN,SAAC,uBAShCC,EAAAA,EAAAA,KAACJ,EAAAA,EAAMqC,OAAM,CAAAlC,UACXC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAASnC,EAAaK,SAAC,eAI/C,C,qZChSZ,MAAOmC,GAAiBC,EAAAA,EAAAA,iBAEVC,EAA2BxH,IAAgB,IAAf,SAACmF,GAASnF,EAC9C,MAAOyH,EAAmBC,IAAuBpH,EAAAA,EAAAA,UAAS,OACnDqH,EAAOC,IAAWtH,EAAAA,EAAAA,UAAS,KAC3BuH,EAAkBC,IAAsBxH,EAAAA,EAAAA,UAAS,CAAC,IAClDyH,EAAKC,IAAU1H,EAAAA,EAAAA,UAAS,CAAC,MACzB2H,EAAQC,IAAa5H,EAAAA,EAAAA,UAAS,CAAC,MAC/BsF,EAAOuC,IAAY7H,EAAAA,EAAAA,UAAS,CAAC,MAC7BuF,EAAQuC,IAAa9H,EAAAA,EAAAA,UAAS,CAAC,MAC5B+H,EAAUC,IAAehI,EAAAA,EAAAA,UAAS,CACxCiI,QAAS,GACTC,OAAQ,GACRC,aAAc,GACdC,WAAW,EACXC,QAAS,UACTC,SAAU,GACVC,qBAAqB,IAG3B,OACIzD,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAP,UACAC,EAAAA,EAAAA,KAACkC,EAAewB,SAAQ,CAACC,MAAO,CAACpB,OAAMC,UAASC,kBAAiBC,qBAAoBO,WAAWC,cAAazC,SAASuC,YAAYL,MAAMC,SAAQC,SAAQC,YAAYtC,QAAOuC,WAAWV,mBAAmBC,uBAAsBvC,SAC1NA,KAEF,EAIE6D,EAAsBA,KAAKC,EAAAA,EAAAA,YAAW3B,G,eCSnD,MAAM4B,EAAkBlJ,IAAA,IAAC,KAAEmJ,GAAO,KAAUC,GAAMpJ,EAAA,OAChDoF,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRrC,QAAQ,WACR1C,KAAK,QACLgF,gBAAiB,CACfC,QAAQ,EACRvD,MAAO,CAAEwD,SAAU,SAErBC,GAAI,CACFxD,QAASkD,EAAO,OAAS,QACzB,2BAA4B,CAC1B,mBAAoB,CAAEO,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,2BAGzCN,GACJ,EAsDEO,EAAiBC,IAAA,IAAC,MAACC,EAAK,SAAG1E,GAASyE,EAAA,OACxCxE,EAAAA,EAAAA,KAAC0E,EAAAA,EAAK,CACNL,GAAI,CACFM,QAAS,EACTC,aAAc,EACd7C,OAAQ,iBACR8C,UAAW,EAGXC,UAAW,iCACX/E,UAEAJ,EAAAA,EAAAA,MAACoF,EAAAA,EAAG,CAACV,GAAI,CACPW,GAAG,EACHC,GAAG,GAEHlF,SAAA,CACA0E,IACEzE,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CACftD,QAAQ,KACRuD,cAAY,EACZd,GAAI,CACFe,cAAe,EACfC,WAAY,MACZjB,SAAU,OACVkB,MAAO,sBACPvF,SAED0E,KAGHzE,EAAAA,EAAAA,KAAC+E,EAAAA,EAAG,CAAAhF,SACKA,QAQH,EA+BFwF,EAAiBC,IAAuB,IAAtB,MAAEf,EAAK,MAAEd,GAAO6B,EACtC,OACE7F,EAAAA,EAAAA,MAACoF,EAAAA,EAAG,CACFlE,QAAQ,OACR4E,eAAe,gBACfjF,MAAM,OAAMT,SAAA,EAEZC,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CACTtD,QAAQ,KACRuD,cAAY,EACZd,GAAI,CACFD,SAAU,OACVkB,MAAO,iBACPvF,SAED0E,KAGHzE,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CACTtD,QAAQ,KACRuD,cAAY,EACZd,GAAI,CACFD,SAAU,OACVkB,MAAO,gBACPI,QAAS,IACT3F,SAED4D,MAEC,EAUJgC,EAAeC,IAA0B,IAAzB,kBAACC,GAAkBD,EACvC,MAAOE,EAA6BC,IAAgC7K,EAAAA,EAAAA,WAAS,IACtE,oBAAEoH,GAAuBsB,KAiBzBX,EAAUC,IAAehI,EAAAA,EAAAA,UAAS,CACvCmD,KAAM,GACNkE,KAAM,GACNhE,MAAO,GACP4E,QAAS,GACT6C,QAAS,KAILC,EAAqBC,UAAkB,IAADC,EAAAC,EAAAC,EAE1C,IAAIC,QAAkBC,EAAAA,EAAAA,KAAgB,CACpCC,cAAc7C,EAAMtF,KACpBoI,iBAAwB,OAAL9C,QAAK,IAALA,OAAK,EAALA,EAAOqC,UAI1B,GAAY,OAARM,QAAQ,IAARA,GAAc,QAANH,EAARG,EAAUrH,YAAI,IAAAkH,IAAdA,EAAgBhI,MACpB,MAjCkB+H,WACpB,IAAK,IAADQ,EACH,IAAIJ,QAAiBK,EAAAA,EAAAA,OAGpB,IAADC,EADkC,OAAvB,OAARN,QAAQ,IAARA,GAAc,QAANI,EAARJ,EAAUrH,YAAI,IAAAyH,OAAN,EAARA,EAAgBG,cAElBvE,EAA4B,OAARgE,QAAQ,IAARA,GAAc,QAANM,EAARN,EAAUrH,YAAI,IAAA2H,OAAN,EAARA,EAAgB3H,MACpC8G,GAA6B,GAC7BF,GAAkB,GAEpB,CAAE,MAAO1H,GAET,CACA,EAqBoB2I,EAGlB,EACAC,EAAAA,EAAAA,GAAqB,OAART,QAAQ,IAARA,GAAc,QAANF,EAARE,EAAUrH,YAAI,IAAAmH,OAAN,EAARA,EAAgBjI,MAAgB,OAARmI,QAAQ,IAARA,GAAc,QAAND,EAARC,EAAUrH,YAAI,IAAAoH,OAAN,EAARA,EAAgBW,QAAQ,GAsBjE5K,EAAAA,EAAAA,YAAU,KAnBY8J,WAEpB,IAAK,IAADe,EACF,IAAIX,QAAiBY,EAAAA,EAAAA,QACU,KAApB,OAARZ,QAAQ,IAARA,GAAc,QAANW,EAARX,EAAUrH,YAAI,IAAAgI,OAAN,EAARA,EAAgB9I,QAEjB+E,GAAaiE,IAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAI,IAAIR,EACtB5E,KAAc,OAAR+D,QAAQ,IAARA,GAAc,QAANc,EAARd,EAAUrH,YAAI,IAAAmI,GAAM,QAANC,EAAdD,EAAgBnI,YAAI,IAAAoI,OAAZ,EAARA,EAAsBO,cAC5BrJ,MAAe,OAAR+H,QAAQ,IAARA,GAAc,QAANgB,EAARhB,EAAUrH,YAAI,IAAAqI,GAAM,QAANC,EAAdD,EAAgBrI,YAAI,IAAAsI,OAAZ,EAARA,EAAsBM,eAC7B1E,QAAkB,OAARmD,QAAQ,IAARA,GAAc,QAANkB,EAARlB,EAAUrH,YAAI,IAAAuI,GAAM,QAANC,EAAdD,EAAgBvI,YAAI,IAAAwI,OAAZ,EAARA,EAAsBK,iBACjC9B,QAAiB,OAARM,QAAQ,IAARA,GAAc,QAANoB,EAARpB,EAAUrH,YAAI,IAAAyI,GAAM,QAANC,EAAdD,EAAgBzI,YAAI,IAAA0I,OAAZ,EAARA,EAAsBlB,iBACnC,GAED,CAAE,MAAOtI,GAET,GAKA4J,EAAe,GACf,IAIF,MAAMC,EAAmBC,EAAAA,GAAW,CAClC5J,KAAM4J,EAAAA,KAAaC,SAAS,8BAC5BlC,QAASiC,EAAAA,KAAaC,SAAS,mCAIjC,OACElI,EAAAA,EAAAA,KAACmI,EAAAA,EAAS,CAAClH,SAAS,KAAKL,MAAO,CAAEiE,UAAW,QAAS9E,UACpDC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvI,UACzBC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzI,UAChBJ,EAAAA,EAAAA,MAAC8I,EAAAA,EAAI,CAAC7H,MAAO,CAAE+D,QAAS,OAAQG,UAAW,gCAAiC/E,SAAA,EAC1EC,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CAACtD,QAAQ,KAAK8G,MAAM,SAASvD,cAAY,EAAApF,SAAC,wBAGrDC,EAAAA,EAAAA,KAAC2I,EAAAA,GAAM,CACLC,cAAe3F,EACf4F,oBAAkB,EAClBb,iBAAkBA,EAClBc,SAAU5C,MAAO6C,EAAMC,KAAyB,IAAvB,cAAEC,GAAeD,QAElC/C,EAAmB8C,GACzBE,GAAc,EAAM,EAEpBlJ,SAEDmJ,IAAA,IAAC,cAAEC,EAAa,QAAEC,EAAO,OAAEC,EAAM,OAAEN,EAAM,cAAEO,EAAa,aAAGC,GAAcL,EAAA,OACxEvJ,EAAAA,EAAAA,MAAC6J,EAAAA,GAAI,CAAAzJ,SAAA,EACHJ,EAAAA,EAAAA,MAACyI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvI,SAAA,EAEzBC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAEzI,UACfC,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRwF,MAAM,OACN7H,QAAQ,WACR8H,WAAS,EACTC,OAAO,YACHR,EAAc,QAClBhL,MAAOiL,EAAQ/K,MAAQuL,QAAQP,EAAOhL,MACtCwL,WAAYT,EAAQ/K,MAAQgL,EAAOhL,KAInCgG,GAAI,CACF,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,6BAKjDtE,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAEzI,UACfC,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRwF,MAAM,UACN7H,QAAQ,WACR8H,WAAS,EACTC,OAAO,YACHR,EAAc,WAClBhL,MAAOiL,EAAQpD,SAAW4D,QAAQP,EAAOrD,SACzC6D,WAAYT,EAAQpD,SAAWqD,EAAOrD,QAItC3B,GAAI,CACF,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,4BAQhDwF,OAAOC,KAAK9G,GAC9B+G,QAAQC,IAAW,CAAC,OAAQ,WAAWC,SAASD,KAChDE,KAAKF,IACJjK,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAEzI,UACfC,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACPwF,MAAOQ,EAAMG,OAAO,GAAGC,cAAgBJ,EAAMK,MAAM,MAChDnB,EAAcc,GAClB9L,MAAOiL,EAAQa,IAAUL,QAAQP,EAAOY,IACxCJ,WAAYT,EAAQa,IAAUZ,EAAOY,GACrCM,UAAQ,EACR3I,QAAQ,WACR8H,WAAS,EACTC,OAAO,SACPtF,GAAI,CACF,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,2BAb1B2F,SAsBTjK,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CACzBtD,QAAQ,UACR0D,MAAM,gBACNjB,GAAI,CAAEmG,WAAY,MAAO3F,UAAW,QAAS9E,SAC9C,gaAGeC,EAAAA,EAAAA,KAAC+E,EAAAA,EAAG,CACpBlE,QAAQ,OACR4J,cAAe,CAAEjC,GAAI,SAAUkC,GAAI,OACnCC,IAAK,EACLlF,eAAe,SACfmF,WAAW,SACXC,GAAI,EAAG9K,UAEPC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLrC,KAAK,SACLsC,QAAQ,WACR0D,MAAM,UACNiF,SAAUzE,GAA8ByD,EACxClF,GAAI,CACF7D,MAAO,CAAEgI,GAAI,OAAQkC,GAAI,SACzBpG,YAAa,qBACbgB,MAAO,sBACPvF,SAEDwJ,EAAe,eAAiB,yBAOd,YAMP,EAwjCVuB,EAAeC,IAA2B,IAA1B,gBAAEC,GAAkBD,EACtC,MAAO5H,EAAS8H,IAAc/P,EAAAA,EAAAA,UAAS,IAkBvC,OACI8E,EAAAA,EAAAA,KAACmI,EAAAA,EAAS,CAAClH,SAAU,KAAOL,MAAO,CAAEiE,UAAW,QAAS9E,UACrDC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvI,UAKvBC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzI,UACdJ,EAAAA,EAAAA,MAAC8I,EAAAA,EAAI,CAAC7H,MAAO,CAAE+D,QAAS,OAAQG,UAAW,gCAAiC/E,SAAA,EACxEC,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CAACtD,QAAQ,KAAK8G,MAAM,SAASvD,cAAY,EAAGd,GAAI,CAAEW,GAAI,EAAGC,GAAI,EAAGI,WAAY,MAAOjB,SAAU,OAAQkB,MAAM,sBAAuBvF,SAAC,2BAG9IC,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACNwF,MAAM,UACN7H,QAAQ,WACR8H,WAAS,EACT/F,MAAOR,EACP+H,SAAWC,IACT,MAAMxH,EAAQwH,EAAEC,OAAOzH,MACnB,YAAY0H,KAAK1H,IACjBsH,EAAWtH,EACf,EAEJ2H,WAAY,CACVC,UAAW,EACXC,QAAS,SACTC,UAAW,WAEX9B,OAAO,SACPzB,UAAQ,EACR7D,GAAI,CACF,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,2BAIjDtE,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,YAAY0D,MAAM,UAAUiF,SAA4B,IAAX,OAAPpH,QAAO,IAAPA,OAAO,EAAPA,EAASN,QAAcwB,GAAI,CACzEC,YAAa,qBACbO,UAAU,OACV/C,gBAAiB,qBACjBwD,MAAO,SACNoE,WAAS,EAAC7H,QA3DjBqE,UAAY,IAADwF,EAAAC,EAAAC,EAAAC,EAE/B,IAAIvF,QAAkBwF,EAAAA,EAAAA,KAAoB,CAAC3I,YAG7B,OAARmD,QAAQ,IAARA,GAAc,QAANoF,EAARpF,EAAUrH,YAAI,IAAAyM,GAAdA,EAAgBvN,OAAwC,OAAvB,OAARmI,QAAQ,IAARA,GAAc,QAANqF,EAARrF,EAAUrH,YAAI,IAAA0M,OAAN,EAARA,EAAgB9E,aAE3CmE,GAAgB,IAElBjE,EAAAA,EAAAA,GAAqB,OAART,QAAQ,IAARA,GAAc,QAANsF,EAARtF,EAAUrH,YAAI,IAAA2M,OAAN,EAARA,EAAgBzN,MAAgB,OAARmI,QAAQ,IAARA,GAAc,QAANuF,EAARvF,EAAUrH,YAAI,IAAA4M,OAAN,EAARA,EAAgB7E,QAAQ,EAkDFjH,SAAE,0BAWjD,EAMdgM,EAAcA,KAClB,MAAOC,EAAYC,IAAiB/Q,EAAAA,EAAAA,UAAS,CAAC,IACvCgR,EAAiBC,IAAsBjR,EAAAA,EAAAA,WAAS,IAChDkR,EAAaC,IAAiBnR,EAAAA,EAAAA,UAAS,kBACxCoR,GAAYC,EAAAA,EAAAA,OACXC,EAAYC,IAAgBvR,EAAAA,EAAAA,UAAS,CAAC,IACtCwR,EAAgBC,IAAoBzR,EAAAA,EAAAA,WAAS,IAC5C0R,EAAcC,IAAkB3R,EAAAA,EAAAA,WAAS,IAC1CiI,EAAU8H,IAAe/P,EAAAA,EAAAA,UAAS,KAEnC,iBAAEmH,GAAoBuB,KAerBkJ,EAAUC,IAAe7R,EAAAA,EAAAA,UAAS,CACvC,CACE8R,YAAa,GACbC,IAAK,GACLC,UAAW,GACXC,SAAU,GACVC,gBAAiB,GACjBC,QAAS,GACTC,QAAS,OAGNC,EAAeC,IAAoBtS,EAAAA,EAAAA,UAAS,CACjD,CACE8R,YAAa,GACbE,UAAW,GACXC,SAAU,GACVF,IAAI,OAGFQ,EAAgBC,IAAmBxS,EAAAA,EAAAA,UAAS,CAAC,GAG7CyS,EAAeA,CAAC1D,EAAOtG,KAKN,CAAC,iBAAkB,iBAAiB,gBAAgB,iBAAmB,kBAAoB,2BAC/FuG,SAASD,IAAoB,KAAVtG,IALhB,aAK6C0H,KAAK1H,KAGtE8I,GAAcmB,IAAI,IAAWA,EAAM,CAAC3D,GAAQtG,MAC5CsI,GAAe4B,IAAU,IAAWA,EAAY,CAAC5D,GAAQ,OAG5C,oBAAVA,GAAgD,IAAjBtG,EAAMd,QA/CfqD,WAAiB,IAAD4H,EACzC,IAAIC,QAAcC,EAAAA,EAAAA,KAAkB7K,IACX,KAAlB,OAAH4K,QAAG,IAAHA,GAAS,QAAND,EAAHC,EAAK9O,YAAI,IAAA6O,OAAN,EAAHA,EAAW3P,QAEbsO,GAAcmB,IAAI,IAAAK,EAAAC,EAAAC,EAAAC,EAAA,MAAI,IACjBR,EACHS,aAAuB,QAAXJ,EAAGF,EAAI9O,YAAI,IAAAgP,GAAM,QAANC,EAARD,EAAUhP,YAAI,IAAAiP,OAAN,EAARA,EAAgB3L,KAC/B+L,cAAmB,OAAHP,QAAG,IAAHA,GAAS,QAANI,EAAHJ,EAAK9O,YAAI,IAAAkP,GAAM,QAANC,EAATD,EAAWlP,YAAI,IAAAmP,OAAZ,EAAHA,EAAiB7P,MAClC,GACF,EAuCDgQ,CAAmB5K,GACrB,EAKM6K,EAA0BA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACpC,MAAM1F,EAAS,CAAC,EACV2F,EAAYC,GAAW,eAAe5D,KAAK4D,GAC3CC,EAAaC,GAAQ,UAAU9D,KAAK8D,GAMA,IAADC,EAAAC,EA+DrBC,EAAAC,EAAAC,EAAAC,EAAAC,IAnEP,OAATlD,QAAS,IAATA,IAAAA,EAAWmD,gBAAkBC,OAAOpD,EAAUmD,gBAAkB,KAElEtG,EAAOsG,eAAiB,uCAErBnD,EAAUmD,gBAAmB,OACO,MAA1B,OAATnD,QAAS,IAATA,GAAsB,QAAb4C,EAAT5C,EAAWqD,mBAAW,IAAAT,OAAb,EAATA,EAAwBU,QAC1BzG,EAAOwG,YAAc,yBACuB,MAA1B,OAATrD,QAAS,IAATA,GAAsB,QAAb6C,EAAT7C,EAAWqD,mBAAW,IAAAR,OAAb,EAATA,EAAwBxM,UACjCwG,EAAOwG,YAAc,oCAIG,QAAxBpB,EAACjC,EAAUuD,qBAAa,IAAAtB,GAAvBA,EAAyBqB,SAC5BzG,EAAO0G,cAAgB,2BAGE,QAAvBrB,EAAClC,EAAUwD,oBAAY,IAAAtB,GAAtBA,EAAwBoB,SAC3BzG,EAAO2G,aAAe,0BAGnBxD,EAAUyD,gBAAmBjB,EAASxC,EAAUyD,kBACnD5G,EAAO4G,eAAiB,wCAGW,QAAjCtB,EAACnC,EAAU0D,8BAAsB,IAAAvB,GAAhCA,EAAkCmB,SACrCzG,EAAO6G,uBAAyB,mCAED,QAA7BtB,EAACpC,EAAU2D,0BAAkB,IAAAvB,GAA5BA,EAA8BkB,SACjCzG,EAAO8G,mBAAqB,kCAGA,QAA1BtB,EAACrC,EAAU4D,uBAAe,IAAAvB,GAAzBA,EAA2BiB,SAC9BzG,EAAO+G,gBAAkB,gCAGtB5D,EAAU6D,iBAAoBnB,EAAU1C,EAAU6D,mBACrDhH,EAAOgH,gBAAkB,iCAGA,QAAvBvB,EAACtC,EAAU6B,oBAAY,IAAAS,GAAtBA,EAAwBgB,SAC3BzG,EAAOgF,aAAe,oBAGI,QAAxBU,EAACvC,EAAU8B,qBAAa,IAAAS,GAAvBA,EAAyBe,SAC5BzG,EAAOiF,cAAgB,qBAGvB9B,EAAU8D,iBACT,4DAA4DjF,KAAKmB,EAAU8D,kBAE5EjH,EAAOiH,eAAiB,8BAIxB9D,EAAU+D,0BACTvB,EAASxC,EAAU+D,2BAEpBlH,EAAOkH,wBAA0B,yCAIjC/D,EAAUgE,gBACT,6BAA6BnF,KAAKmB,EAAUgE,iBAE7CnH,EAAOmH,cAAgB,+BAGpB9D,KACEF,EAAUiE,eAAkBzB,EAASxC,EAAUiE,iBAClDpH,EAAOoH,cAAgB,wCAGW,QAAhCnB,EAAC9C,EAAUkE,6BAAqB,IAAApB,GAA/BA,EAAiCQ,SACpCzG,EAAOqH,sBAAwB,0BAED,QAA5BnB,EAAC/C,EAAUmE,yBAAiB,IAAApB,GAA3BA,EAA6BO,SAChCzG,EAAOsH,kBAAoB,yBAGA,QAAzBnB,EAAChD,EAAUoE,sBAAc,IAAApB,GAAxBA,EAA0BM,SAC7BzG,EAAOuH,eAAiB,+BAGrBpE,EAAUqE,gBAAmB3B,EAAU1C,EAAUqE,kBACpDxH,EAAOwH,eAAiB,yCAGA,QAAtBpB,EAACjD,EAAUsE,mBAAW,IAAArB,GAArBA,EAAuBK,SAC1BzG,EAAOyH,YAAc,4BAGI,QAAvBpB,EAAClD,EAAUuE,oBAAY,IAAArB,GAAtBA,EAAwBI,SAC3BzG,EAAO0H,aAAe,6BAItBvE,EAAUwE,eACT,6BAA6B3F,KAAKmB,EAAUwE,gBAE7C3H,EAAO2H,aAAe,gCAM1B,OAHA5S,QAAQ6S,IAAI5H,EAAS,UAErB4C,EAAc5C,GACwB,IAA/BS,OAAOC,KAAKV,GAAQxG,MAAY,GAGzCzG,EAAAA,EAAAA,YAAU,KACJsQ,GACFD,GAAcmB,IAAI,IACbA,EACH8C,sBAAuB9C,EAAKsC,uBAC5BS,kBAAkB/C,EAAKuC,mBACvBM,cAAe7C,EAAKqC,eACpBW,eAAgBhD,EAAKwC,gBACrBS,eAAgBjD,EAAKyC,gBACrBS,YAAalD,EAAKS,aAClB0C,aAAcnD,EAAKU,cACnB4C,gBAAiBtD,EAAKuD,iBACtBH,aAAcpD,EAAK4C,iBAEvB,GACC,CAAC9D,EAAiBF,IAGrB,MAAM4E,EAAsBA,CAACC,EAAOpH,EAAOtG,KACzC,MAAM2N,EAAkB,IAAIxE,GAC5BwE,EAAgBD,GAAOpH,GAAStG,EAChCoJ,EAAYuE,GACZC,EAAqBF,EAAOpH,EAAOtG,EAAM,EAkCrC4N,EAAuB,WAA+C,IAA9CF,EAAKG,UAAA3O,OAAA,QAAA4O,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAMvH,EAAKuH,UAAA3O,OAAA,QAAA4O,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAM7N,EAAK6N,UAAA3O,OAAA,QAAA4O,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAChE,MAAME,EAAY,IAAInE,GAEhBoE,EAAiBA,CAACC,EAAGC,EAAGC,KAC5B,IAAIC,EAAW,GAGf,OAAQF,GACN,IAAK,cACG,OAADC,QAAC,IAADA,GAAAA,EAAGhC,SAAQiC,EAAW,6BAC3B,MACA,IAAK,MACG,OAADD,QAAC,IAADA,GAAAA,EAAGhC,SAAQiC,EAAW,4BAC3B,MACJ,IAAK,aACED,GAAKE,MAAMF,GACdC,EAAW,wBACFnC,OAAOkC,GAAK,IACrBC,EAAW,qCAEb,MACF,IAAK,YACED,GAAKE,MAAMF,GACdC,EAAW,wBACFnC,OAAOkC,GAAK,IACrBC,EAAW,gCAEb,MACF,QACEA,EAAW,GAGVL,EAAUE,KAAIF,EAAUE,GAAK,CAAC,GACnCF,EAAUE,GAAGC,GAAKE,CAAQ,EAkB5B,OAfc,OAAVV,GAA4B,OAAVpH,EAEpB0H,EAAeN,EAAOpH,EAAOtG,GAG7BmJ,EAASpO,SAAQ,CAACuT,EAASL,KACzBD,EAAeC,EAAG,MAAOK,EAAQhF,KACjC0E,EAAeC,EAAG,cAAeK,EAAQjF,aACzC2E,EAAeC,EAAG,YAAaK,EAAQ/E,WACvCyE,EAAeC,EAAG,WAAYK,EAAQ9E,SAAS,IAInDK,EAAiBkE,GAEVA,EAAUQ,OAAMC,GAAUrI,OAAOf,OAAOoJ,GAAQD,OAAM/G,IAAMA,KACrE,GA0COiH,EAAaC,IAAkBnX,EAAAA,EAAAA,UAAS,CAC7CoX,WAAY,GACZzP,OAAQ,GACR0P,QAAS,GACT9R,OAAQ,GACR+R,iBAAkB,OAGbC,EAAmBC,IAAwBxX,EAAAA,EAAAA,UAAS,CAAC,GAEtDyX,EAAoBA,CAAC1I,EAAOtG,KAC5BqO,MAAMrO,IAAUiM,OAAOjM,GAAS,IACpC0O,GAAgBzE,IAAI,IAAWA,EAAM,CAAC3D,GAAQtG,MAC9C+O,GAAsB9E,IAAI,IAAWA,EAAM,CAAC3D,GAAQ,OAAM,EAEtD2I,EAA4BA,KAAO,IAADC,EAAAC,EACtC,MAAMpB,EAAY,CAAC,EAYnB,OAXgB,OAAXU,QAAW,IAAXA,IAAAA,EAAaE,YAAc1C,OAAkB,OAAXwC,QAAW,IAAXA,OAAW,EAAXA,EAAaE,aAAe,KACjEZ,EAAUY,WAAa,mCAEM,QAA/BO,EAAA,CAAC,SAAU,UAAW,iBAAS,IAAAA,GAA/BA,EAAiCnU,SAASqU,MACnCX,EAAYW,IAAQnD,OAAOwC,EAAYW,KAAS,MACnDrB,EAAUqB,GAAI,GAAAxR,OAAMwR,EAAI3I,OAAO,GAAGC,cAAgB0I,EAAIzI,MAAM,GAAE,gCAChE,IAGFoI,EAAqBhB,GAEqB,KAAb,QAAtBoB,EAAAhJ,OAAOC,KAAK2H,UAAU,IAAAoB,OAAA,EAAtBA,EAAwBjQ,OAAY,GAG7CzG,EAAAA,EAAAA,YAAU,KACR,MAAM,WAAEkW,EAAU,OAAEzP,EAAM,QAAE0P,EAAO,OAAE9R,GAAW2R,EAG9CxC,OAAO0C,GAAc,GACrB1C,OAAO/M,GAAU,IACjB+M,OAAO2C,GAAW,IAClB3C,OAAOnP,GAAU,GAEjBuS,IAEAX,GAAgBzE,IAAI,IACfA,EACH4E,iBAAkB,OAEtB,GACC,CAACJ,EAAYE,WAAYF,EAAYvP,OAAQuP,EAAYG,QAASH,EAAY3R,SAEjF,MAAMuS,EAA4B9M,UAChC,IAAK0M,IAA6B,OAGlC,MAAM,OAAE/P,EAAM,QAAE0P,EAAO,OAAE9R,GAAW2R,EAC9Ba,GAAcpQ,EAAS0P,EAAU9R,EAAU,KAAMyS,QAAQ,GAE/Db,GAAgBzE,IAAI,IACfA,EACH4E,iBAAkBS,KACjB,EAGAE,IAAYC,EAAAA,EAAAA,UAAQ,IAAa,OAARtG,QAAQ,IAARA,OAAQ,EAARA,EAAUuG,QAAO,CAACC,EAAMC,IAAQD,IAAU,OAAHC,QAAG,IAAHA,OAAG,EAAHA,EAAKrG,YAAa,IAAQ,OAAHqG,QAAG,IAAHA,OAAG,EAAHA,EAAKpG,WAAY,GAAK,IAAK,CAACL,IAEnH0G,IAAuB5D,OAAmB,OAAZnC,QAAY,IAAZA,OAAY,EAAZA,EAAchL,kBAAoB,IAAOmN,OAAmB,OAAZnC,QAAY,IAAZA,OAAY,EAAZA,EAAcgG,WAAa,IAAM7D,OAAmB,OAAZnC,QAAY,IAAZA,OAAY,EAAZA,EAAciG,qBAAuB,GA+B5JC,GAAkBA,CAAC1J,EAAOtG,KAIT,CAAC,WACLuG,SAASD,IAAoB,KAAVtG,IAJhB,aAI6C0H,KAAK1H,KAGtEsH,EAAWtH,GAIG,YAAVsG,IACEtG,EAAMd,OAAS,GACjBgK,GAAe,GAEI,IAAjBlJ,EAAMd,QA1CYqD,WACxB,IAAI0N,EAAO,CACTC,gBAAkC,OAAhBxR,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBc,QACpC2Q,kBAAoB3Q,EACpBC,OAAO,GACP2Q,KAAK,GAEP,IAAK,IAADC,EAAAC,EAAAC,EAAAC,EACF,IAAI7N,QAAkB8N,EAAAA,EAAAA,KAA8BR,GACxC,OAARtN,QAAQ,IAARA,GAAc,QAAN0N,EAAR1N,EAAUrH,YAAI,IAAA+U,GAAdA,EAAgB7V,OAAwC,OAAvB,OAARmI,QAAQ,IAARA,GAAc,QAAN2N,EAAR3N,EAAUrH,YAAI,IAAAgV,OAAN,EAARA,EAAgBpN,YAM3CgG,GAAe,GAJfA,GAAe,IAOjB9F,EAAAA,EAAAA,GAAqB,OAART,QAAQ,IAARA,GAAc,QAAN4N,EAAR5N,EAAUrH,YAAI,IAAAiV,OAAN,EAARA,EAAgB/V,MAAgB,OAARmI,QAAQ,IAARA,GAAc,QAAN6N,EAAR7N,EAAUrH,YAAI,IAAAkV,OAAN,EAARA,EAAgBnN,QAEvD,CAAE,MAAOqN,GACPxH,GAAe,EAEjB,GAoBIyH,CAAiB3Q,IAErB,EAII4Q,GAAkBrO,UAEtBiG,GAAkB,GAClB,MAAMqI,EAAe,CACnBC,gBAAiC,OAAhBpS,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBqS,eACnC3E,cAAwB,OAATvD,QAAS,IAATA,OAAS,EAATA,EAAWuD,cAC1BC,aAAuB,OAATxD,QAAS,IAATA,OAAS,EAATA,EAAWwD,aACzBU,sBAAgC,OAATlE,QAAS,IAATA,OAAS,EAATA,EAAWkE,sBAClCC,kBAA4B,OAATnE,QAAS,IAATA,OAAS,EAATA,EAAWmE,kBAC9BgE,gBAA0B,OAATnI,QAAS,IAATA,OAAS,EAATA,EAAWoE,eAC5BgE,aAAuB,OAATpI,QAAS,IAATA,OAAS,EAATA,EAAWsE,YACzB+D,gBAA0B,OAATrI,QAAS,IAATA,OAAS,EAATA,EAAWqE,eAC5BiE,cAAwB,OAATtI,QAAS,IAATA,OAAS,EAATA,EAAWuE,aAC1BgE,gBAAiB,QACjBC,cAAwB,OAATxI,QAAS,IAATA,OAAS,EAATA,EAAWwE,aAC1BiE,cAAwB,OAATzI,QAAS,IAATA,OAAS,EAATA,EAAWiE,cAC1ByE,wBAAkC,OAAT1I,QAAS,IAATA,OAAS,EAATA,EAAW+D,wBACpC4E,oBAAqBzI,EACrBwD,uBAAiC,OAAT1D,QAAS,IAATA,OAAS,EAATA,EAAW0D,uBACnCC,mBAA6B,OAAT3D,QAAS,IAATA,OAAS,EAATA,EAAW2D,mBAC/BiF,iBAA2B,OAAT5I,QAAS,IAATA,OAAS,EAATA,EAAW4D,gBAC7BiF,cAAwB,OAAT7I,QAAS,IAATA,OAAS,EAATA,EAAW6B,aAC1BiH,iBAA2B,OAAT9I,QAAS,IAATA,OAAS,EAATA,EAAW6D,gBAC7BkF,eAAyB,OAAT/I,QAAS,IAATA,OAAS,EAATA,EAAW8B,cAC3BkH,iBAAkB,QAClBC,eAAyB,OAATjJ,QAAS,IAATA,OAAS,EAATA,EAAWgE,cAC3BkF,eAAyB,OAATlJ,QAAS,IAATA,OAAS,EAATA,EAAWyD,eAC3B0F,YAAc7I,EAAS3C,KAAK5B,IAAI,CAC3BlK,KAAY,OAAJkK,QAAI,IAAJA,OAAI,EAAJA,EAAMyE,YACdC,KAAU,OAAJ1E,QAAI,IAAJA,OAAI,EAAJA,EAAM0E,MAAO,GACnB2I,MAAW,OAAJrN,QAAI,IAAJA,OAAI,EAAJA,EAAM4E,SACb0I,cAAmB,OAAJtN,QAAI,IAAJA,OAAI,EAAJA,EAAM2E,UACrB4I,UAAe,OAAJvN,QAAI,IAAJA,OAAI,EAAJA,EAAM6E,kBAAmB,EACpC2I,KAAU,OAAJxN,QAAI,IAAJA,OAAI,EAAJA,EAAM8E,UAAW,EACvB2I,KAAU,OAAJzN,QAAI,IAAJA,OAAI,EAAJA,EAAM+E,UAAW,OAI5B2I,eAAgB,UAChBC,kBAA8B,OAAZzI,QAAY,IAAZA,OAAY,EAAZA,EAAchL,kBAAmB,EACnD0T,kBAA8B,OAAZ1I,QAAY,IAAZA,OAAY,EAAZA,EAAcgG,WAAY,EAC5C2C,qBAAiC,OAAZ3I,QAAY,IAAZA,OAAY,EAAZA,EAAciG,qBAAsB,EACzD2C,gBAA4B,OAAZ5I,QAAY,IAAZA,OAAY,EAAZA,EAAc6I,gBAAiB,EAC/CC,UAAWpD,GACXtQ,OAAmB,OAAXuP,QAAW,IAAXA,OAAW,EAAXA,EAAavP,OACrB0P,QAAoB,OAAXH,QAAW,IAAXA,OAAW,EAAXA,EAAaG,QACtB9R,OAAmB,OAAX2R,QAAW,IAAXA,OAAW,EAAXA,EAAa3R,OACrB2C,OAAmB,OAAXgP,QAAW,IAAXA,OAAW,EAAXA,EAAaE,WACrBzC,YAAsB,OAATrD,QAAS,IAATA,OAAS,EAATA,EAAWqD,YACxBS,eAAyB,OAAT9D,QAAS,IAATA,OAAS,EAATA,EAAW8D,eAC3BX,eAAyB,OAATnD,QAAS,IAATA,OAAS,EAATA,EAAWnJ,aAC3BmT,WAAYpK,GAGX,IAAK,IAADqK,EAAAC,EACD,IAAI3I,QAAc4I,EAAAA,EAAAA,KAAsBnC,GAGtC,OADAzN,EAAAA,EAAAA,GAAgB,OAAHgH,QAAG,IAAHA,GAAS,QAAN0I,EAAH1I,EAAK9O,YAAI,IAAAwX,OAAN,EAAHA,EAAWtY,MAAW,OAAH4P,QAAG,IAAHA,GAAS,QAAN2I,EAAH3I,EAAK9O,YAAI,IAAAyX,OAAN,EAAHA,EAAW1P,SACpC+G,CACZ,CAAE,MAAO5P,GAET,CAAC,QACAgO,GAAkB,EACnB,GAkDH,OACExM,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EAGJC,EAAAA,EAAAA,KAACuE,EAAc,CAACE,MAAO,+BAA+B1E,UAIhDJ,EAAAA,EAAAA,MAACyI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvI,SAAA,EACzBC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAG7J,QAAS,OAAOd,UACxCC,EAAAA,EAAAA,KAAC8D,EAAe,CAAC4F,WAAS,EAACD,MAAM,sBAAsB9F,MAAuB,OAAhBtB,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBc,QAASoH,UAAQ,EAACrC,UAAQ,EAACnE,MAAM,OAEnH/D,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACvBC,EAAAA,EAAAA,KAAC8D,EAAe,CAAC4F,WAAS,EAACD,MAAM,uBAC/B9F,MAAOR,EACP+H,SAAWC,GAAMwI,GAAgB,UAAWxI,EAAEC,OAAOzH,OAGrD2H,WAAY,CACVC,UAAU,GAEZrD,UAAQ,YAKhBvI,EAAAA,EAAAA,MAAC4E,EAAc,CAACE,MAAO,6BAA6B1E,SAAA,EACtDJ,EAAAA,EAAAA,MAACyI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvI,SAAA,EAC3BC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC5BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,cACNvB,UAAQ,EACRvE,MAAO6I,EAAUuD,cACjB7E,SAAWC,GAAMwC,EAAa,gBAAiBxC,EAAEC,OAAOzH,OAExDxF,QAAS6N,EAAW+D,cACpBlG,WAAYmC,EAAW+D,mBAG3B/P,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,aACNvB,UAAQ,EACRvE,MAAO6I,EAAUwD,aACjB9E,SAAWC,GAAMwC,EAAa,eAAgBxC,EAAEC,OAAOzH,OAEvDxF,QAAS6N,EAAWgE,aACpBnG,WAAYmC,EAAWgE,kBAG3BhQ,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,gBACNvB,UAAQ,EACRvE,MAAO6I,EAAUyD,eACjB/E,SAAWC,GAAMwC,EAAa,iBAAkBxC,EAAEC,OAAOzH,OACzD2H,WAAY,CAAEC,UAAW,MACzBpN,QAAS6N,EAAWiE,eACpBpG,WAAYmC,EAAWiE,oBAG3BjQ,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,sBACNvB,UAAQ,EACRvE,MAAO6I,EAAU0D,uBACjBhF,SAAWC,GAAMwC,EAAa,yBAA0BxC,EAAEC,OAAOzH,OACjExF,QAAS6N,EAAWkE,uBACpBrG,WAAYmC,EAAWkE,4BAG3BlQ,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,qBACNvB,UAAQ,EACRvE,MAAO6I,EAAU2D,mBACjBjF,SAAWC,GAAMwC,EAAa,qBAAsBxC,EAAEC,OAAOzH,OAC7DxF,QAAS6N,EAAWmE,mBACpBtG,WAAYmC,EAAWmE,wBAG3BnQ,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAGhW,QAAS,OAAOd,UAC/CC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,iBAEN9F,MAAO6I,EAAU8D,eACjBpF,SAAWC,GAAMwC,EAAa,iBAAkBxC,EAAEC,OAAOzH,OACzDxF,QAAS6N,EAAWsE,eACpBzG,WAAYmC,EAAWsE,oBAK3BtQ,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzI,UAChBC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,mBACNvB,UAAQ,EACRvE,MAAO6I,EAAU4D,gBACjBlF,SAAWC,GAAMwC,EAAa,kBAAmBxC,EAAEC,OAAOzH,OAC1DxF,QAAS6N,EAAWoE,gBACpBvG,WAAYmC,EAAWoE,qBAG3BpQ,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,sBACN9F,MAAO6I,EAAU2E,iBACjBjG,SAAWC,GAAMwC,EAAa,mBAAoBxC,EAAEC,OAAOzH,YAG/D3D,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,UACNvB,UAAQ,EACRvE,MAAO6I,EAAU6D,gBACjBnF,SAAWC,GAAMwC,EAAa,kBAAmBxC,EAAEC,OAAOzH,OAC1D2H,WAAY,CAAEC,UAAW,KACzBpN,QAAS6N,EAAWqE,gBACpBxG,WAAYmC,EAAWqE,qBAG3BrQ,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,OACNvB,UAAQ,EACRvE,MAAO6I,EAAU6B,aACjBnD,SAAWC,GAAMwC,EAAa,eAAgBxC,EAAEC,OAAOzH,OACvDxF,QAAS6N,EAAWqC,aACpBxE,WAAYmC,EAAWqC,kBAG3BrO,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,QACNvB,UAAQ,EACRvE,MAAO6I,EAAU8B,cACjBpD,SAAWC,GAAMwC,EAAa,gBAAiBxC,EAAEC,OAAOzH,OACxDxF,QAAS6N,EAAWsC,cACpBzE,WAAYmC,EAAWsC,mBAG3BtO,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,qCACN9F,MAAO6I,EAAU+D,wBACjBrF,SAAWC,GAAMwC,EAAa,0BAA2BxC,EAAEC,OAAOzH,OAClE2H,WAAY,CAAEC,UAAW,WAG7BvL,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,sBACN9F,MAAO6I,EAAUgE,cACjBtF,SAAWC,GAAMwC,EAAa,gBAAiBxC,EAAEC,OAAOzH,eAK9D3D,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvI,UAG7BC,EAAAA,EAAAA,KAAC+E,EAAAA,EAAG,CAAC8F,GAAI,EAAGiM,GAAI,EAAE/W,UAChBC,EAAAA,EAAAA,KAAC+W,EAAAA,EAAgB,CACfC,SACEhX,EAAAA,EAAAA,KAACiX,EAAAA,EAAQ,CACPC,QAASxK,EACTxB,SAAWC,GAAOwB,EAAiBxB,EAAEC,OAAO8L,WAGhDzN,MAAM,sDAMLiD,IAEK/M,EAAAA,EAAAA,MAACyI,EAAAA,GAAI,CAACC,WAAS,EAACwC,GAAI,EAAGvC,QAAS,EAAEvI,SAAA,EAChCC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,wBACNvB,UAAQ,EACRvE,MAAO6I,EAAUiE,eAAiB,GAClCnF,WAAY,CAAEC,UAAW,MACzBpN,QAAS6N,EAAWyE,cACpB5G,WAAYmC,EAAWyE,cACvBvF,SAAWC,GAAMwC,EAAa,gBAAiBxC,EAAEC,OAAOzH,YAI5D3D,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UACtCC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,aACNvB,UAAQ,EACRvE,MAAO6I,EAAUkE,uBAAyB,GAC1CxF,SAAWC,GAAMwC,EAAa,wBAAyBxC,EAAEC,OAAOzH,OAChExF,QAAS6N,EAAW0E,sBACpB7G,WAAYmC,EAAW0E,2BAG3B1Q,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,YACNvB,UAAQ,EACRvE,MAAO6I,EAAUmE,mBAAqB,GACtCzF,SAAWC,GAAMwC,EAAa,oBAAqBxC,EAAEC,OAAOzH,OAC5DxF,QAAS6N,EAAW2E,kBACpB9G,WAAYmC,EAAW2E,uBAGnB3Q,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzI,UAChBC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,kBACNvB,UAAQ,EACRvE,MAAO6I,EAAUoE,gBAAkB,GACnCzS,QAAS6N,EAAW4E,eACpB/G,WAAYmC,EAAW4E,eACvB1F,SAAWC,GAAMwC,EAAa,iBAAkBxC,EAAEC,OAAOzH,YAG7D3D,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,8BACN9F,MAAO6I,EAAU0E,iBAAmB,GACpChG,SAAWC,GAAMwC,EAAa,kBAAmBxC,EAAEC,OAAOzH,YAG9D3D,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,kBACNvB,UAAQ,EAERoD,WAAY,CAAEC,UAAW,KACzB5H,MAAO6I,EAAUqE,gBAAkB,GACnC1S,QAAS6N,EAAW6E,eACpBhH,WAAYmC,EAAW6E,eACvB3F,SAAWC,GAAMwC,EAAa,iBAAkBxC,EAAEC,OAAOzH,YAG7D3D,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,eACNvB,UAAQ,EACRvE,MAAO6I,EAAUsE,aAAe,GAChC3S,QAAS6N,EAAW8E,YACpBjH,WAAYmC,EAAW8E,YACvB5F,SAAWC,GAAMwC,EAAa,cAAexC,EAAEC,OAAOzH,YAG1D3D,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,gBACNvB,UAAQ,EACRvE,MAAO6I,EAAUuE,cAAgB,GACjC5S,QAAS6N,EAAW+E,aACpBlH,WAAYmC,EAAW+E,aACvB7F,SAAWC,GAAMwC,EAAa,eAAgBxC,EAAEC,OAAOzH,YAG3D3D,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,EAAE9W,UAC9BC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,2BACN9F,MAAO6I,EAAUwE,cAAgB,GACjC9F,SAAWC,GAAMwC,EAAa,eAAgBxC,EAAEC,OAAOzH,kBAavEhE,EAAAA,EAAAA,MAAC4E,EAAc,CAACE,MAAM,kBAAiB1E,SAAA,CACpC+M,EAAS3C,KAAI,CAAC8H,EAASZ,KAAK,IAAA8F,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC3B1X,EAAAA,EAAAA,KAAC+E,EAAAA,EAAG,CAAa4S,GAAI,EAAE5X,UAKrBJ,EAAAA,EAAAA,MAACyI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvI,SAAA,EAEzBC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,IAAI9W,UAChCC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,eACNvB,UAAQ,EACRvE,MAAOsO,EAAQjF,YACf9B,SAAWC,GACTiG,EAAoBC,EAAO,cAAelG,EAAEC,OAAOzH,OAErDxF,MAAOyL,QAA4B,QAArBuN,EAAC5J,EAAc8D,UAAM,IAAA8F,OAAA,EAApBA,EAAsBnK,aACrCnD,WAAgC,QAAtBuN,EAAE7J,EAAc8D,UAAM,IAAA+F,OAAA,EAApBA,EAAsBpK,iBAGtChN,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,IAAI9W,UAChCC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,cACNvB,UAAQ,EACRvE,MAAOsO,EAAQhF,IACf/B,SAAWC,GACTiG,EAAoBC,EAAO,MAAOlG,EAAEC,OAAOzH,OAE7CxF,MAAOyL,QAA4B,QAArByN,EAAC9J,EAAc8D,UAAM,IAAAgG,OAAA,EAApBA,EAAsBpK,KACrCpD,WAAgC,QAAtByN,EAAE/J,EAAc8D,UAAM,IAAAiG,OAAA,EAApBA,EAAsBrK,SAGtCjN,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,IAAI9W,UAChCC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,gBACNvB,UAAQ,EACR5I,KAAK,SACLqE,MAAOsO,EAAQ/E,UACfhC,SAAWC,GACTiG,EAAoBC,EAAO,YAAalG,EAAEC,OAAOzH,OAEnDxF,MAAOyL,QAA4B,QAArB2N,EAAChK,EAAc8D,UAAM,IAAAkG,OAAA,EAApBA,EAAsBrK,WACrCrD,WAAgC,QAAtB2N,EAAEjK,EAAc8D,UAAM,IAAAmG,OAAA,EAApBA,EAAsBtK,eAGtClN,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,IAAI9W,UAChCC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,WACNvB,UAAQ,EACR5I,KAAK,SACLqE,MAAOsO,EAAQ9E,SACfjC,SAAWC,GACTiG,EAAoBC,EAAO,WAAYlG,EAAEC,OAAOzH,OAElDxF,MAAOyL,QAA4B,QAArB6N,EAAClK,EAAc8D,UAAM,IAAAoG,OAAA,EAApBA,EAAsBtK,UACrCtD,WAAgC,QAAtB6N,EAAEnK,EAAc8D,UAAM,IAAAqG,OAAA,EAApBA,EAAsBvK,cAGtCnN,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,IAAKhW,QAAS,OAAOd,UACjDC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,uBACNnK,KAAK,SACLqE,MAAOsO,EAAQ7E,gBACflC,SAAWC,GACTiG,EAAoBC,EAAO,kBAAmBlG,EAAEC,OAAOzH,YAI7D3D,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,IAAKhW,QAAS,OAAOd,UACjDC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,eACNnK,KAAK,SACLqE,MAAOsO,EAAQ5E,QACfnC,SAAWC,GACTiG,EAAoBC,EAAO,UAAWlG,EAAEC,OAAOzH,YAMrD3D,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,IAAKhW,QAAS,OAAOd,UACjDC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,WACN9F,MAAOsO,EAAQ3E,QACfpC,SAAWC,GACTiG,EAAoBC,EAAO,UAAWlG,EAAEC,OAAOzH,YAKrD3D,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,IAAKhW,QAAQ,OAAO+J,WAAW,SAAQ7K,SACxD,IAAVsR,IACCrR,EAAAA,EAAAA,KAAC4X,EAAAA,EAAU,CACT/V,QAASA,IAvoBQwP,KAC3B,MAAMC,EAAkB,IAAIxE,GACtB+K,EAAgB,IAAItK,GAC1B+D,EAAgBwG,OAAOzG,EAAO,GAC9BwG,EAAcC,OAAOzG,EAAO,GAC5BtE,EAAYuE,GACZ9D,EAAiBqK,EAAc,EAioBNE,CAAoB1G,GACnC/L,MAAM,QAAOvF,UAEbC,EAAAA,EAAAA,KAACgY,EAAAA,EAAU,YAtGX3G,EA2GJ,KAIRrR,EAAAA,EAAAA,KAAC+E,EAAAA,EAAG,CAAC8F,GAAI,EAAGhK,QAAQ,OAAO4E,eAAe,WAAU1F,UAClDC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,WAAWC,QA1qBJoW,KACvBlL,EAAY,IACPD,EACH,CACEE,YAAa,GACbE,UAAW,GACXC,SAAU,GACVC,gBAAiB,GACjBC,QAAS,GACTC,QAAS,MAGbE,EAAiB,IACZD,EACH,CACEP,YAAa,GACbE,UAAW,GACXC,SAAU,KAEZ,EAupBmDpN,SAAC,0BA2D1DC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGuC,GAAI,EAAGqN,EAAG,EAAEnY,UAClCC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAAEG,MAAI,EAACC,GAAI,GAAIoO,GAAI,EAAGC,GAAI,GAAG9W,UAMnCC,EAAAA,EAAAA,KAACuF,EAAc,CAACd,MAAO,sBAAuBd,MAAK,UAAApC,OAAO4R,GAAWK,IAAqB5D,OAAmB,OAAZnC,QAAY,IAAZA,OAAY,EAAZA,EAAc6I,gBAAkB,cAOtItW,EAAAA,EAAAA,KAACuE,EAAc,CAACE,MAAO,kBAAkB1E,UACzCJ,EAAAA,EAAAA,MAACyI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvI,SAAA,EACnBC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAGkM,GAAI,IAAI7W,UAChCC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,mBACN9F,MAAOyO,EAAYE,WACnBpH,SAAWC,GAAMwH,EAAkB,aAAcxH,EAAEC,OAAOzH,OAC1DxF,QAASsU,EAAkBH,WAC3BzI,WAAY4I,EAAkBH,gBAGlCtS,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAGkM,GAAI,IAAI7W,UAChCC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,cACN9F,MAAOyO,EAAYvP,OACnBqI,SAAWC,GAAMwH,EAAkB,SAAUxH,EAAEC,OAAOzH,OACtDxF,QAASsU,EAAkB5P,OAC3BgH,WAAY4I,EAAkB5P,YAGlC7C,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAGkM,GAAI,IAAI7W,UAChCC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,eACN9F,MAAOyO,EAAYG,QACnBrH,SAAWC,GAAMwH,EAAkB,UAAWxH,EAAEC,OAAOzH,OACvDxF,QAASsU,EAAkBF,QAC3B1I,WAAY4I,EAAkBF,aAGlCvS,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAGkM,GAAI,IAAI7W,UAChCC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,cACN9F,MAAOyO,EAAY3R,OACnByK,SAAWC,GAAMwH,EAAkB,SAAUxH,EAAEC,OAAOzH,OACtDxF,QAASsU,EAAkBhS,OAC3BoJ,WAAY4I,EAAkBhS,YAGlCT,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAGkM,GAAI,IAAI7W,UAChCC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,yBACN9F,MAAOyO,EAAYI,iBACnB2F,WAAY,CAAEC,UAAU,QAS9BpY,EAAAA,EAAAA,KAAC+E,EAAAA,EAAG,CAACV,GAAI,CAAC6T,EAAE,GAAGnY,UACfJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAU,CACbtD,QAAQ,KACRuD,cAAY,EACZd,GAAI,CACFe,cAAe,EACfC,WAAY,MACZjB,SAAU,OACVkB,MAAO,sBACPvF,SAAA,CACH,sBACsB6P,OAAOwC,EAAYI,kBAAoB5C,OAAkB,OAAXwC,QAAW,IAAXA,OAAW,EAAXA,EAAaE,YAAcF,EAAYI,iBAA6B,OAAXJ,QAAW,IAAXA,OAAW,EAAXA,EAAaE,sBAM7I3S,EAAAA,EAAAA,MAAC4E,EAAc,CAAAxE,SAAA,EACfJ,EAAAA,EAAAA,MAACoF,EAAAA,EAAG,CAAC8F,GAAI,EAAE9K,SAAA,EACHC,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CACTtD,QAAQ,KACRuD,cAAY,EACZd,GAAI,CACFe,cAAe,EACfC,WAAY,MACZjB,SAAU,OACVkB,MAAO,sBACPvF,SACH,4BAGDJ,EAAAA,EAAAA,MAACyI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvI,SAAA,EACzBC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACvBJ,EAAAA,EAAAA,MAAC0Y,EAAAA,EAAW,CAAC3O,WAAS,EAACxK,KAAK,QAAOa,SAAA,EACjCC,EAAAA,EAAAA,KAACsY,EAAAA,EAAU,CAACjU,GAAI,CAAED,SAAU,QAASrE,SAAE,kBACvCJ,EAAAA,EAAAA,MAAC4Y,EAAAA,EAAM,CAAC9O,MAAM,eAAiBpF,GAAI,CAC3CD,SAAU,OACV,qCAAsC,CACpCE,YAAa,QAEf,2CAA4C,CAC1CA,YAAa,sBAEf,iDAAkD,CAChDA,YAAa,uBAEZX,MAAM,UAAU4G,UAAQ,EAAAxK,SAAA,EACjBC,EAAAA,EAAAA,KAACwY,EAAAA,EAAQ,CAAC7U,MAAM,UAAS5D,SAAC,aAC1BC,EAAAA,EAAAA,KAACwY,EAAAA,EAAQ,CAAC7U,MAAM,MAAK5D,SAAC,8BAK5BC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACvBJ,EAAAA,EAAAA,MAAC0Y,EAAAA,EAAW,CAAC3O,WAAS,EAACxK,KAAK,QAAOa,SAAA,EACjCC,EAAAA,EAAAA,KAACsY,EAAAA,EAAU,CAACjU,GAAI,CAAED,SAAU,QAASrE,SAAE,gBACvCJ,EAAAA,EAAAA,MAAC4Y,EAAAA,EAAM,CAAC9O,MAAM,aAAepF,GAAI,CACzCD,SAAU,OACV,qCAAsC,CACpCE,YAAa,QAEf,2CAA4C,CAC1CA,YAAa,sBAEf,iDAAkD,CAChDA,YAAa,uBAEZX,MAAOyI,EAAWlB,SAAWC,GAAKkB,EAAalB,EAAEC,OAAOzH,OAAO5D,SAAA,EACxDC,EAAAA,EAAAA,KAACwY,EAAAA,EAAQ,CAAC7U,MAAM,aAAY5D,SAAC,gBAC7BC,EAAAA,EAAAA,KAACwY,EAAAA,EAAQ,CAAC7U,MAAM,iBAAgB5D,SAAC,4BAKvCC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACvBC,EAAAA,EAAAA,KAAC8D,EAAe,CACd4F,WAAS,EACTD,MAAM,gBACN9F,MAAO6I,EAAUmD,gBAAkB,GACnCzE,SAAWC,GAAMwC,EAAa,iBAAkBxC,EAAEC,OAAOzH,OACzDxF,QAAS6N,EAAW2D,eACpB9F,WAAYmC,EAAW2D,eACvBrE,WAAY,CACVC,UAAU,GAEZrD,UAAQ,aAKhBlI,EAAAA,EAAAA,KAAC+E,EAAAA,EAAG,CAAC8F,GAAI,EAAE9K,UACTC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGsC,WAAW,SAAQ7K,UAYnC,OAATyM,QAAS,IAATA,OAAS,EAATA,EAAWmD,iBAAkB,MAC9B3P,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACvBC,EAAAA,EAAAA,KAAC8D,EAAe,CAAC4F,WAAS,EAACD,MAAM,cAC/B9F,MAAO6I,EAAUqD,aAAe,GAChC3E,SAAWC,GAAMwC,EAAa,cAAexC,EAAEC,OAAOzH,OACtDxF,QAAS6N,EAAW6D,YACpBhG,WAAYmC,EAAW6D,YACvBvE,WAAY,CACVC,UAAU,IAEZrD,UAAQ,WAKhBvI,EAAAA,EAAAA,MAACoF,EAAAA,EAAG,CAAC8F,GAAI,EAAGhK,QAAQ,OAAO4X,UAAW,EAAE1Y,SAAA,EACxCC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,WAAW0D,MAAM,UAC7BzD,QA5qBeqE,UACvB,MAAMwS,EAAkBlK,IAClBmK,EAAiB/F,IACjBgG,EAAiBrH,IAEvB,GAAKmH,GAAoBC,GAAmBC,EAErC,CAAC,IAADC,EACN,IAAI9K,QAAYwG,KAChB,IAAwB,KAAlB,OAAHxG,QAAG,IAAHA,GAAS,QAAN8K,EAAH9K,EAAK9O,YAAI,IAAA4Z,OAAN,EAAHA,EAAW1a,OACb,CAAC,IAAD2a,EAAAC,EACE,IAAI9Z,GAAU,OAAH8O,QAAG,IAAHA,GAAS,QAAN+K,EAAH/K,EAAK9O,YAAI,IAAA6Z,OAAN,EAAHA,EAAW7Z,OAAQ,CAAC,EAC/BqN,EAAS,kCAAD/K,OAAuC,OAAJtC,QAAI,IAAJA,GAAsB,QAAlB8Z,EAAJ9Z,EAAMmW,wBAAgB,IAAA2D,OAAlB,EAAJA,EAAwBzD,iBAAgB,cAAA/T,OAAiB,OAAJtC,QAAI,IAAJA,OAAI,EAAJA,EAAM+Z,qBAExG,CAKF,MAbE5a,QAAQ6S,IAAI,mBAad,EA0pBQ1G,UAAWqC,GAAeV,EAC5B7H,GAAI,CACoBC,YAAa,qBACb9D,MAAO,QAEP8E,MAAO,sBAEPvF,SAAC,gBAGzBC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,YAAY0D,MAAM,UAChCzD,QA/sBWqE,UACnB,MAAMwS,EAAkBlK,IAClBmK,EAAiB/F,IACjBgG,EAAiBrH,IAEvB,GAAKmH,GAAoBC,GAAmBC,EAErC,CAAC,IAADK,EACN,IAAIlL,QAAYwG,MACQ,KAAlB,OAAHxG,QAAG,IAAHA,GAAS,QAANkL,EAAHlL,EAAK9O,YAAI,IAAAga,OAAN,EAAHA,EAAW9a,QAEX+a,YAAW,IACT5M,EAAS,mBACV,IAOL,MAdElO,QAAQ6S,IAAI,mBAcd,EA4rBQ1G,UAAWqC,GAAeV,EAC5B7H,GAAI,CACoBC,YAAa,qBACb9D,MAAO,QACPsB,gBAAiB,qBACjBwD,MAAO,SAEPvF,SAAC,yBAY1B,EA8HP,EAxHyBoZ,KACvB,MAAOC,EAAepO,IAAmB9P,EAAAA,EAAAA,WAAS,IAE3C,oBAACoH,GAAuBsB,KACxByV,EAAiBxT,IAAqB3K,EAAAA,EAAAA,WAAS,IAC/Coe,EAAaC,IAAkBre,EAAAA,EAAAA,UAAS,cAIxCse,EAAUC,IAAcve,EAAAA,EAAAA,WAAS,GAClCwe,EAAyE,SAA5D,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,QA8BlE,OAZD3d,EAAAA,EAAAA,YAAU,KAhBY8J,WACf,IAAK,IAAD8T,EACH,IAAI1T,QAAiBK,EAAAA,EAAAA,OAGpB,IAADsT,EADkC,OAAvB,OAAR3T,QAAQ,IAARA,GAAc,QAAN0T,EAAR1T,EAAUrH,YAAI,IAAA+a,OAAN,EAARA,EAAgBnT,cAElBvE,EAA4B,OAARgE,QAAQ,IAARA,GAAc,QAAN2T,EAAR3T,EAAUrH,YAAI,IAAAgb,OAAN,EAARA,EAAgBhb,MACpC4G,GAAkB,GAEpB,CAAE,MAAO1H,GAET,CAAC,QACAsb,GAAW,EACZ,GAIL3S,EAAe,GACf,KAEF1K,EAAAA,EAAAA,YAAU,KACRgC,QAAQ6S,IAAIyI,EAAY,YACpBA,GAEAH,EAAe,YACnB,GACD,KAEe,IAAZC,EAEK,MAGP7Z,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EAEJC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,cAAaN,UAACC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eAE7BC,EAAAA,EAAAA,KAACmI,EAAAA,EAAS,CAAApI,SAIAqZ,EAICC,GAGDrZ,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAP,SAEkB,cAAhBuZ,IACAtZ,EAAAA,EAAAA,KAAC+L,EAAW,OALZ/L,EAAAA,EAAAA,KAAC2F,EAAY,CAACE,kBAAmBA,KAJ/B7F,EAAAA,EAAAA,KAAC8K,EAAY,CAACE,gBAAiBA,QA8D1C,E,uGCx4FP,MAqGA,GArGqCkP,KAEjC,MAAOC,EAAUC,IAAelf,EAAAA,EAAAA,UAAS,IAgGzC,MAAO,CAAEmf,YA/DWzf,IAAA,IAAC,MAAEyW,EAAQ,EAAC,MAAE5M,EAAQ,WAAU,SAAE6V,GAAW,GAAM1f,EAAA,OACnE+E,EAAAA,EAAAA,MAACoF,EAAAA,EAAG,CACAV,GAAI,CACAkW,SAAU,WACV/Z,MAAO,OACPC,OAAQ,IACRmE,aAAc,EACd4V,SAAU,SACVC,QAAS,WACT5Z,QAAS,OACT+J,WAAY,SACZnF,eAAgB,SAChBiV,OAAQ,WAEZ7Y,QAASA,KAAA,IAAA8Y,EAAA,OAAOR,IAA4D,QAApDQ,EAAIC,SAASC,eAAe,gBAADtZ,OAAiB8P,WAAQ,IAAAsJ,OAAA,EAAhDA,EAAkDG,QAAO,EAAC/a,SAAA,CAErFoa,GACGna,EAAAA,EAAAA,KAAC+a,EAAAA,EAAM,CACHha,KAAKia,EAAAA,EAAAA,GAAWb,GAChBvY,QAAQ,UACRyC,GAAI,CAAE7D,MAAO,OAAQC,OAAQ,QAC7BoB,QAAUsJ,GAAMA,EAAE8P,qBAGtBjb,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CAACI,MAAM,gBAAevF,SAAE0E,KAEvCzE,EAAAA,EAAAA,KAAA,SACIkb,OAAO,UACPta,MAAO,CAAEC,QAAS,QAClBsa,GAAE,gBAAA5Z,OAAkB8P,GACpB/R,KAAK,OACL4L,SAAWC,GA9DGjF,WACtB,MAAMkV,EAAOjQ,EAAEC,OAAOiQ,MAAM,GAG5B,GAAID,GAFiB,CAAC,aAAc,YAAa,aAExBlR,SAASkR,EAAK9b,MAInC,IACI,MAAM2D,EAAW,IAAIqY,SACrBrY,EAASsY,OAAO,QAASH,GACzB,IAAIrN,QAAYyN,EAAAA,EAAAA,KAAWvY,GAC3BiW,YAAW,KAAK,IAADpL,EAAA2N,EACXrB,EAAe,OAAHrM,QAAG,IAAHA,GAAS,QAAND,EAAHC,EAAK9O,YAAI,IAAA6O,GAAM,QAAN2N,EAAT3N,EAAW7O,YAAI,IAAAwc,OAAZ,EAAHA,EAAiBC,IAAI,GACnC,IAEN,CAAE,MAAOvd,GACLC,QAAQD,MAAM,uBAAwBA,EAC1C,CACJ,EA2CyBwd,CAAkBxQ,MAErCgP,IACEna,EAAAA,EAAAA,KAAC4b,EAAAA,EAAO,CAACnX,MAAM,eAAc1E,UACzBC,EAAAA,EAAAA,KAAC4X,EAAAA,EAAU,CACPiE,UAAU,OACVha,QAAUsJ,IAAO,IAAD2Q,EACZ3Q,EAAE8P,kBAC8C,QAAhDa,EAAAlB,SAASC,eAAe,gBAADtZ,OAAiB8P,WAAQ,IAAAyK,GAAhDA,EAAkDhB,OAAO,EAE7DzW,GAAI,CAAEkW,SAAU,WAAYwB,OAAQ,EAAGC,MAAO,EAAGvB,QAAS,SAAU1a,UAEpEC,EAAAA,EAAAA,KAACic,EAAAA,EAAW,QAIvB9B,GAAYG,IACTta,EAAAA,EAAAA,KAAC4b,EAAAA,EAAO,CAACnX,MAAM,eAAc1E,UACzBC,EAAAA,EAAAA,KAAC4X,EAAAA,EAAU,CACP/V,QAAUsJ,IACNA,EAAE8P,kBAxDtBb,EAAY,GAyDgC,EAE5B/V,GAAI,CAAEkW,SAAU,WAAY2B,IAAK,EAAGF,MAAO,EAAGvB,QAAS,SAAU1a,UAEjEC,EAAAA,EAAAA,KAACmc,EAAAA,EAAM,UAIjB,EAGYhC,WAAWC,cAAa,E,+DCrGlD,MAuDA,GAvD0BgC,KAEtBpc,EAAAA,EAAAA,KAACmI,EAAAA,EAAS,CAAClH,SAAS,KAAKZ,UAAU,wDAAuDN,UACxFJ,EAAAA,EAAAA,MAACoF,EAAAA,EAAG,CACFV,GAAI,CACFxD,QAAS,OACT4J,cAAe,SACfG,WAAY,SACZnF,eAAgB,SAChBb,aAAc,EACdE,UAAW,EACXH,QAAS,EACT7C,gBAAiB,SACjB/B,SAAA,EAEFC,EAAAA,EAAAA,KAACqc,GAAAA,IAAa,CAAChc,UAAU,4BACzBL,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CAACtD,QAAQ,KAAKwC,SAAU,OAAQkB,MAAM,gBAAgBH,cAAY,EAAApF,SAAC,sBAG9EJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAU,CACTtD,QAAQ,QACR0D,MAAM,gBACNjB,GAAI,CAAEiY,UAAW,OAAQC,aAAc,GACvCnY,SAAU,OAAOrE,SAAA,CAClB,gCAECC,EAAAA,EAAAA,KAAA,SAAM,2SAORA,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLC,QAAQ,YACR1C,KAAK,QACLoG,MAAM,UACNjB,GAAI,CAAEmY,cAAe,OACnB1a,gBAAiB,qBACjBwD,MAAO,SAEPvF,UAEFC,EAAAA,EAAAA,KAACyc,GAAAA,GAAI,CAACC,GAAG,aAAa9b,MAAO,CAAE+b,eAAgB,OAAQrX,MAAO,SAAUvF,UACtEC,EAAAA,EAAAA,KAAA,QAAMY,MAAO,CAAC0E,MAAM,QAAQvF,SAAC,+B,gBCFzC,MAAM6c,GAAc,eAKd5U,GAAmB6U,EAAAA,KAAaC,MAAM,CACxCze,KAAMwe,EAAAA,KAGN1Z,QAAS0Z,EAAAA,KAEJE,QAAQ,aAAc,oCACtB7U,SAAS,uBACV3F,KAAMsa,EAAAA,KAAa/M,OAAO5H,SAAS,yBACnC3J,MAAOse,EAAAA,KAAa/M,OAAO5H,SAAS,0BACxC8U,WAAYH,EAAAA,KAAa/M,OAAO5H,SAAS,6BACzC+U,UAAWJ,EAAAA,KAAa/M,OAAO5H,SAAS,yBACxCgV,iBAAkBL,EAAAA,KAAa/M,OAAO5H,SAAS,iCAC/CiV,aAAcN,EAAAA,KAKdO,UAAWP,EAAAA,KAENE,QAAQ,6BAA8B,sBACtC7U,SAAS,0BACdmV,SAAUR,EAAAA,KAAa/M,OAAO5H,SAAS,yBACvCoV,gBAAiBT,EAAAA,KAAa3U,SAAS,gCACvCqV,qBAAsBV,EAAAA,KAEjBE,QAAQ,cAAe,yBACvB7U,SAAS,sCACdsV,eAAgBX,EAAAA,KAAaY,MAAM,iBAAiBvV,SAAS,gCAC7DwV,mBAAoBb,EAAAA,KAAa/M,OAAO5H,SAAS,oCACjDyV,oBAAqBd,EAAAA,KAEhBe,UAAU,oBACV1V,SAAS,sCACd2V,kBAAmBhB,EAAAA,KAEdiB,MAAM,CAAC,QAAS,UAAW,yBAC3B5V,SAAS,mCACV6V,UAAWlB,EAAAA,KAEViB,MAAM,CAAC,UAAW,WAAY,yBAC9B5V,SAAS,yBACd8V,YAAanB,EAAAA,KAAa3U,SAAS,4BACnC+V,YAAapB,EAAAA,KAERiB,MAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,yBAC3C5V,SAAS,4BACdgW,IAAMrB,EAAAA,KAWNsB,QAAStB,EAAAA,KAAa3U,SAAS,wBAC/BkW,KAAMvB,EAAAA,KAAa/M,OAAO5H,SAAS,yBACnCmW,eAAgBxB,EAAAA,KACN/M,OAAO5H,SAAS,oCAC1BoW,aAAczB,EAAAA,KACbiB,MAAM,CAAC,aAAc,aAAc,MAAO,kBAAmB,kBAAmB,gCAChF5V,SAAS,+BAKRqW,GAAsB3jB,IAAoF,IAAnF,QAAE4jB,EAAO,YAAEC,EAAW,eAAGC,EAAc,gBAAE1T,EAAe,kBAAE2T,GAAmB/jB,EACtG,MAAOgkB,EAAcC,IAAmB3jB,EAAAA,EAAAA,UAAS,KACzC4jB,EAAcC,IAAkB7jB,EAAAA,EAAAA,WAAS,IAC1Cse,EAAUC,IAAave,EAAAA,EAAAA,WAAS,IAChCgjB,EAAKc,IAAU9jB,EAAAA,EAAAA,UAAS,KACxB+jB,EAASC,IAAchkB,EAAAA,EAAAA,WAAS,IAChCikB,EAAaC,IAAkBlkB,EAAAA,EAAAA,WAAS,GAGzCmkB,GAAUC,EAAAA,GAAAA,IAAapZ,MAAOqZ,EAAUC,KAC1C,IAAI5L,EAAO,CACP6L,eAAe,MAADle,OAAQqd,GACtBc,IAAKH,EACLI,KAAMH,EACNI,SAAU,GAGdnG,GAAW,GACX,IAAK,IAAD3L,EAAAG,EAAAE,EACA,IAAIJ,QAAY8R,EAAAA,EAAAA,KAAejM,GAG7B,IAAD6C,EAAAqJ,EADA,IADA/Y,EAAAA,EAAAA,GAAgB,OAAHgH,QAAG,IAAHA,GAAS,QAAND,EAAHC,EAAK9O,YAAI,IAAA6O,OAAN,EAAHA,EAAW3P,MAAW,OAAH4P,QAAG,IAAHA,GAAS,QAANE,EAAHF,EAAK9O,YAAI,IAAAgP,OAAN,EAAHA,EAAWjH,SACpC,OAAH+G,QAAG,IAAHA,GAAS,QAANI,EAAHJ,EAAK9O,YAAI,IAAAkP,IAATA,EAAWhQ,MAEZ+gB,GAAW,GACXR,EAAkB,OAAH3Q,QAAG,IAAHA,GAAS,QAAN0I,EAAH1I,EAAK9O,YAAI,IAAAwX,GAAM,QAANqJ,EAATrJ,EAAWxX,YAAI,IAAA6gB,OAAZ,EAAHA,EAAiBC,aAChCf,EAAO,GAKf,CAAE,MAAO7gB,GACLC,QAAQD,MAAM,qBAAsBA,EACxC,CAAC,QACGsb,GAAW,EACf,KAWEuG,GAAYV,EAAAA,GAAAA,IAAapZ,MAAOqZ,EAAUC,KAC5C,IAAI5L,EAAO,CACP6L,eAAe,MAADle,OAAQqd,GACtBV,IAAKA,GAGVzE,GAAW,GACV,IAAK,IAAD/C,EAAAuC,EAAAJ,EACA,IAAI9K,QAAYkS,EAAAA,EAAAA,KAAiBrM,GAIhC,IAADkF,EADA,IADA/R,EAAAA,EAAAA,GAAgB,OAAHgH,QAAG,IAAHA,GAAS,QAAN2I,EAAH3I,EAAK9O,YAAI,IAAAyX,OAAN,EAAHA,EAAWvY,MAAW,OAAH4P,QAAG,IAAHA,GAAS,QAANkL,EAAHlL,EAAK9O,YAAI,IAAAga,OAAN,EAAHA,EAAWjS,SACpC,OAAH+G,QAAG,IAAHA,GAAS,QAAN8K,EAAH9K,EAAK9O,YAAI,IAAA4Z,IAATA,EAAW1a,MAGfqgB,EAAW,OAAHzQ,QAAG,IAAHA,GAAS,QAAN+K,EAAH/K,EAAK9O,YAAI,IAAA6Z,OAAN,EAAHA,EAAW7Z,MAChBmgB,GAAe,EAGtB,CAAE,MAAOjhB,GACLC,QAAQD,MAAM,uBAAwBA,EAC1C,CAAC,QACGsb,GAAW,EACf,KAWEyG,GAAqBZ,EAAAA,GAAAA,IAAapZ,MAAOqZ,EAAUC,KACrD,IAAI5L,EAAO,CACP6L,eAAe,MAADle,OAAQqd,GACtBc,IAAKH,EACLI,KAAMH,EACNI,SAAU,GAGdnG,GAAW,GACX,IAAK,IAAD0G,EAAAC,EAAAC,EACA,IAAItS,QAAY8R,EAAAA,EAAAA,KAAejM,GAG7B,IAAD0M,EADA,IADAvZ,EAAAA,EAAAA,GAAgB,OAAHgH,QAAG,IAAHA,GAAS,QAANoS,EAAHpS,EAAK9O,YAAI,IAAAkhB,OAAN,EAAHA,EAAWhiB,MAAW,OAAH4P,QAAG,IAAHA,GAAS,QAANqS,EAAHrS,EAAK9O,YAAI,IAAAmhB,OAAN,EAAHA,EAAWpZ,SACpC,OAAH+G,QAAG,IAAHA,GAAS,QAANsS,EAAHtS,EAAK9O,YAAI,IAAAohB,IAATA,EAAWliB,MAGZqgB,EAAW,OAAHzQ,QAAG,IAAHA,GAAS,QAANuS,EAAHvS,EAAK9O,YAAI,IAAAqhB,OAAN,EAAHA,EAAWrhB,MACnB0f,GAAkB,GAClB3T,GAAgB,EAOxB,CAAE,MAAO7M,GACLC,QAAQD,MAAM,qBAAsBA,EACxC,CAAC,QACGsb,GAAW,EACf,KAGE8G,EAAsBA,KACxBL,GAAoB,EAQxB,OACIlgB,EAAAA,EAAAA,KAACmI,EAAAA,EAAS,CAAClH,SAAU,KAAOL,MAAO,CAAEiE,UAAW,QAAS9E,UACrDC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvI,UAKvBC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzI,UACdJ,EAAAA,EAAAA,MAAC8I,EAAAA,EAAI,CAAC7H,MAAO,CAAE+D,QAAS,OAAQG,UAAW,gCAAiC/E,SAAA,EACxEC,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CAACtD,QAAQ,KAAK8G,MAAM,SAASvD,cAAY,EAACvE,MAAO,CAAC0E,MAAM,sBAAsBvF,SAAC,2BAG1FC,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACNwF,MAAM,gBACN7H,QAAQ,WACR8H,WAAS,EACT/F,MAAOib,EACPrU,SAAU4U,GAAeF,EACzB/T,SAAWC,IACP,MAAMxH,EAAQwH,EAAEC,OAAOzH,MAAM6c,QAAQ,MAAO,IAAIlW,MAAM,EAAG,IACzDuU,EAAgBlb,GAChBob,GAAgBnC,GAAYvR,KAAK1H,GAAO,EAE5CxF,MAAO2gB,EACPjV,WAAYiV,EAAc,uCAAyC,GACnEnV,OAAO,SACPzB,UAAQ,EACR7D,GAAI,CACA,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,uBAE3C,sBAAuB,CACrBgB,MAAO,oBAKhB2Z,GACAjf,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAP,UACAC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,WAAW0D,MAAM,UAAUoE,WAAS,EAClD7H,QA7CH4e,KACjBvB,GAAW,EAAM,EA6CG3U,SAAU4U,EACZ9a,GAAI,CAEDC,YAAY,qBACZgB,MAAO,sBAEPvF,SACH,aAIAC,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAP,UACAC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,YAAY0D,MAAM,UAAUoE,WAAS,EAAC7H,QAASwd,EAChE9U,UAAWqS,GAAYvR,KAAKuT,IAAiBO,GAAe3F,EAC3DnV,GAAI,CACDvC,gBAAiB,qBACjBwD,MAAO,SAEPvF,SACH,eAMAkf,IACGtf,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EACIC,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACNwF,MAAM,YACN7H,QAAQ,WACR8H,WAAS,EACT/F,MAAOua,EACPhT,SAAWC,GAAM6T,EAAO7T,EAAEC,OAAOzH,OACjC4G,SAAW4U,EACXxV,OAAO,SACPzB,UAAQ,EACR7D,GAAI,CACA,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,uBAE3C,sBAAuB,CACrBgB,MAAO,qBAIjBtF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,YAAY0D,MAAM,UAAUoE,WAAS,EAAC7H,QAASme,EAAWzV,SAAU2T,EAAIrb,OAAS,GAAKsc,GAAe3F,EACpHnV,GAAI,CACDC,YAAa,qBAEbxC,gBAAiB,qBACjBwD,MAAO,SACPvF,SACH,kBAMPkf,IAAsB,OAAXR,QAAW,IAAXA,OAAW,EAAXA,EAAaiC,eACnB1gB,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAAC/D,GAAI,CAAEQ,UAAW,QAAU0D,MAAI,EAACC,GAAI,GAAGzI,UAE1CJ,EAAAA,EAAAA,MAAC8I,EAAAA,EAAI,CAEL7H,MAAO,CACL+D,QAAS,OACT4X,aAAc,OACdza,gBAAiB,QACjB8C,aAAc,OACdE,UAAW,gCAEX/E,SAAA,EAGDC,EAAAA,EAAAA,KAAC+E,EAAAA,EAAG,CAAGnE,MAAO,CAEb0b,UAAW,SACXzb,QAAS,OACT4J,cAAe,SACfG,WAAY,UACZ7K,UAGFC,EAAAA,EAAAA,KAAC+a,EAAAA,EAAM,CACLha,KAAKia,EAAAA,EAAAA,GAAsB,OAAXyD,QAAW,IAAXA,OAAW,EAAXA,EAAakC,SAC7Btc,GAAI,CAAE7D,MAAO,GAAIC,OAAQ,GAAIga,QAAS,uBAAwB8B,aAAc,eAG5E5c,EAAAA,EAAAA,MAACoF,EAAAA,EAAG,CAAGnE,MAAO,CACZ4J,WAAa,OACb3F,UAAW,OACX0X,aAAa,QAEnBxc,SAAA,EAGEJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAU,CAACtD,QAAQ,QAAO7B,SAAA,EAACJ,EAAAA,EAAAA,MAAA,QAAAI,SAAA,EAAMC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,SAAQ,QAAS,IAAa,OAAX0e,QAAW,IAAXA,OAAW,EAAXA,EAAaiC,YAAY,QACjF/gB,EAAAA,EAAAA,MAACuF,EAAAA,EAAU,CAACtD,QAAQ,QAAO7B,SAAA,EAACJ,EAAAA,EAAAA,MAAA,QAAAI,SAAA,EAAMC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,YAAW,QAAS,IAAa,OAAX0e,QAAW,IAAXA,OAAW,EAAXA,EAAahY,qBACxE9G,EAAAA,EAAAA,MAACuF,EAAAA,EAAU,CAACtD,QAAQ,QAAO7B,SAAA,EAACJ,EAAAA,EAAAA,MAAA,QAAAI,SAAA,EAAMC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,UAAS,QAAS,IAAa,OAAX0e,QAAW,IAAXA,OAAW,EAAXA,EAAamC,kBAO/EzB,IACGxf,EAAAA,EAAAA,MAACkhB,EAAAA,EAAK,CAACvY,QAAS,EAAGwY,UAAU,SAASjW,GAAI,EAAE9K,SAAA,EACxCC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,WAAW0D,MAAM,UAAUjB,GAAI,CAC/CC,YAAa,qBAGbgB,MAAO,sBACNoE,WAAS,EAAC7H,QA1Mdkf,KAErBpC,GAAkB,GAClB3T,GAAgB,EAAK,EAuMwCjL,SAAC,wBAItCC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,WAAW0D,MAAM,UAAUjB,GAAI,CAC/CC,YAAa,qBAGbgB,MAAO,sBACNoE,WAAS,EAAC7H,QAAS0e,EAAoBxgB,SAAC,mCAM/Ckf,IACEjf,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,WAAW0D,MAAM,YAAYoE,WAAS,EAAC7H,QAAS0e,EAAqB3f,MAAO,CAAEiE,UAAW,QAAWR,GAAI,CACpHC,YAAa,qBAGbgB,MAAO,sBACPvF,SAAC,kCASb,EAIdihB,GAAahiB,IAA4D,IAA3D,iBAACiiB,EAAgB,cAACC,EAAa,KAAGC,EAAI,WAAGC,GAAYpiB,EACrEZ,QAAQ6S,IAAIkQ,EAAO,QACnB,MAAOle,EAAUC,IAAehI,EAAAA,EAAAA,UAAS,OAClCmmB,EAAeC,IAAoBpmB,EAAAA,EAAAA,WAAS,IAG5CqmB,EAAgBC,IAAqBtmB,EAAAA,EAAAA,UAAS,OAC9CumB,EAAkBC,IAAuBxmB,EAAAA,EAAAA,WAAS,IAClDymB,EAAgBC,IAAqB1mB,EAAAA,EAAAA,WAAS,IAC9C2mB,EAAUC,IAAe5mB,EAAAA,EAAAA,UAAS,KAClC6mB,EAAiBC,IAAqB9mB,EAAAA,EAAAA,UAAS,KAC/C+mB,EAAWC,IAAehnB,EAAAA,EAAAA,UAAS,KA4B1CkB,EAAAA,EAAAA,YAAU,KAAO,IAAD+lB,EAER,MAAMC,EAAc,CACfjf,QAAS,GACTZ,KAAM,GACNhE,MAAM,GACPye,WAAY,GACZC,UAAW,GACXC,iBAAsB,OAAJiE,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,YACxBlF,aAAkB,OAAJgE,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,cACpBlF,UAAe,OAAJ+D,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,WACjBlF,SAAU,GACVC,gBAAqB,OAAJ6D,QAAI,IAAJA,OAAI,EAAJA,EAAM1a,iBACvB8W,qBAA0B,OAAJ4D,QAAI,IAAJA,GAAY,QAARgB,EAAJhB,EAAMP,cAAM,IAAAuB,OAAR,EAAJA,EAAc7X,MAAM,GAC1CkT,eAAoB,OAAJ2D,QAAI,IAAJA,OAAI,EAAJA,EAAM1D,MACtBY,eAAe,GACfF,QAAS,GACTC,KAAK,GACLL,UAAW,UACXL,mBAAoB,GACpBC,oBAAqB,GACrBE,kBAAmB,GACnBG,YAAa,GACbC,YAAa,GACbK,aAAa,IAEjBpb,GAAaiE,IAAG,IAAQA,KAASib,MAEjCV,GAAoB,GAtDFxb,WAClB,IAAI0N,EAAO,CACP4O,IAAIpF,EACJqF,QAAS7I,OAAO8I,aAAaC,QAAQ,cAGtC,IACC,IAAIrc,QAAiBsc,EAAAA,EAAAA,KAA0BhP,GAC/C1Q,GAAaiE,IAAG,IAAAT,EAAAmc,EAAA,MAAI,IAAI1b,EAAM9I,KAAe,OAARiI,QAAQ,IAARA,GAAc,QAANI,EAARJ,EAAUrH,YAAI,IAAAyH,GAAM,QAANmc,EAAdnc,EAAgBzH,YAAI,IAAA4jB,OAAZ,EAARA,EAAsBxkB,KAAO,GACtE,CAAE,MAAOF,GAET,GA+CI2kB,CAAsB,OAAJ3B,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,WAAW,GAG5C,IACH,MAAMQ,EAAa,CACf,CAAEC,IAAK,kBAAmBvZ,MAAO,oBACjC,CAAEuZ,IAAK,YAAavZ,MAAO,aAE3B,CAAEuZ,IAAK,WAAYvZ,MAAO,aAE1B,CAAEuZ,IAAK,uBAAwBvZ,MAAO,0BACtC,CAAEuZ,IAAK,iBAAkBvZ,MAAO,oBAChC,CAAEuZ,IAAK,qBAAsBvZ,MAAO,wBACpC,CAAEuZ,IAAK,sBAAuBvZ,MAAO,4BAIzCrN,EAAAA,EAAAA,YAAU,KACa8J,WACf,IAAK,IAAD+c,EAAAC,EACA,MAAMnV,QAAYoV,EAAAA,EAAAA,OACZC,EAAY,OAAHrV,QAAG,IAAHA,GAAS,QAANkV,EAAHlV,EAAK9O,YAAI,IAAAgkB,GAAM,QAANC,EAATD,EAAWhkB,YAAI,IAAAikB,OAAZ,EAAHA,EAAiB/Y,KAAK5B,IAAI,CACrC5E,MAAO4E,EACPkB,MAAOlB,EAAK8a,cAEhBvB,EAAYsB,EAChB,CAAE,MAAOjlB,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,GAEJmlB,EAAY,GAGb,IAMH,MAgJMC,GAAejE,EAAAA,GAAAA,IAAapZ,MAAOqZ,EAAUC,EAAY7b,KAC3D,IAAI8d,EAEA,OAAS1a,EAAAA,EAAAA,IAAa,EAAO,oCAEjC,IAAI4a,IAAmBI,EAErB,OAAShb,EAAAA,EAAAA,IAAa,EAAO,mCAG/B,MAAM6M,EAAO,CACTvV,KAAW,OAALsF,QAAK,IAALA,OAAK,EAALA,EAAOtF,KACbmlB,YAAa7f,EAAMqZ,WACnBS,MAAW,OAAJ0D,QAAI,IAAJA,OAAI,EAAJA,EAAM1D,MACbgG,cAAoB,OAAL9f,QAAK,IAALA,OAAK,EAALA,EAAO6Z,eACtBmD,QAAa,OAAJQ,QAAI,IAAJA,OAAI,EAAJA,EAAMR,QACf+C,kBAAmB/f,EAAM+Z,mBACzBC,oBAAqBha,EAAMga,oBAC3BE,kBAAmBla,EAAMka,kBACzBG,YAAara,EAAMqa,YACnBC,YAAata,EAAMsa,YACnB0F,eAAgB5B,EAChBnB,OAAY,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMP,OACdgD,gBAAiBjgB,EAAM4Z,qBACvBsG,YAAgB,OAAJ1C,QAAI,IAAJA,OAAI,EAAJA,EAAM2C,YAAa,GAC/BvE,SAAUA,EACVC,UAAWA,EACX8C,cAAmB,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,cACrBC,WAAgB,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,WAClBwB,QAAa,OAAJ5C,QAAI,IAAJA,OAAI,EAAJA,EAAM4C,QACfxlB,MAAW,OAAJ4iB,QAAI,IAAJA,OAAI,EAAJA,EAAM5iB,MACb8jB,YAAa1e,EAAMuZ,iBACnB8G,QAAS7C,EAAKhe,QACd8gB,SAAUtgB,EAAMtF,KAChBqiB,YAAiB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMT,YACnBwD,UAAWvgB,EAAM0Z,SACjBvV,iBAAkBnE,EAAMR,QACxByE,cAAejE,EAAMpB,KACrBsF,eAAgBlE,EAAMpF,MACtBkI,kBAAsB,OAAJ0a,QAAI,IAAJA,OAAI,EAAJA,EAAM1a,mBAAoB,GAC5C6X,aAAe3a,EAAM2a,aACrB6F,wBAA6B,OAALxgB,QAAK,IAALA,OAAK,EAALA,EAAOsZ,YAAa,IAGhDiE,GAAc,GAGd,IAAK,IAADkD,EAAAC,EACA,IAAItW,QAAYuW,EAAAA,EAAAA,KAAa1Q,IAC7B7M,EAAAA,EAAAA,GAAgB,OAAHgH,QAAG,IAAHA,GAAS,QAANqW,EAAHrW,EAAK9O,YAAI,IAAAmlB,OAAN,EAAHA,EAAWjmB,MAAW,OAAH4P,QAAG,IAAHA,GAAS,QAANsW,EAAHtW,EAAK9O,YAAI,IAAAolB,OAAN,EAAHA,EAAWrd,SACpC,OAAH+G,QAAG,IAAHA,GAAAA,EAAK9O,KAAKd,OAEVijB,GAER,CAAE,MAAOjjB,GAET,CAAC,QACC+iB,GAAc,EAChB,KAIJ,IAAKje,EACD,OAAOjD,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAGd,MAAMwkB,EAAqB,CACvB,CAAE5gB,MAAO,YAAa8F,MAAO,aAC7B,CAAE9F,MAAO,aAAc8F,MAAO,cAC9B,CAAE9F,MAAO,aAAc8F,MAAO,cAC9B,CAAE9F,MAAO,aAAc8F,MAAO,cAC9B,CAAE9F,MAAO,aAAc8F,MAAO,eAMlC,OACIzJ,EAAAA,EAAAA,KAAC2I,EAAAA,GAAM,CACHC,cAAe3F,EACf4F,oBAAkB,EAClBb,iBAAkBA,GAClBc,SAAWC,IAGPwa,EAAaxa,EAAO,EAEtBhJ,SAEDyE,IAA2G,IAA1G,cAACggB,EAAa,gBAAEC,EAAe,OAAE1b,EAAM,cAAEO,EAAa,OAAED,EAAM,QAAED,EAAO,UAAGsb,EAAS,aAAGnb,GAAc/E,EAIjG,OACGxE,EAAAA,EAAAA,KAACwJ,EAAAA,GAAI,CAAAzJ,UACLJ,EAAAA,EAAAA,MAACyI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG1H,MAAO,CAAE2b,aAAc,QAASxc,SAAA,EAExDC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CAACtmB,KAAK,OAAOumB,GAAI3gB,EAAAA,EAAYC,gBAAiB,CAAEC,QAAQ,GAAQsF,MAAM,OAAO7H,QAAQ,WAAW8H,WAAS,EAACC,OAAO,SAASY,UAAQ,OAI5IvK,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CAACtmB,KAAK,aAAaumB,GAAI3gB,EAAAA,EAAYC,gBAAiB,CAAEC,QAAQ,GAAQsF,MAAM,cAAc7H,QAAQ,WAAW8H,WAAS,EAACC,OAAO,SAC/HxL,MAAOiL,EAAQ4T,YAAcpT,QAAQP,EAAO2T,YAC7CnT,WAAYT,EAAQ4T,YAAc3T,EAAO2T,WACxC3Y,GAAI,CACD,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,6BAOvDtE,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CACFtmB,KAAK,YACLumB,GAAI3gB,EAAAA,EACJwF,MAAM,aACN7H,QAAQ,WACR8H,WAAS,EACTxF,gBAAiB,CAAEC,QAAQ,GAC3BoG,UAAQ,EACRZ,OAAO,SACPtF,GAAI,CACA,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,6BAUvDtE,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBJ,EAAAA,EAAAA,MAACyI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvI,SAAA,EACtBC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACzBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CACPtmB,KAAK,eACLumB,GAAI3gB,EAAAA,EACJwF,MAAM,gBACN7H,QAAQ,WACR8H,WAAS,EACTxF,gBAAiB,CAAEC,QAAQ,GAC3BoG,UAAQ,EACRZ,OAAO,SACPtF,GAAI,CACA,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,6BAe9CtE,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACtBC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACHC,QAAQ,YACR0D,MAAM,YACNzD,QAASA,IA7TtBqE,OAAO2e,EAAcvb,KACxCA,EAAc,MAAO,IACtB,IAAIsK,EAAO,CACVkR,aAAaD,EACbpC,QAAS7I,OAAO8I,aAAaC,QAAQ,cAEtCzB,GAAc,GACb,IAAK,IAAD6D,EAAAC,EAAAC,EACA,IAAIlX,QAAYmX,EAAAA,EAAAA,KAA6BtR,GAG5C,IAADuR,EAAAC,GAFAre,EAAAA,EAAAA,GAAgB,OAAHgH,QAAG,IAAHA,GAAS,QAANgX,EAAHhX,EAAK9O,YAAI,IAAA8lB,OAAN,EAAHA,EAAW5mB,MAAW,OAAH4P,QAAG,IAAHA,GAAS,QAANiX,EAAHjX,EAAK9O,YAAI,IAAA+lB,OAAN,EAAHA,EAAWhe,SACpC,OAAH+G,QAAG,IAAHA,GAAS,QAANkX,EAAHlX,EAAK9O,YAAI,IAAAgmB,GAATA,EAAW9mB,QAIZmjB,GAAiB,GACjBY,EAAe,OAAHnU,QAAG,IAAHA,GAAS,QAANoX,EAAHpX,EAAK9O,YAAI,IAAAkmB,GAAM,QAANC,EAATD,EAAWlmB,YAAI,IAAAmmB,OAAZ,EAAHA,EAAiBC,QAIpC,CAAE,MAAOlnB,GAET,CAAC,QACC+iB,GAAc,EAChB,GAsS+CoE,CAAevc,EAAOoU,aAAe7T,GACpDiB,SAAUkX,EAEVpd,GAAI,CAACQ,UAAU,OAAQ/C,gBAAiB,qBAAsBwD,MAAO,SAASvF,SACjF,sBAUZshB,IACG1hB,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EACIC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CAACtmB,KAAK,MAAMumB,GAAI3gB,EAAAA,EAAWwF,MAAM,MAAM7H,QAAQ,WAAW8H,WAAS,EAACC,OAAO,SAAWtF,GAAI,CAChG,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,6BAI/CtE,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACHC,QAAQ,YACR0D,MAAM,YACNzD,QAASA,IA9TrBqE,OAAOgY,EAAKwG,KAChC,IAAK,IAADa,EAAAC,EAAAC,EACA,IAAKvH,EAED,YADAwG,EAAU,CAAExG,IAAK,yBAGrBgD,GAAc,GAEhB,IAAItN,EACd,CAACsK,IAAIA,EAAKmH,OAAOpD,GAEDlU,QAAY2X,EAAAA,EAAAA,KAA+B9R,IAC/C7M,EAAAA,EAAAA,GAAgB,OAAHgH,QAAG,IAAHA,GAAS,QAANwX,EAAHxX,EAAK9O,YAAI,IAAAsmB,OAAN,EAAHA,EAAWpnB,MAAW,OAAH4P,QAAG,IAAHA,GAAS,QAANyX,EAAHzX,EAAK9O,YAAI,IAAAumB,OAAN,EAAHA,EAAWxe,SACpC,OAAH+G,QAAG,IAAHA,GAAS,QAAN0X,EAAH1X,EAAK9O,YAAI,IAAAwmB,GAATA,EAAWtnB,QAKZujB,GAAoB,GACpBJ,GAAiB,GACjBY,EAAY,MAInB,CAAE,MAAO/jB,GACLumB,EAAU,CAAExG,IAAK,uBACrB,CAAC,QACCgD,GAAc,EAChB,GAkS+CyE,CAAgB5c,EAAOmV,KACtC3T,UAAWxB,EAAOmV,IAElB7Z,GAAI,CAACQ,UAAU,OAAQ/C,gBAAiB,qBAAsBwD,MAAO,SAASvF,SACjF,4BAmDrCC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACvBC,EAAAA,EAAAA,KAAC4lB,EAAAA,EAAY,CACXC,QAAShE,EACTiE,eAAiBC,IAAiB,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQtc,QAAS,GAC7C9F,MAAOoF,EAAOid,MAAQ,KACtBC,qBAAsBA,CAACF,EAAQpiB,KAAK,IAAAuiB,EAAA,OAAKH,EAAOpiB,MAAMwiB,UAAgB,OAALxiB,QAAK,IAALA,GAAY,QAAPuiB,EAALviB,EAAOA,aAAK,IAAAuiB,OAAP,EAALA,EAAcC,OAAM,EACrFjb,SAAUA,CAACC,EAAGib,KAAc,IAADC,EAAAC,EACzBhd,EAAc,OAAQ8c,GAAY,MAClC9c,EAAc,WAAmB,OAAR8c,QAAQ,IAARA,GAAe,QAAPC,EAARD,EAAUziB,aAAK,IAAA0iB,OAAP,EAARA,EAAiBF,SAAU,IACpD7c,EAAc,QAAgB,OAAR8c,QAAQ,IAARA,GAAe,QAAPE,EAARF,EAAUziB,aAAK,IAAA2iB,OAAP,EAARA,EAAiBC,YAAa,IAEpD9B,EAAgB,WAAW,GAC3BA,EAAgB,QAAQ,GAExBvL,YAAW,KACTsL,EAAc,WACdA,EAAc,OAAO,GACpB,EAAE,EAEPja,SAAUoX,EACV6E,YAAcC,IACZzmB,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,IACJwiB,EACJhd,MAAM,cACNtL,MAAOyL,QAAQR,EAAQ+U,SAAW9U,EAAO8U,SACzCtU,WAAYT,EAAQ+U,SAAW9U,EAAO8U,UAI1C9Z,GAAI,CACF,sBAAuB,CACrBiB,MAAO,iBAEqB,2BAA4B,CAC1B,mBAAoB,CAAEhB,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,uBAE3CuG,GAAG,QAMf7K,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CACFtmB,KAAK,OACLumB,GAAI3gB,EAAAA,EACJwF,MAAM,aACNvF,gBAAiB,CAAEC,QAAQ,GAC3BvC,QAAQ,WACR8H,WAAS,EACTC,OAAO,SACPY,SAAUoX,EACVtd,GAAI,CACA,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,wBAK/CnG,MAAOiL,EAAQgV,MAAQxU,QAAQP,EAAO+U,MACtCvU,WAAYT,EAAQgV,MAAQ/U,EAAO+U,UAG3Cpe,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CACFtmB,KAAK,iBACLumB,GAAI3gB,EAAAA,EACJwF,MAAM,uBACNvF,gBAAiB,CAAEC,QAAQ,GAC3BvC,QAAQ,WACR8H,WAAS,EACTC,OAAO,SACPxL,MAAOiL,EAAQiV,gBAAkBzU,QAAQP,EAAOgV,gBAChDxU,WAAYT,EAAQiV,gBAAkBhV,EAAOgV,eAC7C9T,SAAUoX,EACVtd,GAAI,CACA,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,6BAQvDtE,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UAC/CJ,EAAAA,EAAAA,MAACkhB,EAAAA,EAAK,CAACC,UAAU,MAAMxY,QAAS,EAAGzD,UAAW,EAAG+F,WAAW,SAAQ7K,SAAA,EAElEJ,EAAAA,EAAAA,MAAC0Y,EAAAA,EAAW,CACVwD,UAAU,WACV1d,MAAOiL,EAAQ2U,WAAanU,QAAQP,EAAO0U,WAC3CxT,SAAUoX,EAAe5hB,SAAA,EAEzBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CAACtmB,KAAK,YAAW0B,SACpB2mB,IAAA,IAAC,MAAEzc,GAAOyc,EAAA,OACT/mB,EAAAA,EAAAA,MAACgnB,EAAAA,EAAU,IAAK1c,EAAO2c,KAAG,EAAA7mB,SAAA,EACxBC,EAAAA,EAAAA,KAAC+W,EAAAA,EAAgB,CAACpT,MAAM,UAAUU,GAAI,CAAE,wBAAyB,CAAED,SAAU,SAAa4S,SAAShX,EAAAA,EAAAA,KAAC6mB,EAAAA,EAAK,IAAKpd,MAAM,aACpHzJ,EAAAA,EAAAA,KAAC+W,EAAAA,EAAgB,CAACpT,MAAM,UAAUU,GAAI,CAAE,wBAAyB,CAAED,SAAU,SAAY4S,SAAShX,EAAAA,EAAAA,KAAC6mB,EAAAA,EAAK,IAAKpd,MAAM,cACxG,IAGhBL,EAAQ2U,WAAa1U,EAAO0U,YAC3B/d,EAAAA,EAAAA,KAAC8mB,EAAAA,EAAc,CAAA/mB,SAAEsJ,EAAO0U,gBAK5B/d,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLC,QAAQ,YACR0D,MAAM,YACNzD,QAASA,IAvcQqE,OAAO6C,EAAQ2b,KAE9BtmB,QAAQ6S,IAAIlI,EAAS,SACrB,IAAK,IAADge,EAAAC,EAAAC,EAAAC,EACA,IAAI7d,EAAS,CAAC,EAed,GAbW,OAANN,QAAM,IAANA,GAAAA,EAAQoV,UACT9U,EAAO8U,QAAU,wBAEV,OAANpV,QAAM,IAANA,GAAAA,EAAQsV,iBACThV,EAAOgV,eAAiB,mCAEjB,OAANtV,QAAM,IAANA,GAAAA,EAAQqV,KAED,yBAAyB/S,KAAKtC,EAAOqV,QAC7C/U,EAAO+U,KAAO,qBAFd/U,EAAO+U,KAAO,wBAMdtU,OAAOC,KAAKV,GAAQxG,OAAS,EAE7B,YADA6hB,EAAUrb,GAGd,IAAI8d,EAAM,CAEX9D,UAAkB,OAANta,QAAM,IAANA,GAAY,QAANge,EAANhe,EAAQid,YAAI,IAAAe,OAAN,EAANA,EAActd,MAC1BpL,KAAS,OAAJ8iB,QAAI,IAAJA,OAAI,EAAJA,EAAM8C,SACVmD,YAAkB,OAANre,QAAM,IAANA,OAAM,EAANA,EAAQsV,eACrBD,KAAW,OAANrV,QAAM,IAANA,OAAM,EAANA,EAAQqV,KACbD,QAAgB,OAANpV,QAAM,IAANA,OAAM,EAANA,EAAQoV,QAClBkJ,aAAqB,OAANte,QAAM,IAANA,OAAM,EAANA,EAAQgV,WAItBmD,GAAc,GACd,IAAInT,QAAYuZ,EAAAA,EAAAA,KAAiCH,GAKhD,IAADI,EAAAC,EADO,OAAHzZ,QAAG,IAAHA,GAAS,QAANiZ,EAAHjZ,EAAK9O,YAAI,IAAA+nB,GAATA,EAAW7oB,QAEXyjB,GAAkB,GAClBI,EAAqB,OAAHjU,QAAG,IAAHA,GAAS,QAANwZ,EAAHxZ,EAAK9O,YAAI,IAAAsoB,GAAM,QAANC,EAATD,EAAWtoB,YAAI,IAAAuoB,OAAZ,EAAHA,EAAiB7D,gBACnC1C,MAEJla,EAAAA,EAAAA,GAAgB,OAAHgH,QAAG,IAAHA,GAAS,QAANkZ,EAAHlZ,EAAK9O,YAAI,IAAAgoB,OAAN,EAAHA,EAAW9oB,MAAW,OAAH4P,QAAG,IAAHA,GAAS,QAANmZ,EAAHnZ,EAAK9O,YAAI,IAAAioB,OAAN,EAAHA,EAAWlgB,QAE/C,CAAE,MAAO7I,GACL,CACH,QACC+iB,GAAc,EAChB,GAoZauG,CAAW1e,EAAQ2b,GAClCna,SACGmd,QAAa,OAAN3e,QAAM,IAANA,OAAM,EAANA,EAAQsV,iBAAkB,IAAIxb,OAAS,KACtC,OAANkG,QAAM,IAANA,GAAAA,EAAQqV,SACF,OAANrV,QAAM,IAANA,GAAAA,EAAQoV,WACL,OAAN9U,QAAM,IAANA,OAAM,EAANA,EAAQgV,kBACF,OAANhV,QAAM,IAANA,OAAM,EAANA,EAAQ+U,QACF,OAAN/U,QAAM,IAANA,OAAM,EAANA,EAAQ8U,UAAWwD,EAErBtd,GAAI,CACFvC,gBAAiB,qBAEjBwD,MAAO,QACPqiB,WAAY,UACZ5nB,SACH,iBAO2BC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UAC7BC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CAACtmB,KAAK,mBAAmBumB,GAAI3gB,EAAAA,EAAWwF,MAAM,oBAAoB7H,QAAQ,WAAW8H,WAAS,EAACC,OAAO,SAASY,UAAQ,EAACrG,gBAAiB,CAAEC,QAAQ,QAK7JnE,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CACFtmB,KAAK,UACLumB,GAAI3gB,EAAAA,EACJwF,MAAM,UACN7H,QAAQ,WACR8H,WAAS,EACTxF,gBAAiB,CAAEC,QAAQ,GAC3BmH,WAAY,CACRG,UAAW,UACXD,QAAS,SACTD,UAAW,GAEf5B,OAAO,SACPtF,GAAI,CACA,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,wBAG/CnG,MAAOiL,EAAQjG,SAAWyG,QAAQP,EAAOlG,SACzC0G,WAAYT,EAAQjG,SAAWkG,EAAOlG,QACtC+H,SAAWC,IACP,MAAMxH,EAAQwH,EAAEC,OAAOzH,MAAM6c,QAAQ,MAAO,IAAIlW,MAAM,EAAG,GACzDhB,EAAc,UAAW3F,GAEJ,IAAjBA,EAAMd,QAvcrBqD,OAAOvC,EAAO2F,EAAeob,KAC9C,IAAK,IAADkD,EAEA,IAAKjkB,EAED,YADA+gB,EAAU,CAAEvhB,QAAS,wBAElB,IAAK,aAAakI,KAAK1H,GAE1B,YADA+gB,EAAU,CAAEvhB,QAAS,qCAKzBuhB,EAAU,CAAC,GAGX,MAAM3W,QAAY8Z,EAAAA,EAAAA,KAAelkB,GAIzB,IAADmkB,EAAAC,EAAAC,EAAAC,EAFA,OAAHla,QAAG,IAAHA,GAAS,QAAN6Z,EAAH7Z,EAAK9O,YAAI,IAAA2oB,GAATA,EAAWzpB,MACXumB,EAAU,CAAEvhB,QAAS,kCAErBmG,EAAc,QAAgB,QAARwe,EAAA/Z,EAAI9O,YAAI,IAAA6oB,GAAM,QAANC,EAARD,EAAU7oB,YAAI,IAAA8oB,OAAN,EAARA,EAAgBxlB,OAAQ,IAC9C+G,EAAc,SAAiB,QAAR0e,EAAAja,EAAI9O,YAAI,IAAA+oB,GAAM,QAANC,EAARD,EAAU/oB,YAAI,IAAAgpB,OAAN,EAARA,EAAgB1pB,QAAS,IAExD,CAAE,MAAOJ,GACLC,QAAQD,MAAM,kCAAmCA,GACjDumB,EAAU,CAAEvhB,QAAS,2CACzB,GA8agC+kB,CAAavkB,EAAO2F,EAAeob,EACvC,OAKZ1kB,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CACFtmB,KAAK,OACLumB,GAAI3gB,EAAAA,EACJwF,MAAM,OACN7H,QAAQ,WACR8H,WAAS,EACTxF,gBAAiB,CAAEC,QAAQ,GAE3BwF,OAAO,SACPtF,GAAI,CACA,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,wBAG7CnG,MAAOiL,EAAQ7G,MAAQqH,QAAQP,EAAO9G,MACtCsH,WAAYT,EAAQ7G,MAAQ8G,EAAO9G,UAI7CvC,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CACFtmB,KAAK,QACLumB,GAAI3gB,EAAAA,EACJwF,MAAM,QACN7H,QAAQ,WACR8H,WAAS,EACTxF,gBAAiB,CAAEC,QAAQ,GAE3BwF,OAAO,SACPtF,GAAI,CACA,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,wBAG7CnG,MAAOiL,EAAQ7K,OAASqL,QAAQP,EAAO9K,OACvCsL,WAAYT,EAAQ7K,OAAS8K,EAAO9K,UAKnC,OAAVwkB,QAAU,IAAVA,OAAU,EAAVA,EAAY5Y,KAAK9L,IACd2B,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CAACtmB,KAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM2kB,IAAK4B,GAAI3gB,EAAAA,EAAYC,gBAAiB,CAAEC,QAAQ,GAAQsF,MAAW,OAAJpL,QAAI,IAAJA,OAAI,EAAJA,EAAMoL,MAAO7H,QAAQ,WAAW8H,WAAS,EAACC,OAAO,SACjIxL,MAAOiL,EAAY,OAAJ/K,QAAI,IAAJA,OAAI,EAAJA,EAAM2kB,MAAQpZ,QAAQP,EAAW,OAAJhL,QAAI,IAAJA,OAAI,EAAJA,EAAM2kB,MAClDnZ,WAAYT,EAAY,OAAJ/K,QAAI,IAAJA,OAAI,EAAJA,EAAM2kB,MAAQ3Z,EAAW,OAAJhL,QAAI,IAAJA,OAAI,EAAJA,EAAM2kB,KACjD3e,GAAI,CACA,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,2BAPhB,OAAJjG,QAAI,IAAJA,OAAI,EAAJA,EAAM2kB,QAYzChjB,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CAACtmB,KAAK,eAAeumB,GAAI3gB,EAAAA,EAAYkkB,QAAM,EAAC1e,MAAM,gBAAgB7H,QAAQ,WAAW8H,WAAS,EAACC,OAAO,SAAWtF,GAAI,CACnH,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,wBAG7CnG,MAAOiL,EAAQkV,cAAgB1U,QAAQP,EAAOiV,cAC9CzU,WAAYT,EAAQkV,cAAgBjV,EAAOiV,aAAave,SAEzD,CAAC,aAAc,aAAc,MAAM,kBAAmB,kBAAkBoK,KAAK4b,IAC1E/lB,EAAAA,EAAAA,KAACwY,EAAAA,EAAQ,CAAc7U,MAAOoiB,EAAOhmB,SAChCgmB,GADUA,UAO3B/lB,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CAACtmB,KAAK,oBAAoBumB,GAAI3gB,EAAAA,EAAWkkB,QAAM,EAAC1e,MAAM,sBAAsB7H,QAAQ,WAAW8H,WAAS,EAACC,OAAO,SAAWtF,GAAI,CAC7H,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,wBAG7CnG,MAAOiL,EAAQyU,mBAAqBjU,QAAQP,EAAOwU,mBACnDhU,WAAYT,EAAQyU,mBAAqBxU,EAAOwU,kBAAkB9d,SAEnE,CAAC,QAAS,UAAUoK,KAAK4b,IACtB/lB,EAAAA,EAAAA,KAACwY,EAAAA,EAAQ,CAAc7U,MAAOoiB,EAAOhmB,SAChCgmB,GADUA,UAM3B/lB,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CAACtmB,KAAK,cAAcumB,GAAI3gB,EAAAA,EAAWkkB,QAAM,EAAC1e,MAAM,eAAe7H,QAAQ,WAAW8H,WAAS,EAACC,OAAO,SAAWtF,GAAI,CAChH,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,wBAG7CnG,MAAOiL,EAAQ4U,aAAepU,QAAQP,EAAO2U,aAC7CnU,WAAYT,EAAQ4U,aAAe3U,EAAO2U,YAAYje,SAE3DwkB,EAAmBpa,KAAK4b,IACzC/lB,EAAAA,EAAAA,KAACwY,EAAAA,EAAQ,CAAoB7U,MAAOoiB,EAAOpiB,MAAM5D,SAC5CgmB,EAAOtc,OADGsc,EAAOpiB,cAOV3D,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIkC,GAAI,EAAE3K,UACrBC,EAAAA,EAAAA,KAAC2kB,EAAAA,GAAK,CAACtmB,KAAK,cAAcumB,GAAI3gB,EAAAA,EAAWkkB,QAAM,EAAC1e,MAAM,eAAe7H,QAAQ,WAAW8H,WAAS,EAACC,OAAO,SAAWtF,GAAI,CAChH,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,wBAG7CnG,MAAOiL,EAAQ6U,aAAerU,QAAQP,EAAO4U,aAC7CpU,WAAYT,EAAQ6U,aAAe5U,EAAO4U,YAAYle,SAEvD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKoK,KAAK4b,IACtC/lB,EAAAA,EAAAA,KAACwY,EAAAA,EAAQ,CAAc7U,MAAOoiB,EAAOhmB,SAChCgmB,GADUA,UAS3B/lB,EAAAA,EAAAA,KAACoI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzI,UACdC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACrC,KAAK,SAASsC,QAAQ,YAAY0D,MAAM,UAAejB,GAAI,CAC/DC,YAAa,qBACb9D,MAAM,QACNsB,gBAAiB,qBACjBwD,MAAO,SACPvF,SAAE,eAKX,GAKN,EAMXqoB,GAAuB5iB,IAAqB,IAApB,WAAE4b,GAAY5b,EAExC,MAAM6iB,EAAenO,KACfoO,EAAepO,KACfqO,EAAerO,KACfsO,EAAetO,KACfuO,EAAevO,KACfwO,EAAexO,KACfyO,EAAezO,KACf0O,EAAe1O,KACf2O,EAAe3O,KACf4O,EAAgB5O,MAEf/b,EAAO4qB,IAAY7tB,EAAAA,EAAAA,UAAS,IAG7B8tB,EAAe,CACnBX,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGIG,EAAS,CACb,mBACA,mBACA,qBACA,sBACA,aACA,oBACA,sBACA,qBACA,gBACA,qBA2BF7sB,EAAAA,EAAAA,YAAU,KAxBK8J,WAEb,IAAK,IAADgjB,EACH,IAAInb,QAAYob,EAAAA,EAAAA,OAGf,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAFwB,KAAlB,OAAHxc,QAAG,IAAHA,GAAS,QAANmb,EAAHnb,EAAK9O,YAAI,IAAAiqB,OAAN,EAAHA,EAAW/qB,SAIb6qB,EAAa,GAAG5O,YAAe,OAAHrM,QAAG,IAAHA,GAAS,QAANqb,EAAHrb,EAAK9O,YAAI,IAAAmqB,GAAM,QAANC,EAATD,EAAWnqB,YAAI,IAAAoqB,OAAZ,EAAHA,EAAiBmB,cAC7CxB,EAAa,GAAG5O,YAAe,OAAHrM,QAAG,IAAHA,GAAS,QAANub,EAAHvb,EAAK9O,YAAI,IAAAqqB,GAAM,QAANC,EAATD,EAAWrqB,YAAI,IAAAsqB,OAAZ,EAAHA,EAAiBkB,cAC7CzB,EAAa,GAAG5O,YAAe,OAAHrM,QAAG,IAAHA,GAAS,QAANyb,EAAHzb,EAAK9O,YAAI,IAAAuqB,GAAM,QAANC,EAATD,EAAWvqB,YAAI,IAAAwqB,OAAZ,EAAHA,EAAiBiB,iBAC7C1B,EAAa,GAAG5O,YAAe,OAAHrM,QAAG,IAAHA,GAAS,QAAN2b,EAAH3b,EAAK9O,YAAI,IAAAyqB,GAAM,QAANC,EAATD,EAAWzqB,YAAI,IAAA0qB,OAAZ,EAAHA,EAAiBgB,kBAC7C3B,EAAa,GAAG5O,YAAe,OAAHrM,QAAG,IAAHA,GAAS,QAAN6b,EAAH7b,EAAK9O,YAAI,IAAA2qB,GAAM,QAANC,EAATD,EAAW3qB,YAAI,IAAA4qB,OAAZ,EAAHA,EAAiBe,WAC7C5B,EAAa,GAAG5O,YAAe,OAAHrM,QAAG,IAAHA,GAAS,QAAN+b,EAAH/b,EAAK9O,YAAI,IAAA6qB,GAAM,QAANC,EAATD,EAAW7qB,YAAI,IAAA8qB,OAAZ,EAAHA,EAAiBc,iBAC7C7B,EAAa,GAAG5O,YAAe,OAAHrM,QAAG,IAAHA,GAAS,QAANic,EAAHjc,EAAK9O,YAAI,IAAA+qB,GAAM,QAANC,EAATD,EAAW/qB,YAAI,IAAAgrB,OAAZ,EAAHA,EAAiBa,gBAC7C9B,EAAa,GAAG5O,YAAe,OAAHrM,QAAG,IAAHA,GAAS,QAANmc,EAAHnc,EAAK9O,YAAI,IAAAirB,GAAM,QAANC,EAATD,EAAWjrB,YAAI,IAAAkrB,OAAZ,EAAHA,EAAiBY,eAC7C/B,EAAa,GAAG5O,YAAe,OAAHrM,QAAG,IAAHA,GAAS,QAANqc,EAAHrc,EAAK9O,YAAI,IAAAmrB,GAAM,QAANC,EAATD,EAAWnrB,YAAI,IAAAorB,OAAZ,EAAHA,EAAiBW,QAC7ChC,EAAa,GAAG5O,YAAe,OAAHrM,QAAG,IAAHA,GAAS,QAANuc,EAAHvc,EAAK9O,YAAI,IAAAqrB,GAAM,QAANC,EAATD,EAAWrrB,YAAI,IAAAsrB,OAAZ,EAAHA,EAAiBU,SAG/C,CAAE,MAAO9sB,GAET,GAGA+sB,EAAQ,GACR,IAyCF,OACEvrB,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,YAAWN,UACxBC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,UAASN,SACrBipB,EAAa7e,KAAI,CAACghB,EAAQ9Z,KACzBrR,EAAAA,EAAAA,KAAA,OAAiBK,UAAU,oCAAmCN,UAC5DC,EAAAA,EAAAA,KAACmrB,EAAO9Q,YAAW,CAAChJ,MAAOA,EAAO5M,MAAOwkB,EAAO5X,MADxCA,SAOflT,IAAS6B,EAAAA,EAAAA,KAAA,KAAGY,MAAO,CAAE0E,MAAO,MAAOgX,UAAW,SAAUzX,UAAW,QAAS9E,SAAE5B,KAE/E6B,EAAAA,EAAAA,KAAC6gB,EAAAA,EAAK,CAACvY,QAAS,EAAGsC,WAAW,SAAS/F,UAAW,EAAE9E,UAClDC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLrC,KAAK,SACLsC,QAAQ,YACR0D,MAAM,UACNzD,QAxDaqE,UAInB,GAFsB8iB,EAAapsB,MAAKgJ,IAAA,IAAC,SAAEuU,GAAUvU,EAAA,OAAMuU,CAAQ,IAIjE,YADA4O,EAAS,+CAIXA,EAAS,IAET,MAAMnV,EAAO,CACX4W,aAAcxB,EAAa,GAAG7O,SAC9BsQ,aAAczB,EAAa,GAAG7O,SAC9BuQ,gBAAiB1B,EAAa,GAAG7O,SACjCwQ,iBAAkB3B,EAAa,GAAG7O,SAClCyQ,UAAW5B,EAAa,GAAG7O,SAC3B0Q,gBAAiB7B,EAAa,GAAG7O,SACjC2Q,eAAgB9B,EAAa,GAAG7O,SAChC4Q,cAAe/B,EAAa,GAAG7O,SAC/B6Q,OAAQhC,EAAa,GAAG7O,SACxB8Q,QAASjC,EAAa,GAAG7O,UAG3B,IAAK,IAADiR,EAAAC,EAAAC,EACF,IAAIvd,QAAYwd,EAAAA,EAAAA,KAAuB3X,IACvC7M,EAAAA,EAAAA,GAAgB,OAAHgH,QAAG,IAAHA,GAAS,QAANqd,EAAHrd,EAAK9O,YAAI,IAAAmsB,OAAN,EAAHA,EAAWjtB,MAAU,OAAH4P,QAAG,IAAHA,GAAS,QAANsd,EAAHtd,EAAK9O,YAAI,IAAAosB,OAAN,EAAHA,EAAWrkB,SAClC,OAAH+G,QAAG,IAAHA,GAAS,QAANud,EAAHvd,EAAK9O,YAAI,IAAAqsB,GAATA,EAAWntB,OACdijB,GAEJ,CAAE,MAAOjjB,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,GAyBMkG,GAAI,CACFC,YAAa,qBACb9D,MAAO,QACPsB,gBAAiB,qBACjBwD,MAAO,SACPvF,SACH,aAIF,EAOFyrB,GAAsBxiB,IAAmB,IAAlB,WAACoY,GAAWpY,EACtC,MAAOyiB,EAAcC,IAAmBxwB,EAAAA,EAAAA,WAAS,IAC1CG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,OAC5CywB,EAAaC,IAAkB1wB,EAAAA,EAAAA,WAAS,GAyC/C,OACEyE,EAAAA,EAAAA,MAAA,OAAKU,UAAU,wBAAuBN,SAAA,CAGnC1E,GACCsE,EAAAA,EAAAA,MAAA,OAAKU,UAAU,OAAMN,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOe,IAAK1F,EAAe2F,UAAQ,EAACJ,MAAO,CAAEJ,MAAO,OAAQS,SAAU,YAKlFjB,EAAAA,EAAAA,KAAC6gB,EAAAA,EAAK,CAACvY,QAAS,EAAGsC,WAAW,SAAS/F,UAAW,EAAE9E,UAC3CC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLrC,KAAK,SACLsC,QAAQ,YACR0D,MAAM,UAENjB,GAAI,CACFC,YAAa,qBACb9D,MAAO,QACPsB,gBAAiB,qBACjBwD,MAAO,SAETzD,QAjCcqE,UACnB,GAAI7K,EAAe,CAAC,IAADwwB,EACjB,MAAMzsB,QAAsC,QAA1BysB,EAAMC,MAAMzwB,UAAc,IAAAwwB,OAAA,EAApBA,EAAsBnvB,MAAKqvB,GAAKA,EAAEC,UAC1D5tB,QAAQ6S,IAAI7R,EAAY,kBA3BR8G,WAClB0lB,GAAe,GACf,MAAMpuB,EAAQ,IAAI8d,SAClB9d,EAAM+d,OAAO,QAASnc,EAAW,uBACjC5B,EAAM+d,OAAO,UAAW3B,OAAO8I,aAAaC,QAAQ,gBACpDvkB,QAAQ6S,IAAIzT,EAAQ,SAEpB,IAAK,IAADyuB,EAAAC,EAAAC,EAIH,IAAIpe,QAAaqe,EAAAA,EAAAA,KAAyB5uB,IAC1CuJ,EAAAA,EAAAA,GAAgB,OAAHgH,QAAG,IAAHA,GAAS,QAANke,EAAHle,EAAK9O,YAAI,IAAAgtB,OAAN,EAAHA,EAAW9tB,MAAW,OAAH4P,QAAG,IAAHA,GAAS,QAANme,EAAHne,EAAK9O,YAAI,IAAAitB,OAAN,EAAHA,EAAWllB,SACpC,OAAH+G,QAAG,IAAHA,GAAS,QAANoe,EAAHpe,EAAK9O,YAAI,IAAAktB,GAATA,EAAWhuB,OAEdijB,GAEF,CAAE,MAAOjjB,GAET,CAAC,QACCytB,GAAe,EACjB,GAOWS,CAAYjtB,EACvB,CACE,EA2B0BmL,SAAUohB,EAAY5rB,SAC9C,eAKEC,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAP,UACHC,EAAAA,EAAAA,KAAC+E,EAAAA,EAAG,CACDV,GAAI,CACAkW,SAAU,WACV/Z,MAAO,OACPC,OAAQ,IACRmE,aAAc,EACd4V,SAAU,SACVC,QAAS,WACT5Z,QAAS,OACT+J,WAAY,SACZnF,eAAgB,UAElB1F,UAIEC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,WAAW0D,MAAM,gBAAgBzD,QAAUA,IAAK6pB,GAAgB,GAAM3rB,SAAE,mBAMhGC,EAAAA,EAAAA,KAACssB,GAAAA,EAAa,CACZzxB,KAAM4wB,EACN3wB,YAAaA,IAAM4wB,GAAgB,GACnC3wB,OA9FmBwE,IACvBjE,EAAiBiE,GACjBmsB,GAAgB,EAAM,MAiGhB,EAgBNa,GAAkBxhB,IAAoC,IAAnC,eAACyhB,EAAc,WAAGpL,GAAWrW,EAEpD,MAAO0hB,EAASC,IAAaxxB,EAAAA,EAAAA,UAAS,KAE7ByxB,EAAMC,IAAW1xB,EAAAA,EAAAA,WAAS,GAM3BJ,EAAcoL,UAAY,IAAD2mB,EAC7B,IAGI9e,QAAa+e,EAAAA,EAAAA,KAHN,CACTC,qBAAoB,KAGE,KAAlB,OAAHhf,QAAG,IAAHA,GAAS,QAAN8e,EAAH9e,EAAK9O,YAAI,IAAA4tB,OAAN,EAAHA,EAAW1uB,SAEZijB,IACAwL,GAAQ,GACRJ,EAAe,2BACjB,EA+BF,OA1BApwB,EAAAA,EAAAA,YAAU,KACR,IAAI4wB,EAkBJ,MAhBqB9mB,WACnB,IACE,IAAI6H,QAAYkf,EAAAA,EAAAA,OAEhB/T,YAAW,KACT8T,EAAUxtB,IAAIC,gBAAgBsO,EAAI9O,MAClCytB,EAAUM,EAAQ,GAClB,GAEJ,CAAE,MAAO7uB,GACPC,QAAQD,MAAMA,EAChB,GAGF+uB,GAEO,KACDF,GACFxtB,IAAI2tB,gBAAgBH,EACtB,CACD,GACA,KAGCrtB,EAAAA,EAAAA,MAACwI,EAAAA,EAAS,CAAClH,SAAS,KAAIlB,SAAA,EACpBJ,EAAAA,EAAAA,MAAC8I,EAAAA,EAAI,CAAC7H,MAAO,CAAE+D,QAAS,OAAQG,UAAW,gCAAiC/E,SAAA,EAGxEC,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CAACtD,QAAQ,KAAK8G,MAAM,SAASvD,cAAY,EAAApF,SAAC,eAGrDC,EAAAA,EAAAA,KAAA,UAAQe,IAAK0rB,EAAQjsB,MAAM,OAAOC,OAAO,WACzCT,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,YAAY0D,MAAM,UAAUoE,WAAS,EAAC7H,QAtD7C0hB,KACnBqJ,GAAQ,EAAK,EAqD0EhsB,MAAO,CAAEiE,UAAW,QAAWR,GAAI,CACnHC,YAAa,qBACbxC,gBAAiB,qBACjBwD,MAAO,SACPvF,SAAC,eAKFJ,EAAAA,EAAAA,MAACytB,EAAAA,EAAM,CAACT,KAAMA,EAAMU,QAASvyB,EAAYiF,SAAA,EAC7CC,EAAAA,EAAAA,KAACstB,EAAAA,EAAW,CAACjpB,GAAI,CAACiB,MAAM,sBAAsBvF,SAAE,gBAChDC,EAAAA,EAAAA,KAACutB,EAAAA,EAAa,CAAAxtB,UACZC,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CAACb,GAAI,CAACiB,MAAM,iBAAiBvF,SAAC,8GAI3CC,EAAAA,EAAAA,KAACwtB,EAAAA,EAAa,CAAAztB,UACZC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACE,QAAS/G,EAAawK,MAAM,UAAU1D,QAAQ,YAAYhB,MAAO,CAAEiE,UAAW,QAAWR,GAAI,CAClGC,YAAa,qBACbxC,gBAAiB,qBACjBwD,MAAO,SAASvF,SAAC,iBAKV,EAKd0tB,GAAiB5a,IAA6C,IAA5C,eAAC6a,EAAc,mBAAGC,GAAoB9a,EAC1D,MAAO+a,EAAiBC,IAAsB3yB,EAAAA,EAAAA,UAAS,OAChD4yB,EAAMC,IAAW7yB,EAAAA,EAAAA,UAAS,KAC1BiD,EAAO4qB,IAAY7tB,EAAAA,EAAAA,UAAS,KAC5B8yB,EAAMC,IAAU/yB,EAAAA,EAAAA,aAChBse,EAAUC,IAAcve,EAAAA,EAAAA,WAAS,IACjCgzB,EAAeC,IAAmBjzB,EAAAA,EAAAA,WAAS,IAElDkB,EAAAA,EAAAA,YAAU,KACW8J,WACZioB,GAAgB,GACjB,IAAK,IAADC,EAAAC,EAAAC,EAAAC,EACA,IAAIxgB,QAAYygB,EAAAA,EAAAA,OACZP,EAAU,OAAHlgB,QAAG,IAAHA,GAAS,QAANqgB,EAAHrgB,EAAK9O,YAAI,IAAAmvB,GAAM,QAANC,EAATD,EAAWnvB,YAAI,IAAAovB,OAAZ,EAAHA,EAAiBI,MACc,KAAhC,OAAH1gB,QAAG,IAAHA,GAAS,QAANugB,EAAHvgB,EAAK9O,YAAI,IAAAqvB,GAAM,QAANC,EAATD,EAAWrvB,YAAI,IAAAsvB,OAAZ,EAAHA,EAAiBG,gBAEhBf,GAAmB,EAE/B,CAAE,MAAOxvB,GAET,CAAC,QAEGgwB,GAAgB,EACpB,GAELQ,EAAW,GACZ,IAEF,MAAMC,GAAsBtP,EAAAA,GAAAA,IAAapZ,MAAOqZ,EAAUC,KACtD,GAAoB,IAAhBsO,EAAKjrB,OAEL,YADAkmB,EAAS,8BAGbA,EAAS,IACT,IAAInV,EAAO,CACPka,KAAKA,EACLvO,WACAC,aAGJ/F,GAAW,GACX,IAAK,IAADoV,EAAAC,EAAAC,EACA,IAAIhhB,QAAYihB,EAAAA,EAAAA,KAAqBpb,IACpC7M,EAAAA,EAAAA,GAAgB,OAAHgH,QAAG,IAAHA,GAAS,QAAN8gB,EAAH9gB,EAAK9O,YAAI,IAAA4vB,OAAN,EAAHA,EAAW1wB,MAAW,OAAH4P,QAAG,IAAHA,GAAS,QAAN+gB,EAAH/gB,EAAK9O,YAAI,IAAA6vB,OAAN,EAAHA,EAAW9nB,SACpC,OAAH+G,QAAG,IAAHA,GAAS,QAANghB,EAAHhhB,EAAK9O,YAAI,IAAA8vB,GAATA,EAAW5wB,OAIZwvB,GAAmB,EAM3B,CAAE,MAAOxvB,GACLC,QAAQD,MAAM,qBAAsBA,EACxC,CAAC,QACGsb,GAAW,EACf,KAoDEwV,GAAwB3P,EAAAA,GAAAA,IAAcpZ,MAAOqZ,EAAUC,KACzD/F,GAAW,GACR,IAAI7F,EAAO,CACV2L,WACAC,aAGF,IACE,IAAIzR,QAAYmhB,EAAAA,EAAAA,KAAiCtb,GAG9C,IAADub,EADA,IAAIphB,EAAI5P,MA3DE+H,WAIhB,GAHA9H,QAAQ6S,IAAI2C,EAAO,eACIwb,EAAAA,EAAAA,GAAW,gDAI9B,YADAC,MAAM,uEAIV,MAAMxJ,EAAU,CACZ7C,IAAKsM,GAAAA,GACLC,OAAQ3b,EAAK2b,OACbC,SAAU,MACVnxB,KAAM,QACNoxB,YAAa,yBACbC,SAAe,OAAJ9b,QAAI,IAAJA,OAAI,EAAJA,EAAMuH,GACjBwU,QAASzpB,eAAgBI,GAAW,IAADspB,EAAAC,EAAAC,EAG/B,IAAI/hB,QAAcgiB,EAAAA,EAAAA,KAAmCzpB,IACrDS,EAAAA,EAAAA,GAAgB,OAAHgH,QAAG,IAAHA,GAAS,QAAN6hB,EAAH7hB,EAAK9O,YAAI,IAAA2wB,OAAN,EAAHA,EAAWzxB,MAAW,OAAH4P,QAAG,IAAHA,GAAS,QAAN8hB,EAAH9hB,EAAK9O,YAAI,IAAA4wB,OAAN,EAAHA,EAAW7oB,SAC3CyS,GAAW,GACJ,OAAH1L,QAAG,IAAHA,GAAS,QAAN+hB,EAAH/hB,EAAK9O,YAAI,IAAA6wB,GAATA,EAAW3xB,OAGXwvB,GAAmB,EAG3B,EACAqC,QAAS,CACL3xB,KAAM,YACNof,MAAO,mBACPwS,QAAS,cAEbC,MAAO,CACH5qB,MAAO,YAIT6qB,EAAgB,IAAIvW,OAAOwW,SAASvK,GAC1CsK,EAAcE,GAAG,kBAAkBnqB,eAAgBI,GAAU,IAADgqB,EAAAC,EACxD,IAAIxiB,QAAcgiB,EAAAA,EAAAA,KAA2C,OAARzpB,QAAQ,IAARA,OAAQ,EAARA,EAAUnI,QAC/D4I,EAAAA,EAAAA,GAAgB,OAAHgH,QAAG,IAAHA,GAAS,QAANuiB,EAAHviB,EAAK9O,YAAI,IAAAqxB,OAAN,EAAHA,EAAWnyB,MAAW,OAAH4P,QAAG,IAAHA,GAAS,QAANwiB,EAAHxiB,EAAK9O,YAAI,IAAAsxB,OAAN,EAAHA,EAAWvpB,SAC3CyS,GAAW,EAEnB,IACI0W,EAAcxD,MAAM,EAeZ6D,CAAe,OAAHziB,QAAG,IAAHA,GAAS,QAANohB,EAAHphB,EAAK9O,YAAI,IAAAkwB,OAAN,EAAHA,EAAWlwB,KAE7B,CAAE,MAAOd,GAET,KAMN,OAAG+vB,GAGKluB,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,KAMJN,EAAAA,EAAAA,KAACmI,EAAAA,EAAS,CAACvH,MAAO,CAAEiE,UAAW,OAAQhE,QAAS,OAAQ4E,eAAgB,UAAW1F,UAC/EJ,EAAAA,EAAAA,MAAC8I,EAAAA,EAAI,CACD7H,MAAO,CACH+D,QAAS,OACT1D,SAAU,QACVT,MAAO,OACPsE,UAAW,+BACXF,aAAc,QAChB7E,SAAA,EAGFC,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CAACtD,QAAQ,KAAK8G,MAAM,SAASvD,cAAY,EAACvE,MAAO,CAAC0E,MAAM,sBAAsBvF,SAAC,2BAG1FJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAU,CAACtD,QAAQ,QAAQ8G,MAAM,SAASvD,cAAY,EAACvE,MAAO,CAAC0E,MAAM,sBAAsBvF,SAAA,CAAC,6BAC9D2tB,EAAiB,eAAiB,sBAEjE/tB,EAAAA,EAAAA,MAAC0Y,EAAAA,EAAW,CAACwD,UAAU,WAAWjb,MAAO,CAAEJ,MAAO,OAAQ+b,aAAc,QAASxc,SAAA,EAC7EC,EAAAA,EAAAA,KAACywB,EAAAA,EAAS,CAAC5U,UAAU,SAASjb,MAAO,CAAEyE,WAAY,OAAQkX,aAAc,SAAUjX,MAAM,sBAAuBvF,SAAC,uBAGjHJ,EAAAA,EAAAA,MAACgnB,EAAAA,EAAU,CACP,aAAW,iBACXtoB,KAAK,iBACLsF,MAAOiqB,EACP1iB,SAAWC,IACP0iB,EAAmB1iB,EAAEC,OAAOzH,OAC5BoqB,EAAQ,IACRhF,EAAS,GAAG,EACdhpB,SAAA,EAEFC,EAAAA,EAAAA,KAAC+W,EAAAA,EAAgB,CACbpT,MAAM,UACNqT,SAAShX,EAAAA,EAAAA,KAAC6mB,EAAAA,EAAK,CAACvhB,MAAM,YACtBmE,MAAM,kBACN7I,MAAO,CACHkB,gBAAqC,YAApB8rB,EAAgC,UAAY,cAC7DhpB,aAAc,MACdD,QAAS,SACT+rB,WAAY,WAGpB1wB,EAAAA,EAAAA,KAAC+W,EAAAA,EAAgB,CACbpT,MAAM,SACNqT,SAAShX,EAAAA,EAAAA,KAAC6mB,EAAAA,EAAK,CAACvhB,MAAM,cACtBmE,MAAM,SACN7I,MAAO,CACHkB,gBAAqC,WAApB8rB,EAA+B,UAAY,cAC5DhpB,aAAc,MACdD,QAAS,SACT+rB,WAAY,gBAM3B9C,IACGjuB,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EACIC,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CAACtD,QAAQ,KAAK8G,MAAM,SAAS9H,MAAO,CAAEiE,UAAW,OAAQS,MAAM,sBAAuBvF,SAAE,oBAI9E,WAApB6tB,IACG5tB,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACNwF,MAAM,qBACN7H,QAAQ,WACR8H,WAAS,EACTC,OAAO,SACPrK,KAAK,WACLqE,MAAOmqB,EACP5iB,SAAWC,GAAM4iB,EAAQ5iB,EAAEC,OAAOzH,MAAM6c,QAAQ,MAAO,IAAIlW,MAAM,EAAG,IACpEnM,QAASA,EACT0L,WAAY1L,EACZ+J,UAAQ,EACR7D,GAAI,CACA,2BAA4B,CAC1B,mBAAoB,CAAEC,YAAa,sBACnC,yBAA0B,CAAEA,YAAa,2BAMvD3E,EAAAA,EAAAA,MAACgC,EAAAA,EAAM,CACHE,QAA6B,WAApB+rB,EAA+BgB,EAAsBK,EAC9DrtB,QAAQ,YAER0D,MAAM,UACNoE,WAAS,EACTa,SAAUiP,EACVnV,GAAI,CACAC,YAAa,qBAEbxC,gBAAiB,qBACjBwD,MAAO,SAEX1E,MAAO,CACHiE,UAAW,OACXF,QAAS,SACTP,SAAU,OACViB,WAAY,QACdtF,SAAA,CACL,OACQiuB,YAKb,EA0JpB,GAxJoB2C,IAAyB,IAAxB,iBAAC1P,GAAiB0P,EACnC,MAAOC,EAAUC,IAAe31B,EAAAA,EAAAA,UAAS,IAClCke,EAAcpO,IAAmB9P,EAAAA,EAAAA,WAAS,IAC1C41B,EAActE,IAAkBtxB,EAAAA,EAAAA,UAAS,KAExCwyB,EAAe/O,IAAqBzjB,EAAAA,EAAAA,WAAS,IAC9C61B,EAAiBpD,IAAsBzyB,EAAAA,EAAAA,WAAS,IAChD81B,EAAcC,IAAiB/1B,EAAAA,EAAAA,WAAS,IAExCg2B,EAAgBC,IAAqBj2B,EAAAA,EAAAA,WAAS,IAC9CujB,EAAcC,IAAkBxjB,EAAAA,EAAAA,UAAS,CAAC,IAC1CimB,EAAO3C,IAAWtjB,EAAAA,EAAAA,UAAS,CAAC,IAC5Bk2B,EAAqBC,IAAyBn2B,EAAAA,EAAAA,WAAS,IACvDse,EAAUC,IAAcve,EAAAA,EAAAA,WAAS,IACjCo2B,EAAapQ,IAAiBhmB,EAAAA,EAAAA,WAAS,GAExCq2B,EAAiBA,KACrBJ,GAAmBhqB,IAAOA,GAAI,EA2EhC,OAJA/K,EAAAA,EAAAA,YAAU,KAjEiB8J,WACzBgb,GAAc,GACZ,IAAK,IAADsQ,EACA,IAAIzjB,QAAa0jB,EAAAA,EAAAA,OACjB,IAAwB,KAAlB,OAAH1jB,QAAG,IAAHA,GAAS,QAANyjB,EAAHzjB,EAAK9O,YAAI,IAAAuyB,OAAN,EAAHA,EAAWrzB,OACd,CAAC,IAADuzB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAuCQC,EAAAC,EArCJ,IAAyC,KAAnC,OAAH1lB,QAAG,IAAHA,GAAS,QAAN2jB,EAAH3jB,EAAK9O,YAAI,IAAAyyB,GAAM,QAANC,EAATD,EAAWzyB,YAAI,IAAA0yB,OAAZ,EAAHA,EAAiB+B,kBAKlB,OAHA7C,EAAY,GACZrE,EAAe,wBACfpT,GAAa,GAQf,IAJyC,KAAnC,OAAHrL,QAAG,IAAHA,GAAS,QAAN6jB,EAAH7jB,EAAK9O,YAAI,IAAA2yB,GAAM,QAANC,EAATD,EAAW3yB,YAAI,IAAA4yB,OAAZ,EAAHA,EAAiB6B,mBAElB1oB,GAAgB,IAEoB,KAAhC,OAAH+C,QAAG,IAAHA,GAAS,QAAN+jB,EAAH/jB,EAAK9O,YAAI,IAAA6yB,GAAM,QAANC,EAATD,EAAW7yB,YAAI,IAAA8yB,OAAZ,EAAHA,EAAiB4B,eAIhB,OAFA9C,EAAY,QACZrE,EAAe,mBAGjB,IAAwC,KAAlC,OAAHze,QAAG,IAAHA,GAAS,QAANikB,EAAHjkB,EAAK9O,YAAI,IAAA+yB,GAAM,QAANC,EAATD,EAAW/yB,YAAI,IAAAgzB,OAAZ,EAAHA,EAAiB2B,iBAIhB,OAFA/C,EAAY,QACZrE,EAAe,mBAGjB,IAA4C,KAAtC,OAAHze,QAAG,IAAHA,GAAS,QAANmkB,EAAHnkB,EAAK9O,YAAI,IAAAizB,GAAM,QAANC,EAATD,EAAWjzB,YAAI,IAAAkzB,OAAZ,EAAHA,EAAiBpF,qBAIhB,OAFA8D,EAAY,QACZrE,EAAe,mBAGrB,IAAyC,KAAnC,OAAHze,QAAG,IAAHA,GAAS,QAANqkB,EAAHrkB,EAAK9O,YAAI,IAAAmzB,GAAM,QAANC,EAATD,EAAWnzB,YAAI,IAAAozB,OAAZ,EAAHA,EAAiBqB,oBAAgE,KAAhC,OAAH3lB,QAAG,IAAHA,GAAS,QAANukB,EAAHvkB,EAAK9O,YAAI,IAAAqzB,GAAM,QAANC,EAATD,EAAWrzB,YAAI,IAAAszB,OAAZ,EAAHA,EAAiBoB,iBAA+D,KAAlC,OAAH5lB,QAAG,IAAHA,GAAS,QAANykB,EAAHzkB,EAAK9O,YAAI,IAAAuzB,GAAM,QAANC,EAATD,EAAWvzB,YAAI,IAAAwzB,OAAZ,EAAHA,EAAiBmB,mBAAqE,KAAtC,OAAH7lB,QAAG,IAAHA,GAAS,QAAN2kB,EAAH3kB,EAAK9O,YAAI,IAAAyzB,GAAM,QAANC,EAATD,EAAWzzB,YAAI,IAAA0zB,OAAZ,EAAHA,EAAiB5F,uBAA0E,KAAvC,OAAHhf,QAAG,IAAHA,GAAS,QAAN6kB,EAAH7kB,EAAK9O,YAAI,IAAA2zB,GAAM,QAANC,EAATD,EAAW3zB,YAAI,IAAA4zB,OAAZ,EAAHA,EAAiBgB,sBAGzM,YADArH,EAAe,2BAIjB,IAAyC,KAAnC,OAAHze,QAAG,IAAHA,GAAS,QAAN+kB,EAAH/kB,EAAK9O,YAAI,IAAA6zB,GAAM,QAANC,EAATD,EAAW7zB,YAAI,IAAA8zB,OAAZ,EAAHA,EAAiBW,oBAAgE,KAAhC,OAAH3lB,QAAG,IAAHA,GAAS,QAANilB,EAAHjlB,EAAK9O,YAAI,IAAA+zB,GAAM,QAANC,EAATD,EAAW/zB,YAAI,IAAAg0B,OAAZ,EAAHA,EAAiBU,iBAA+D,KAAlC,OAAH5lB,QAAG,IAAHA,GAAS,QAANmlB,EAAHnlB,EAAK9O,YAAI,IAAAi0B,GAAM,QAANC,EAATD,EAAWj0B,YAAI,IAAAk0B,OAAZ,EAAHA,EAAiBS,mBAAsE,KAAtC,OAAH7lB,QAAG,IAAHA,GAAS,QAANqlB,EAAHrlB,EAAK9O,YAAI,IAAAm0B,GAAM,QAANC,EAATD,EAAWn0B,YAAI,IAAAo0B,OAAZ,EAAHA,EAAiBtG,uBAA0E,KAAvC,OAAHhf,QAAG,IAAHA,GAAS,QAANulB,EAAHvlB,EAAK9O,YAAI,IAAAq0B,GAAM,QAANC,EAATD,EAAWr0B,YAAI,IAAAs0B,OAAZ,EAAHA,EAAiBM,sBAMxM,OAJArH,EAAe,qBACf6E,EAAyB,OAAHtjB,QAAG,IAAHA,GAAS,QAANylB,EAAHzlB,EAAK9O,YAAI,IAAAu0B,GAAM,QAANC,EAATD,EAAWv0B,YAAI,IAAAw0B,OAAZ,EAAHA,EAAiBI,qBAKjD,CACJ,CAAE,MAAO11B,GAET,CAAC,QAEGsb,GAAW,GACXyH,GAAc,EAClB,GAQA4S,EAAoB,GACtB,CAAC5C,IAEA1X,EAEQ,KAKU,iBAAhBsX,IAAyD,IAAvBM,GAGnCpxB,EAAAA,EAAAA,KAACoC,EAAwB,CAAArC,UACvBC,EAAAA,EAAAA,KAAC+zB,EAAe,OAMpBp0B,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,CACCuxB,IAActxB,EAAAA,EAAAA,KAACg0B,GAAAA,EAAM,KACtBh0B,EAAAA,EAAAA,KAAA,OAAKK,UAAU,cAAaN,UAACC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACf,4BAAhB+wB,IACC9wB,EAAAA,EAAAA,KAACoc,GAAiB,IAGJ,oBAAhB0U,IACC9wB,EAAAA,EAAAA,KAACmI,EAAAA,EAAS,CAACvH,MAAO,CAAEiE,UAAW,QAAS9E,SAElCqZ,EAQG2X,GAGDpxB,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EACIJ,EAAAA,EAAAA,MAACs0B,EAAAA,EAAI,CAACtwB,MAAOitB,EAAU1lB,SAAUA,CAACC,EAAG+oB,IAAarD,EAAYqD,GAAWp0B,UAAQ,EAAAC,SAAA,EAC7EC,EAAAA,EAAAA,KAACm0B,EAAAA,EAAG,CAAC1qB,MAAM,cAAcc,UAAU,KACnCvK,EAAAA,EAAAA,KAACm0B,EAAAA,EAAG,CAAC1qB,MAAM,yBAAyBc,UAAU,KAC9CvK,EAAAA,EAAAA,KAACm0B,EAAAA,EAAG,CAAC1qB,MAAM,gCAAgCc,UAAU,KAErDvK,EAAAA,EAAAA,KAACm0B,EAAAA,EAAG,CAAC1qB,MAAM,YAAYc,UAAU,QAErC5K,EAAAA,EAAAA,MAAC8I,EAAAA,EAAI,CAAC7H,MAAO,CAAE+D,QAAS,OAAQE,UAAW,OAAQC,UAAW,gCAAiC/E,SAAA,CAC7E,IAAb6wB,IAAkB5wB,EAAAA,EAAAA,KAACghB,GAAU,CAACE,cAAeA,EAAeD,iBAAkBA,EAAkBE,KAAMA,EAAMC,WAAYmQ,IAC3G,IAAbX,IAAkB5wB,EAAAA,EAAAA,KAACooB,GAAoB,CAAEhH,WAAYmQ,IACxC,IAAbX,IAAkB5wB,EAAAA,EAAAA,KAACwrB,GAAmB,CAACpK,WAAYmQ,IACtC,IAAbX,IAAkB5wB,EAAAA,EAAAA,KAACusB,GAAe,CAACC,eAAgBA,EAAgBpL,WAAYmQ,WAdxFvxB,EAAAA,EAAAA,KAACytB,GAAc,CAACE,mBAAoBA,EAAoBD,eAAgBA,KARxE1tB,EAAAA,EAAAA,KAACue,GAAmB,CAChBvT,gBAAiBA,EACjB2T,kBAAmBA,EACnBD,eAAgBA,EAChBD,YAAaA,EACbD,QAASA,QAuBlB,C,kDC79DJ,MAAMxD,EAAaU,GAAQ0Y,EAAAA,IAAgB1Y,GAAO,G,mCCJlD,MAAO2Y,EAAcA,IACjB,IAAIh4B,SAAQ,CAACC,EAASg4B,KACvB/3B,UAAUg4B,YACZh4B,UAAUg4B,YAAYC,oBACnBja,IAECje,EAAQ,CACNijB,SAAUhF,EAASka,OAAOlV,SAC1BC,UAAWjF,EAASka,OAAOjV,WAC3B,IAEHrhB,IACKA,EAAMu2B,OAASv2B,EAAMw2B,mBACvBtF,MAAM,qCAERiF,EAAOn2B,EAAM,GAEf,CACEy2B,oBAAoB,EACpBC,QAAS,IACTC,WAAY,IAGhBR,EAAO,IAAIS,MAAM,gCACnB,G,mCCxBC,MAAM3F,EAAcruB,GAChB,IAAI1E,SAAQ,CAACC,EAASg4B,KACzB,MAAMU,EAASpa,SAASqa,cAAc,UACtCD,EAAOj0B,IAAMA,EACbi0B,EAAO9uB,OAAQ,EACf8uB,EAAOE,OAAS,IAAM54B,GAAQ,GAC9B04B,EAAOG,QAAU,IAAMb,EAAO,IAAIS,MAAM,0BAADxzB,OAA2BR,KAClE6Z,SAAShH,KAAKwhB,YAAYJ,EAAO,G,kDCJ1B,SAASjuB,EAAa5I,GAA0C,IAAnC6I,EAAOwK,UAAA3O,OAAA,QAAA4O,IAAAD,UAAA,GAAAA,UAAA,GAAG,wBAExC,IAAVrT,EAAkBk3B,EAAAA,GAAMC,QAAQtuB,GAAWquB,EAAAA,GAAMl3B,MAAM6I,EAE3D,C,iDCLA,MAcA,EAduBuuB,GAAarvB,iBAChC,IACI,IAAI,SAAEqZ,EAAQ,UAAEC,SAAoB6U,EAAAA,EAAAA,KAEpC,IAAK9U,IAAaC,EACd,OAAO6P,MAAM,0BAChB,QAAAmG,EAAAhkB,UAAA3O,OANqC4yB,EAAI,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJF,EAAIE,GAAAnkB,UAAAmkB,GAQ3C,aAAaJ,EAAShW,EAAUC,KAAeiW,EAClD,CAAE,MAAOt3B,GACLC,QAAQD,MAAM,2BAA4BA,EAC9C,CACJ,C","sources":["components/compeleteRegister/VideoRecorder.js","pages/couier/CourierDashboardProvider.js","pages/couier/CouierDashboard.jsx","hooks/useCourierImageUploadOnboard.js","pages/couier/CourierKycPending.jsx","pages/couier/CouierIndex.jsx","utils/genrateUrl.js","utils/getLocation.js","utils/loadScript.js","utils/toastMessage.js","utils/withLocation.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nconst detectWebcam = () => {\r\n  return new Promise((resolve) => {\r\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n      resolve(false);\r\n    } else {\r\n      navigator.mediaDevices.enumerateDevices()\r\n        .then(devices => {\r\n          resolve(devices.some(device => device.kind === 'videoinput'));\r\n        })\r\n        .catch(() => {\r\n          resolve(false);\r\n        });\r\n    }\r\n  });\r\n};\r\n\r\nconst VideoRecorder = ({ show, handleClose, onSave }) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [recordedVideo, setRecordedVideo] = useState(null);\r\n  const [timer, setTimer] = useState(0);\r\n  const [cameraError, setCameraError] = useState(null);\r\n  const [isCameraOn, setIsCameraOn] = useState(true);\r\n  const [hasWebcam, setHasWebcam] = useState(null);\r\n  const videoRef = useRef(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const streamRef = useRef(null);\r\n  const chunksRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      detectWebcam().then(result => {\r\n        setHasWebcam(\"result\",result);\r\n        if (!result) {\r\n          setCameraError(\"No webcam detected. Please connect a webcam and try again.\");\r\n        }\r\n      });\r\n    }\r\n  }, [show]);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (isRecording && !isPaused) {\r\n      interval = setInterval(() => {\r\n        setTimer((prevTimer) => prevTimer + 1);\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isRecording, isPaused]);\r\n\r\n  const startRecording = useCallback(() => {\r\n    if (!hasWebcam) {\r\n      setCameraError(\"No webcam detected. Please connect a webcam and try again.\");\r\n      return;\r\n    }\r\n\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then(stream => {\r\n        videoRef.current.srcObject = stream;\r\n        streamRef.current = stream;\r\n        mediaRecorderRef.current = new MediaRecorder(stream);\r\n        mediaRecorderRef.current.ondataavailable = handleDataAvailable;\r\n        mediaRecorderRef.current.onstop = handleStop;\r\n        mediaRecorderRef.current.start(1000);\r\n        setIsRecording(true);\r\n        setIsPaused(false);\r\n        setTimer(0);\r\n        chunksRef.current = [];\r\n        setCameraError(null);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error accessing media devices:\", error);\r\n        if (error.name === 'NotAllowedError') {\r\n          setCameraError(\"Please give permission to allow camera access and refresh page.\");\r\n        } else if (error.name === 'NotFoundError') {\r\n          setCameraError(\"System does not have a camera or camera is not responding. Please use another system to record video.\");\r\n        } else {\r\n          setCameraError(\"An error occurred while trying to access the camera. Please try again.\");\r\n        }\r\n      });\r\n  }, [hasWebcam]);\r\n\r\n   /**\r\n   * stopRecording function use for stop recording\r\n   * @return void\r\n   * @author xyz | <from Needu>\r\n   * @email xyz.srivastav@paypanda.in\r\n   * @since 09/08/2024\r\n   */\r\n\r\n  const stopRecording = useCallback(() => {\r\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\r\n      mediaRecorderRef.current.stop();\r\n      streamRef.current.getTracks().forEach(track => track.stop());\r\n    }\r\n  }, []);\r\n  /**\r\n   * resumeRecording function use for resume recording recording\r\n   * @return void\r\n   * @author xyz | <from Needu>\r\n   * @email xyz.srivastav@paypanda.in\r\n   * @since 09/08/2024\r\n   */\r\n\r\n  const pauseRecording = useCallback(() => {\r\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === \"recording\") {\r\n      mediaRecorderRef.current.pause();\r\n      setIsPaused(true);\r\n    }\r\n  }, []);\r\n\r\n    /**\r\n   * resumeRecording function use for resume recording recording\r\n   * @return void\r\n   * @author xyz | <from Needu>\r\n   * @email xyz.srivastav@paypanda.in\r\n   * @since 09/08/2024\r\n   */\r\n\r\n  const resumeRecording = useCallback(() => {\r\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === \"paused\") {\r\n      mediaRecorderRef.current.resume();\r\n      setIsPaused(false);\r\n    }\r\n  }, []);\r\n   /**\r\n   * handleDataAvailable function use hadling recorded video size\r\n   * @return void\r\n   * @author xyz | <from Needu>\r\n   * @email xyz.srivastav@paypanda.in\r\n   * @since 09/08/2024\r\n   */\r\n\r\n  const handleDataAvailable = useCallback(({ data }) => {\r\n    if (data.size > 0) {\r\n      chunksRef.current.push(data);\r\n    }\r\n  }, []);\r\n\r\n   /**\r\n   * handleStop function use for handling stop and close of recording Pupop\r\n   * @return void\r\n   * @author xyz | <from Needu>\r\n   * @email xyz.srivastav@paypanda.in\r\n   * @since 09/08/2024\r\n   */\r\n\r\n  const handleStop = useCallback(() => {\r\n    const videoBlob = new Blob(chunksRef.current, { type: \"video/webm\" });\r\n    const videoUrl = URL.createObjectURL(videoBlob);\r\n    setRecordedVideo(videoUrl);\r\n    setIsRecording(false);\r\n    setIsPaused(false);\r\n  }, []);\r\n\r\n\r\n  /**\r\n   * handleSave function use for save and send to video kyc page\r\n   * @return void\r\n   * @author xyz | <from Needu>\r\n   * @email xyz.srivastav@paypanda.in\r\n   * @since 09/08/2024\r\n   */\r\n  const handleSave = () => {\r\n    onSave(recordedVideo);\r\n    handleClose();\r\n  };\r\n /**\r\n   * handleCancel function use cancel the final recording\r\n   * @return void\r\n   * @author xyz | <from Needu>\r\n   * @email xyz.srivastav@paypanda.in\r\n   * @since 09/08/2024\r\n   */\r\n  const handleCancel = () => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach(track => track.stop());\r\n    }\r\n    setRecordedVideo(null);\r\n    setIsRecording(false);\r\n    setIsPaused(false);\r\n    setTimer(0);\r\n    setCameraError(null);\r\n    setIsCameraOn(true);\r\n    handleClose();\r\n  };\r\n  /**\r\n   * formatTime function use for getting time formate\r\n   * @return string\r\n   * @author xyz | <from Needu>\r\n   * @email xyz.srivastav@paypanda.in\r\n   * @since 09/08/2024\r\n   */\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n    /**\r\n   * formatTime function use for toggel camera\r\n   * @return void\r\n   * @author xyz | <from Needu>\r\n   * @email xyz.srivastav@paypanda.in\r\n   * @since 09/08/2024\r\n   */\r\n  const toggleCamera = () => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getVideoTracks().forEach(track => {\r\n        track.enabled = !isCameraOn;\r\n      });\r\n      setIsCameraOn(!isCameraOn);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Modal show={show} onHide={handleCancel} centered size=\"lg\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Record Video</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"text-center\">\r\n        {hasWebcam === false ? (\r\n          <div className=\"alert alert-danger\">\r\n            No webcam detected. Please connect a webcam and try again.\r\n          </div>\r\n        ) : cameraError ? (\r\n          <div className=\"alert alert-danger\">\r\n            {cameraError}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {(!isRecording || !recordedVideo) && (\r\n              <video ref={videoRef} width=\"100%\" height=\"auto\" autoPlay muted={isRecording} style={{ display: recordedVideo ? 'none' : 'block',background : recordedVideo ? '' : 'black'}}/>\r\n            )}\r\n            {recordedVideo && !isRecording && (\r\n              <video src={recordedVideo} controls style={{width: '100%', maxWidth: '30rem'}} />\r\n            )}\r\n            <div className=\"mt-3\">\r\n              {isRecording && <div>Recording Time: {formatTime(timer)}</div>}\r\n              {!isRecording && !recordedVideo && (\r\n                <Button variant=\"primary\" onClick={startRecording}>\r\n                  Start Recording\r\n                </Button>\r\n              )}\r\n              {isRecording && !isPaused && (\r\n                <>\r\n                  <Button variant=\"warning\" onClick={pauseRecording} className=\"me-2\">\r\n                    Pause\r\n                  </Button>\r\n                  <Button variant=\"danger\" onClick={stopRecording}>\r\n                    Stop Recording\r\n                  </Button>\r\n                </>\r\n              )}\r\n              {isRecording && isPaused && (\r\n                <>\r\n                  <Button variant=\"success\" onClick={resumeRecording} className=\"me-2\">\r\n                    Resume\r\n                  </Button>\r\n                  <Button variant=\"danger\" onClick={stopRecording}>\r\n                    Stop Recording\r\n                  </Button>\r\n                </>\r\n              )}\r\n              {recordedVideo && !isRecording && (\r\n                <>\r\n                  <Button variant=\"success\" style={{backgroundColor:'var(--bs-primary1)' , border:\"none\"}} onClick={handleSave} className=\"me-2 mt-2\">\r\n                    Save Video\r\n                  </Button>\r\n                  <Button variant=\"secondary\" onClick={() => {\r\n                    setRecordedVideo(null);\r\n                    setTimer(0);\r\n                  }} className=\"mt-2\">\r\n                    Retake\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default VideoRecorder;","import { createContext, useContext, useState } from \"react\";\r\n\r\nconst  CourierContext = createContext()   \r\n\r\nexport const  CourierDashboardProvider = ({children})=> {\r\n      const [warehouseDetails , setWarehouseDetails] = useState(null)\r\n      const [city , setCity] = useState('')\r\n      const [shippingCharges , setShippingCharges] = useState({})\r\n      const [qty, setQty] = useState(['']);\r\n      const [length, setLength] = useState(['']);\r\n      const [width, setWidth] = useState(['']);\r\n      const [height, setHeight] = useState(['']);\r\n         const [formData, setFormData] = useState({\r\n          pincode: \"\",\r\n          weight: \"\",\r\n          invoiceValue: \"\",\r\n          insurance: false,\r\n          paymode :\"Prepaid\",\r\n          ewayBill :\"\",\r\n          appointmentDelivery: false,\r\n        });\r\n\r\n    return (\r\n        <>\r\n        <CourierContext.Provider value={{city ,setCity, shippingCharges ,setShippingCharges ,formData , setFormData ,height , setHeight , qty , setQty ,length ,setLength , width ,setWidth , warehouseDetails , setWarehouseDetails} }>\r\n            {children}\r\n        </CourierContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const useCourierDashboard = ()=> useContext(CourierContext)","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Tabs,\r\n  Tab,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport {\r\n\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n \r\n  Switch,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport { RadioGroup, Radio , Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\r\n// import { useFormik } from \"formik\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { checkCourierService, checkShipRocketCourierService, createShipRocketOrder, createWareHouse, getCourierWareHouseInformation, getPincodeDetails, getShippingCharge, getWareHouse, pgCourierOrderComplete, pgCourierOrderCompleteCallback, walletCourierOrderComplete } from \"../../api/login/Login\";\r\nimport toastMessage from \"../../utils/toastMessage\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { CourierDashboardProvider, useCourierDashboard } from \"./CourierDashboardProvider\";\r\nimport { loadScript } from \"../../utils/loadScript\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { razor_pay_key } from \"../../baseUrl\";\r\n\r\n\r\n// Reusable TextField with small label\r\nconst CustomTextField = ({ hide = false, ...rest }) => (\r\n  <TextField\r\n    variant=\"outlined\"\r\n    size=\"small\"\r\n    InputLabelProps={{\r\n      shrink: true,\r\n      style: { fontSize: \"16px\" },\r\n    }}\r\n    sx={{\r\n      display: hide ? 'none' : 'block',\r\n      \"& .MuiOutlinedInput-root\": {\r\n        \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n        \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n      },\r\n    }}\r\n    {...rest}\r\n  />\r\n);\r\n\r\n\r\n\r\nconst CustomOrderCheckOutBox = ({title , children})=> \r\n  <Paper\r\n  sx={{\r\n    padding: 3,\r\n    borderRadius: 2,\r\n    border: \"1px solid #ccc\",\r\n    marginTop: 4,\r\n    // background: \"linear-gradient(135deg,  #F87A1F ,#FFCC29)\",\r\n    boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\r\n  }}\r\n>\r\n    <Box sx={{\r\n      px:2,\r\n      py:1\r\n\r\n    }}>\r\n     {title &&\r\n        <Typography\r\n    variant=\"h6\"\r\n    gutterBottom\r\n    sx={{\r\n      paddingBottom: 2,\r\n      fontWeight: \"600\",\r\n      fontSize: \"18px\",\r\n      color: \"var(--bs-primary1)\",\r\n    }}\r\n  >\r\n    {title}\r\n  </Typography> }\r\n\r\n  <Box   display=\"flex\"\r\n        sx={{\r\n          flexDirection: {\r\n            xs: \"column\",\r\n            sm: \"row\",\r\n          },\r\n          gap: 2,\r\n          flexWrap:'nowrap'\r\n        }}>\r\n          {children}\r\n \r\n  </Box>\r\n  \r\n    </Box>\r\n\r\n\r\n\r\n</Paper>\r\n\r\nconst CustomOrderBox = ({title , children})=> \r\n  <Paper\r\n  sx={{\r\n    padding: 3,\r\n    borderRadius: 2,\r\n    border: \"1px solid #ccc\",\r\n    marginTop: 4,\r\n    \r\n    // background: \"linear-gradient(135deg,  #F87A1F ,#FFCC29)\",\r\n    boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\r\n  }}\r\n>\r\n    <Box sx={{\r\n      px:2,\r\n      py:1\r\n\r\n    }}>\r\n     {title &&\r\n        <Typography\r\n    variant=\"h6\"\r\n    gutterBottom\r\n    sx={{\r\n      paddingBottom: 2,\r\n      fontWeight: \"600\",\r\n      fontSize: \"18px\",\r\n      color: \"var(--bs-primary2)\",\r\n    }}\r\n  >\r\n    {title}\r\n  </Typography> }\r\n\r\n  <Box >\r\n          {children}\r\n \r\n  </Box>\r\n  \r\n    </Box>\r\n\r\n\r\n\r\n</Paper>\r\n\r\nconst InfoBlock = ({ title, value }) => {\r\n  return (\r\n    <Box flex={1}>\r\n      <Typography\r\n        variant=\"h6\"\r\n        gutterBottom\r\n        sx={{\r\n          // fontWeight: \"600\",\r\n          fontSize: \"14px\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Typography\r\n        variant=\"h6\"\r\n        gutterBottom\r\n        sx={{\r\n          // fontWeight: \"600\",\r\n          fontSize: \"14px\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        {value}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst OrderInfoBlock = ({ title, value }) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      width=\"100%\"\r\n    >\r\n      <Typography\r\n        variant=\"h6\"\r\n        gutterBottom\r\n        sx={{\r\n          fontSize: \"14px\",\r\n          color: \"var(--bs-nav)\",\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n\r\n      <Typography\r\n        variant=\"h6\"\r\n        gutterBottom\r\n        sx={{\r\n          fontSize: \"14px\",\r\n          color: \"var(--bs-nav)\",\r\n          opacity: 0.8,\r\n        }}\r\n      >\r\n        {value}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddWareHouse = ({setCheckWareHouse}) => {\r\n  const [warehouseCreationCompelete , setWareHouseCreationComplete] = useState(false)\r\n  const  { setWarehouseDetails }= useCourierDashboard()\r\n\r\n  const warehouseFind = async()=> {\r\n    try {\r\n     let response = await getWareHouse()\r\n    \r\n     if(response?.data?.statusCode === 200 )\r\n     {\r\n      setWarehouseDetails(response?.data?.data)\r\n      setWareHouseCreationComplete(true)\r\n      setCheckWareHouse(true)\r\n     }\r\n    } catch (error) {\r\n     \r\n    } finally {\r\n    }\r\n}\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    pincode: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  // Fetch API data after name is entered\r\n  const fetchWarehouseData = async (value) => {\r\n\r\n    let response  = await createWareHouse({\r\n      warehouseName:value.name,\r\n      business_Address : value?.address\r\n  })\r\n  \r\n\r\n      if(!response?.data?.error)\r\n      {\r\n        let res = await warehouseFind()\r\n       \r\n      \r\n      }\r\n      toastMessage(response?.data?.error , response?.data?.message)\r\n  };\r\n\r\n  const findWarehouse = async ()=>{\r\n\r\n    try {\r\n      let response = await getCourierWareHouseInformation()\r\n      if(response?.data?.error   === false)\r\n      {\r\n        setFormData((pre)=>({...pre ,\r\n          city: response?.data?.data?.business_city,\r\n          state: response?.data?.data?.business_state,\r\n          pincode:  response?.data?.data?.business_pincode,\r\n         address: response?.data?.data?.business_Address, \r\n    }))\r\n      }\r\n    } catch (error) {\r\n      \r\n    }\r\n  \r\n  }\r\n\r\n  useEffect(()=>{\r\n    findWarehouse() \r\n  },[])\r\n\r\n\r\n\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string().required(\"Warehouse name is required\"),\r\n    address: Yup.string().required(\"Warehouse address is required\"),\r\n\r\n  });\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" style={{ marginTop: \"2rem\" }}>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Card style={{ padding: \"2rem\", boxShadow: \"0px 4px 10px rgba(0,0,0,0.1)\" }}>\r\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n              Create a Warehouse\r\n            </Typography>\r\n            <Formik\r\n              initialValues={formData}\r\n              enableReinitialize\r\n              validationSchema={validationSchema}\r\n              onSubmit={async (values, { setSubmitting }) => {\r\n              \r\n                await fetchWarehouseData(values);\r\n                setSubmitting(false);\r\n                \r\n              }}\r\n            >\r\n              {({ getFieldProps, touched, errors, values, setFieldValue , isSubmitting }) => (\r\n                <Form>\r\n                  <Grid container spacing={2}>\r\n                    {/* Name Field (Editable) */}\r\n                    <Grid item xs={6}>\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        {...getFieldProps(\"name\")}\r\n                        error={touched.name && Boolean(errors.name)}\r\n                        helperText={touched.name && errors.name}\r\n                        // onBlur={(e) => {\r\n                        //   if (e.target.value) fetchWarehouseData(e.target.value);\r\n                        // }}\r\n                        sx={{\r\n                          \"& .MuiOutlinedInput-root\": {\r\n                            \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n                            \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n                          },\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <TextField\r\n                        label=\"Address\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        {...getFieldProps(\"address\")}\r\n                        error={touched.address && Boolean(errors.address)}\r\n                        helperText={touched.address && errors.address}\r\n                        // onBlur={(e) => {\r\n                        //   if (e.target.value) fetchWarehouseData(e.target.value);\r\n                        // }}\r\n                        sx={{\r\n                          \"& .MuiOutlinedInput-root\": {\r\n                            \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n                            \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n                          },\r\n                        }}\r\n                      />\r\n                   \r\n                    </Grid>\r\n\r\n                    {/* Other Fields (Disabled) */}\r\n                    {Object.keys(formData)\r\n  .filter((field) => ![\"name\", \"address\"].includes(field))\r\n  .map((field) => (\r\n    <Grid item xs={6} key={field}>\r\n      <TextField\r\n         label={field.charAt(0).toUpperCase() + field.slice(1)}\r\n        {...getFieldProps(field)}\r\n        error={touched[field] && Boolean(errors[field])}\r\n        helperText={touched[field] && errors[field]}\r\n        disabled\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        sx={{\r\n          \"& .MuiOutlinedInput-root\": {\r\n            \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n            \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" },\r\n          },\r\n        }}\r\n      />\r\n    </Grid>\r\n  ))}\r\n\r\n\r\n                  </Grid>\r\n                  <Typography\r\n    variant=\"caption\"\r\n    color=\"textSecondary\"\r\n    sx={{ marginLeft: \"0px\", marginTop: \"-4px\" }}\r\n  >📌 Address Format : Shop No, Street/Colony, Landmark , City, Pincode (दुकान संख्या,  गली या कॉलोनी का नाम, नजदीकी चिन्ह, शहर का नाम, पिनकोड)\r\n  </Typography>\r\n\r\n                  <Box\r\n  display=\"flex\"\r\n  flexDirection={{ xs: \"column\", sm: \"row\" }} // Column on small screens, row on larger screens\r\n  gap={2} // Adds spacing between buttons\r\n  justifyContent=\"center\" // Centers buttons\r\n  alignItems=\"center\"\r\n  mt={3} // Adds top margin\r\n>\r\n  <Button\r\n    type=\"submit\"\r\n    variant=\"outlined\"\r\n    color=\"primary\"\r\n    disabled={warehouseCreationCompelete || isSubmitting}\r\n    sx={{\r\n      width: { xs: \"100%\", sm: \"200px\" }, // Full width on mobile, fixed width on larger screens\r\n      borderColor: \"var(--bs-primary1)\",\r\n      color: \"var(--bs-primary1)\",\r\n    }}\r\n  >\r\n    {isSubmitting ? 'Creating....' : 'Create Warehouse'} \r\n\r\n  </Button>\r\n\r\n \r\n</Box>\r\n\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// const OrderShow = ({onNext})=> {\r\n//    const   { formData , city , warehouseDetails , shippingCharges} =    useCourierDashboard()\r\n\r\n \r\n//   return (\r\n//     <>\r\n//        <Paper\r\n//         sx={{\r\n//           padding: 3,\r\n//           borderRadius: 2,\r\n//           border: \"1px solid #ccc\",\r\n//           marginTop: 4,\r\n//           background: \"linear-gradient(135deg,  #F87A1F ,#FFCC29)\",\r\n//           boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\r\n//         }}\r\n//       >\r\n//         {/* Glass Effect Paper inside */}\r\n//         <Paper\r\n//           sx={{\r\n//             // padding: 3,\r\n//             borderRadius: 2,\r\n//             border: \"1px solid white\",\r\n//             background: \"#fffafa26\",\r\n//             backdropFilter: \"blur(10px)\",\r\n//             WebkitBackdropFilter: \"blur(10px)\",\r\n//             boxShadow: \"0 4px 20px rgba(0, 0, 0, 0.1)\",\r\n//           }}\r\n//         >\r\n//           {/* Content goes here */}\r\n//           <Box sx={{ padding: 2 }}>\r\n//       <Grid container spacing={3} my={0}>\r\n//         {/* Left Section */}\r\n//         <Grid\r\n//           item\r\n//           xs={12}\r\n//           lg={6}\r\n//           my={1}\r\n//           sx={{\r\n//             borderRight: { lg: 1, xs: 0 },\r\n//             borderColor: { lg: 'white', xs: 'transparent' },\r\n//           }}\r\n//         >\r\n//           <Box\r\n//             display=\"flex\"\r\n//             sx={{\r\n//               flexDirection: {\r\n//                 xs: \"column\",\r\n//                 sm: \"row\",\r\n//               },\r\n//               gap: 2,\r\n//             }}\r\n//           >\r\n//             <InfoBlock title=\"Pickup From\" value={`${warehouseDetails?.city} ${warehouseDetails?.pincode}`} />\r\n//             <InfoBlock title=\"Deliver To\" value={`${city} ${formData.pincode}`} />\r\n//           </Box>\r\n//         </Grid>\r\n\r\n//         {/* Right Section */}\r\n//         <Grid item xs={12} lg={6} my={1}>\r\n//           <Box\r\n//             display=\"flex\"\r\n//             sx={{\r\n//               flexDirection: {\r\n//                 xs: \"column\",\r\n//                 sm: \"row\",\r\n//               },\r\n//               flexWrap: \"wrap\",\r\n//               gap: 2,\r\n//               justifyContent: {\r\n//                 sm: \"space-between\",\r\n//                 xs: \"flex-start\",\r\n//               },\r\n//             }}\r\n//           >\r\n//             <InfoBlock title=\"Order Value\" value={`₹ ${shippingCharges?.finalAmount}`} />\r\n//             <InfoBlock title=\"Payment Mode\" value=\"Prepaid\" />\r\n//             <InfoBlock title=\"Dead Weight\" value={`${shippingCharges?.vol_weight} ${shippingCharges?.unit}`} />\r\n//           </Box>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </Box>\r\n\r\n   \r\n//         </Paper>\r\n\r\n//         <Box mt={3} display=\"flex\" justifyContent=\"space-between\">\r\n//         <Button variant=\"outlined\" color=\"success\" \r\n//           onClick={onNext}\r\n       \r\n//         sx={{\r\n//                               // Custom colors\r\n//                                 width: \"45%\" ,\r\n//                                 backgroundColor: 'transparent', // Custom colors\r\n//                                 color: \"white\",\r\n//                                 borderColor: 'white', \r\n\r\n//                               }}>\r\n//           Continue\r\n//         </Button>\r\n//       </Box>\r\n//       </Paper>\r\n\r\n  \r\n    \r\n//     </>\r\n//   )\r\n// }\r\n\r\n// const OrderProcess = ({onNext}) => {\r\n\r\n//    const   {setCity , setShippingCharges , qty , setQty,length,setLength,width,setWidth,height, setHeight,formData,setFormData, warehouseDetails } =  useCourierDashboard()\r\n//    const [serviceAble , setServiceAble] = useState(false)\r\n//    const [errors, setErrors] = useState({});\r\n\r\n\r\n\r\n//   const handleQtyChange = (index, value) => {\r\n//     if (!/^\\d*$/.test(value)) return;\r\n//     const updated = [...qty];\r\n//     updated[index] = value;\r\n//     setQty(updated);\r\n//   };\r\n  \r\n//   const handleLengthChange = (index, value) => {\r\n//     if (!/^\\d*$/.test(value)) return;\r\n//     const updated = [...length];\r\n//     updated[index] = value;\r\n//     setLength(updated);\r\n//   };\r\n  \r\n//   const handleWidthChange = (index, value) => {\r\n//     if (!/^\\d*$/.test(value)) return;\r\n//     const updated = [...width];\r\n//     updated[index] = value;\r\n//     setWidth(updated);\r\n//   };\r\n  \r\n//   const handleHeightChange = (index, value) => {\r\n//     if (!/^\\d*$/.test(value)) return;\r\n//     const updated = [...height];\r\n//     updated[index] = value;\r\n//     setHeight(updated);\r\n//   };\r\n \r\n//   const addMore = () => {\r\n//     setQty(prev => [...prev, '']);\r\n//     setLength(prev => [...prev, '']);\r\n//     setWidth(prev => [...prev, '']);\r\n//     setHeight(prev => [...prev, '']);\r\n//   };\r\n//   const removeItem = (index) => {\r\n//     if (qty.length === 1) return; // prevent removing last one\r\n  \r\n//     setQty(prev => prev.filter((_, i) => i !== index));\r\n//     setLength(prev => prev.filter((_, i) => i !== index));\r\n//     setWidth(prev => prev.filter((_, i) => i !== index));\r\n//     setHeight(prev => prev.filter((_, i) => i !== index));\r\n//   };\r\n  \r\n//   const handleChange = (field, value) => {\r\n//     const onlyNumbers = /^[0-9\\b]+$/;\r\n  \r\n//     // Allow only numbers for numeric fields\r\n//     const numberFields = [\"ewayBill\" ,\"pincode\", \"weight\", \"qty\", \"length\", \"width\", \"height\", \"invoiceValue\"];\r\n//     if (numberFields.includes(field) && value !== \"\" && !onlyNumbers.test(value)) {\r\n//       return; \r\n//     }\r\n  \r\n//     setFormData((prev) => ({ ...prev, [field]: value }));\r\n  \r\n//     // Handle pincode logic\r\n//     if (field === \"pincode\") {\r\n//       if (value.length < 6) {\r\n//         setServiceAble(false);\r\n//       }\r\n//       if (value.length === 6) {\r\n//         checkUserPincode(value);\r\n//       }\r\n//     }\r\n//   };\r\n  \r\n\r\n//  // API call for service availability\r\n//  const checkUserPincode = async (pincode) => {\r\n//   try {\r\n//     let response  = await checkCourierService({pincode})\r\n//     if(!response?.data?.error && response?.data?.statusCode === 200)\r\n//     {\r\n//       setServiceAble(true);\r\n//       setCity(response?.data?.data?.city)\r\n//     }\r\n//     else {\r\n//       setServiceAble(false);\r\n//       setCity('')\r\n//     }\r\n\r\n//   } catch (err) {\r\n//     setServiceAble(false);\r\n   \r\n//   }\r\n// };\r\n\r\n// const validateForm = () => {\r\n//   const newErrors = {};\r\n//   if (!formData.pincode || formData.pincode.length !== 6) {\r\n//     newErrors.pincode = \"Enter a valid 6-digit pincode\";\r\n//   }\r\n\r\n//   if (!formData.weight) {\r\n//     newErrors.weight = \"Weight is required\";\r\n//   }\r\n\r\n//   if (!formData.invoiceValue) {\r\n//     newErrors.invoiceValue = \"Invoice value is required\";\r\n//   }\r\n\r\n//   if ((formData.invoiceValue) > 50000) {\r\n//     if (formData.ewayBill.trim() === \"\") {\r\n//       newErrors.ewayBill = \"E-Way Bill is required\";\r\n//     } else if (formData.ewayBill.length !== 12) {\r\n//       newErrors.ewayBill = \"Enter your 12 Digit E-Way Bill\";\r\n//     }\r\n//   }\r\n\r\n//   qty.forEach((val, idx) => {\r\n//     if (!val) newErrors[`qty${idx}`] = \"Qty required\";\r\n//     if (!length[idx]) newErrors[`length${idx}`] = \"Length required\";\r\n//     if (!width[idx]) newErrors[`width${idx}`] = \"Width required\";\r\n//     if (!height[idx]) newErrors[`height${idx}`] = \"Height required\";\r\n//   });\r\n\r\n//   setErrors(newErrors);\r\n//   return Object.keys(newErrors).length === 0;\r\n// };\r\n\r\n\r\n// const handleSearchCourier = async() => {\r\n//   if (validateForm()) {\r\n//     // Perform courier search logic\r\n//     console.log(\"Searching courier with: \", formData);\r\n\r\n//     const body = {\r\n//       origin: warehouseDetails?.pincode, // assuming pincode is origin\r\n//       destination: formData.pincode || \"\", // add destination pincode field if needed\r\n//       mode: formData.paymode || \"Prepaid\",\r\n//       invoice_value: formData.invoiceValue || \"\",\r\n//       cod_amount: 0, // static or you can set conditionally\r\n//       profit: \"\", // set if needed\r\n//       weight: formData.weight || \"\",\r\n//       qty: qty.map(String),         // ensures all values are string\r\n//       length: length.map(String),\r\n//       width: width.map(String),\r\n//       height: height.map(String),\r\n//       insurance: formData.insurance ? \"Yes\" : \"No\",\r\n//     };\r\n  \r\n\r\n//     try {\r\n//       let response = await getShippingCharge(body)\r\n//         if(response?.data?.statusCode === 200)\r\n//         {\r\n//           setShippingCharges(response?.data?.data)\r\n//           onNext()\r\n//         }\r\n//     } catch (error) {\r\n      \r\n//     }\r\n\r\n//   }\r\n// };\r\n\r\n// const handleReset = () => {\r\n//   setFormData({\r\n//     pincode: \"\",\r\n//     weight: \"\",\r\n//     invoiceValue: \"\",\r\n//     ewayBill:\"\",\r\n//     paymode :\"prepaid\",\r\n//     insurance: false,\r\n//   });\r\n//   setErrors({});\r\n//   setServiceAble(null);\r\n//   setQty([''])\r\n//   setWidth([''])\r\n//   setHeight([''])\r\n//   setLength([''])\r\n// };\r\n   \r\n \r\n//   return (\r\n//     <Paper\r\n//       sx={{\r\n//         padding: 3,\r\n//         borderRadius: 2,\r\n//         border: \"1px solid #ccc\",\r\n     \r\n//         marginTop: 4,\r\n//       }}\r\n//     >\r\n//       <Typography\r\n//         variant=\"h6\"\r\n//         gutterBottom\r\n//         sx={{\r\n//           paddingBottom: 2,\r\n//           fontWeight: \"600\",\r\n//           fontSize: \"16px\",\r\n//           color: \"var(--bs-primary1)\",\r\n//         }}\r\n//       >\r\n//         Pickup & Destination Details\r\n//       </Typography>\r\n//       <Grid container spacing={2}>\r\n//         <Grid item xs={12} sm={6}>\r\n//           <CustomTextField fullWidth label=\"Pickup Area Pincode\" value={warehouseDetails?.pincode} disabled required />\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={6}>\r\n//           <CustomTextField fullWidth label=\"Deliver Area Pincode\"  \r\n//             value={formData.pincode}\r\n//             onChange={(e) => handleChange(\"pincode\", e.target.value)}\r\n//             error={!!errors.pincode}\r\n//             helperText={errors?.pincode}\r\n//             inputProps={{\r\n//               maxLength:6,\r\n//             }}\r\n//             required />\r\n//         </Grid>\r\n//       </Grid>\r\n\r\n//       <Box mt={3}>\r\n//   <Typography\r\n//     variant=\"h6\"\r\n//     gutterBottom\r\n//     sx={{\r\n//       paddingBottom: 1,\r\n//       fontWeight: \"600\",\r\n//       fontSize: \"16px\",\r\n//       color: \"var(--bs-primary1)\",\r\n//     }}\r\n//   >\r\n//     Weight & Dimensions (In cm)\r\n//   </Typography>\r\n\r\n//   {/* First row with Weight */}\r\n//   <Box sx={{ padding: 1 }}>\r\n//     <Grid container spacing={2}>\r\n//       <Grid item xs={6} sm={3}>\r\n//         <CustomTextField\r\n//           fullWidth\r\n//           label=\"Weight (in Kg)\"\r\n//           value={formData.weight}\r\n//           onChange={(e) => handleChange(\"weight\", e.target.value)}\r\n//           error={!!errors.weight}\r\n//           helperText={errors.weight}\r\n//           required\r\n//         />\r\n//       </Grid>\r\n//       <Grid item xs={6} sm={2}>\r\n//         <CustomTextField\r\n//           fullWidth\r\n//           label=\"Qty\"\r\n//           value={qty[0]}\r\n//           onChange={(e) => handleQtyChange(0, e.target.value)}\r\n//           error={!!errors[`qty${0}`]}\r\n//           helperText={errors[`qty${0}`]}\r\n//           required\r\n//         />\r\n//       </Grid>\r\n//       <Grid item xs={4} sm={2}>\r\n//         <CustomTextField\r\n//           fullWidth\r\n//           label=\"Length\"\r\n//           value={length[0]}\r\n//           onChange={(e) => handleLengthChange(0, e.target.value)}\r\n//           error={!!errors[`length${0}`]}\r\n//           helperText={errors[`length${0}`]}\r\n          \r\n//           required\r\n//         />\r\n//       </Grid>\r\n//       <Grid item xs={4} sm={2}>\r\n//         <CustomTextField\r\n//           fullWidth\r\n//           label=\"Width\"\r\n//           value={width[0]}\r\n//           error={!!errors[`width${0}`]}\r\n//           helperText={errors[`width${0}`]}\r\n//           onChange={(e) => handleWidthChange(0, e.target.value)}\r\n//           required\r\n//         />\r\n//       </Grid>\r\n//       <Grid item xs={4} sm={2}>\r\n//         <CustomTextField\r\n//           fullWidth\r\n//           label=\"Height\"\r\n//           value={height[0]}\r\n//           error={!!errors[`height${0}`]}\r\n//           helperText={errors[`height${0}`]}\r\n//           onChange={(e) => handleHeightChange(0, e.target.value)}\r\n//           required\r\n//         />\r\n//       </Grid>\r\n//     </Grid>\r\n//   </Box>\r\n\r\n//   {/* All other dimension rows */}\r\n//   {qty.slice(1).map((_, index) => (\r\n//     <Box sx={{ padding: 1 }} key={index + 1}>\r\n//       <Grid container spacing={2}>\r\n//         <Grid item xs={6} sm={3}></Grid> {/* empty to align with weight field */}\r\n//         <Grid item xs={6} sm={2}>\r\n//           <CustomTextField\r\n//             fullWidth\r\n//             label=\"Qty\"\r\n//             value={qty[index + 1]}\r\n//             onChange={(e) => handleQtyChange(index + 1, e.target.value)}\r\n//             error={!!errors[`qty${index+1}`]}\r\n//             helperText={errors[`qty${index+1}`]}\r\n//             required\r\n//           />\r\n//         </Grid>\r\n//         <Grid item xs={4} sm={2}>\r\n//           <CustomTextField\r\n//             fullWidth\r\n//             label=\"Length\"\r\n//             value={length[index + 1]}\r\n//             onChange={(e) => handleLengthChange(index + 1, e.target.value)}\r\n//             error={!!errors[`length${index+1}`]}\r\n//             helperText={errors[`length${index+1}`]}\r\n//             required\r\n//           />\r\n//         </Grid>\r\n//         <Grid item xs={4} sm={2}>\r\n//           <CustomTextField\r\n//             fullWidth\r\n//             label=\"Width\"\r\n//             value={width[index + 1]}\r\n//             onChange={(e) => handleWidthChange(index + 1, e.target.value)}\r\n//             error={!!errors[`width${index+1}`]}\r\n//             helperText={errors[`width${index+1}`]}\r\n//             required\r\n//           />\r\n//         </Grid>\r\n//         <Grid item xs={4} sm={2}>\r\n//           <CustomTextField\r\n//             fullWidth\r\n//             label=\"Height\"\r\n//             value={height[index + 1]}\r\n//             onChange={(e) => handleHeightChange(index + 1, e.target.value)}\r\n//             error={!!errors[`height${index+1}`]}\r\n//             helperText={errors[`height${index+1}`]}\r\n//             required\r\n//           />\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={1}>\r\n      \r\n      \r\n//   <IconButton color=\"error\" onClick={() => removeItem(index + 1)}>\r\n//     <DeleteIcon />\r\n//   </IconButton>\r\n\r\n//         </Grid>\r\n//       </Grid>\r\n//     </Box>\r\n//   ))}\r\n\r\n//   {/* Add More Button */}\r\n//   <Grid container>\r\n//     <Grid item xs={11} ml={'-10px'}>\r\n\r\n  \r\n \r\n//   <Box mt={2} display={'flex'} justifyContent={'flex-end'}>\r\n//     <Button variant=\"outlined\" onClick={addMore}>\r\n//       + Add More Package\r\n//     </Button>\r\n//   </Box>\r\n//   </Grid>\r\n//   </Grid>\r\n// </Box>\r\n\r\n\r\n//       <Box mt={3}>\r\n//         <Typography\r\n//           variant=\"h6\"\r\n//           gutterBottom\r\n//           sx={{\r\n//             paddingBottom: 1,\r\n//             fontWeight: \"600\",\r\n//             fontSize: \"16px\",\r\n//             color: \"var(--bs-primary1)\",\r\n//           }}\r\n//         >\r\n//           Mode & Invoice Details\r\n//         </Typography>\r\n//         <Grid container spacing={2}>\r\n//           <Grid item xs={12} sm={6}>\r\n//             <FormControl fullWidth >\r\n//               <InputLabel sx={{ fontSize: \"16px\" }} >Payment Mode</InputLabel>\r\n//               <Select label=\"Payment Mode\"   sx={{\r\n//       fontSize: \"14px\",\r\n//       \"& .MuiOutlinedInput-notchedOutline\": {\r\n//         borderColor: \"#ccc\",\r\n//       },\r\n//       \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n//         borderColor: \"var(--bs-primary1)\",\r\n//       },\r\n//       \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n//         borderColor: \"var(--bs-primary1)\",\r\n//       },\r\n//     }}   value={formData.paymode} disabled>\r\n//                 <MenuItem value=\"Prepaid\">Prepaid</MenuItem>\r\n//                 <MenuItem value=\"cod\">Cash on Delivery</MenuItem>\r\n//               </Select>\r\n//             </FormControl>\r\n//           </Grid>\r\n//           <Grid item xs={12} sm={6}>\r\n//             <CustomTextField fullWidth label=\"Invoice Value\" \r\n//               value={formData.invoiceValue}\r\n//               onChange={(e) => handleChange(\"invoiceValue\", e.target.value)}\r\n//               error={!!errors.invoiceValue}\r\n//               helperText={errors.invoiceValue}\r\n//               required />\r\n//           </Grid>\r\n//         </Grid>\r\n//       </Box>\r\n\r\n//       <Box mt={3}>\r\n//         <Grid container spacing={2} alignItems=\"center\">\r\n//           <Grid item xs={12} sm={6}>\r\n//           <FormControlLabel\r\n//               control={\r\n//                 <Checkbox\r\n//                   checked={formData.insurance}\r\n//                   onChange={(e) => handleChange(\"insurance\", e.target.checked)}\r\n//                 />\r\n//               }\r\n//               label=\"Insurance?\"\r\n//             />\r\n//           </Grid>\r\n//           {formData?.invoiceValue > 50000 &&\r\n//           <Grid item xs={12} sm={6}>\r\n//             <CustomTextField fullWidth label=\"E-Way Value\" \r\n//               value={formData.ewayBill}\r\n//               onChange={(e) => handleChange(\"ewayBill\", e.target.value)}\r\n//               error={!!errors.ewayBill}\r\n//               helperText={errors.ewayBill}\r\n//               inputProps={{\r\n//                 maxLength:6,\r\n//               }}\r\n//               required />\r\n//           </Grid> }\r\n//         </Grid>\r\n//       </Box>\r\n\r\n//       <Box mt={3} display=\"flex\" justifyContent=\"space-between\">\r\n//         <Button variant=\"contained\" color=\"success\" \r\n//           onClick={handleSearchCourier}\r\n//           disabled={!serviceAble}\r\n//         sx={{\r\n//                                 borderColor: 'var(--bs-primary1)', // Custom colors\r\n//                                 width: \"45%\" ,\r\n//                                 backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n//                                 color: \"white\",\r\n\r\n//                               }}>\r\n//           Search Courier Partner\r\n//         </Button>\r\n//         <Button variant=\"outlined\" color=\"error\" sx={{ width: \"45%\" }} onClick={handleReset}>\r\n//           Reset\r\n//         </Button>\r\n//       </Box>\r\n//     </Paper>\r\n//   );\r\n// };\r\n\r\n\r\n// const OrderCheckout = () => {\r\n//     const {  warehouseDetails , formData ,qty , length ,width , height ,shippingCharges} =  useCourierDashboard()\r\n//   const [paymentMethod, setPaymentMethod] = useState(\"wallet\");\r\n//   const [tpinDialogOpen, setTpinDialogOpen] = useState(false);\r\n//   const [orderSuccessOpen, setOrderSuccessOpen] = useState(false);\r\n//   const [tpin, setTpin] = useState(\"\");\r\n//   const  naviagte =  useNavigate()\r\n\r\n//   // Form data and error state\r\n//   const [orderData, setOrderData] = useState({\r\n//     gstin: \"\",\r\n//     companyName: \"\",\r\n//     storeCode: \"\",\r\n//     consigneeGstn: \"\",\r\n//     name: \"\",\r\n//     phone: \"\",\r\n//     address: \"\",\r\n//     city: \"\",\r\n//     state: \"\",\r\n//   });\r\n\r\n//   const [formErrors, setFormErrors] = useState({});\r\n\r\n//   const handleChange = (field, value) => {\r\n//     const onlyNumbers = /^[0-9\\b]+$/;\r\n  \r\n//     // Allow only numbers for numeric fields\r\n//     const numberFields = [\"phone\"];\r\n//     if (numberFields.includes(field) && value !== \"\" && !onlyNumbers.test(value)) {\r\n//       return; \r\n//     }\r\n//     setOrderData({ ...orderData, [field]: value });\r\n//     setFormErrors({ ...formErrors, [field]: \"\" }); \r\n//   };\r\n\r\n//   const validateForm = () => {\r\n//     const errors = {};\r\n\r\n//     if (!orderData.companyName) errors.companyName = \"Company Name is required\";\r\n//     if (!orderData.storeCode) errors.storeCode = \"Store Code is required\";\r\n//     if (!orderData.consigneeGstn) errors.consigneeGstn = \"Consignee GSTN is required\";\r\n//     if (!orderData.name) errors.name = \"Name is required\";\r\n//     if (!orderData.phone || !/^[6-9]\\d{9}$/.test(orderData.phone)) errors.phone = \"Valid Phone Number is required\";\r\n//     if (!orderData.address) errors.address = \"Address is required\";\r\n//     if (!orderData.city) errors.city = \"City is required\";\r\n//     if (!orderData.state) errors.state = \"State is required\";\r\n\r\n//     setFormErrors(errors);\r\n//     return Object.keys(errors).length === 0;\r\n//   };\r\n\r\n\r\n  \r\n\r\n\r\n \r\n\r\n\r\n\r\n//   const walletSubmit = async(body)=> {\r\n//     let response = await walletCourierOrderComplete(body)\r\n \r\n//     if(!response?.data?.error && response?.data?.statusCode === 200)\r\n//       {\r\n//         // setProcessStart(true)\r\n//         setTpinDialogOpen(false);\r\n//         setOrderSuccessOpen(true)\r\n        \r\n//       }\r\n//       toastMessage(response?.data?.error , response?.data?.message)\r\n//   }\r\n\r\n//     const loadGateWay = async(body)=>{\r\n\r\n//         console.log(body , \"body\")\r\n//         const isLoaded = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\r\n\r\n//         if (!isLoaded) {\r\n//             alert(\"Razorpay SDK failed to load. Please check your internet connection.\");\r\n//             return;\r\n//         }\r\n       \r\n//         const options = {\r\n//             key: razor_pay_key, // Replace with your Razorpay key\r\n//             amount: body.pg_checkoutData.amount , // Amount in paisa (₹400) \r\n//             // amount : \"1000000\",\r\n//             // body.amount * 100,\r\n//             currency: \"INR\",\r\n//             name: \"Needu\",\r\n//             description: \"Payment for Order\",\r\n//             order_id : body.pg_checkoutData.id, \r\n//             // order_id: \"order_QBO2ewsfZyUrA7\",\r\n//             handler: async function (response) {\r\n              \r\n               \r\n//                 let res  =  await pgCourierOrderCompleteCallback(response)\r\n//                 toastMessage(res?.data?.error , res?.data?.message)\r\n//                 // setLoading(false)\r\n//                   // setOrderSuccessOpen(true)\r\n//                 if(!res?.data?.error)\r\n//                 {\r\n                   \r\n//                   setOrderSuccessOpen(true)\r\n                  \r\n//                 }\r\n               \r\n//             },\r\n//             prefill: {\r\n//                 name: orderData.name,\r\n//                 // email: \"user@example.com\",\r\n//                 contact: orderData.phone,\r\n//             },\r\n//             theme: {\r\n//                 color: \"#3399cc\",\r\n//             },\r\n//         };\r\n\r\n//         const paymentObject = new window.Razorpay(options);\r\n//         paymentObject.on('payment.failed', async function (response){\r\n//             // let res  =  await verifyponserPaymentGatewayResponse(response?.error)\r\n//             // toastMessage(res?.data?.error , res?.data?.message)\r\n//             let res  =  await pgCourierOrderCompleteCallback(response?.error)\r\n//             toastMessage(res?.data?.error , res?.data?.message)\r\n//             // setLoading(false)\r\n            \r\n//     });\r\n//         paymentObject.open();\r\n//     }\r\n\r\n//   const PGSubmit = async(body)=> {\r\n     \r\n//               try {\r\n//                 let res = await pgCourierOrderComplete(body)\r\n                \r\n//                   if(!res.error)\r\n//                   {\r\n//                     loadGateWay(res?.data?.data)\r\n//                   }\r\n//               } catch (error) {\r\n                \r\n//               }\r\n//   }\r\n\r\n//   const handleSubmit = () => {\r\n//     if (!validateForm()) {\r\n//       return;\r\n//     }\r\n\r\n\r\n//     const bodyObject = {\r\n//       warehouse: warehouseDetails?.warehouse_name || '',\r\n//       mode: formData?.paymode || 'Prepaid', \r\n//       amount: Number(shippingCharges?.total),\r\n//       finalAmount: shippingCharges?.finalAmount,\r\n//       plateformCharge: shippingCharges?.plateformCherge,\r\n//       profit: \"\", \r\n//       description: \"box\",\r\n//       weight: formData?.weight, \r\n//       qty: qty,\r\n//       paymentMode: paymentMethod === 'wallet'? 'wallet': \"PG\",\r\n//       count: qty,\r\n//       length: length, \r\n//       width: width,\r\n//       height: height,\r\n//       ewaybill: [formData?.ewayBill || ''], \r\n//       n_value: [formData?.invoiceValue],\r\n//       inv: [\"inv1\"],\r\n//       seller_gst_tin: orderData?.gstin || '',\r\n//       consignee_gst_tin: orderData?.consigneeGstn || '',\r\n//       insurance: formData?.insurance ? \"Yes\":'No',\r\n//       store_code: orderData?.storeCode, \r\n//       company: orderData.companyName,\r\n//       name: orderData.name,\r\n//       phone: orderData.phone,\r\n//       pincode: formData?.pincode,\r\n//       address: orderData.address,\r\n//       city: orderData.city,\r\n//       state: orderData.state,\r\n//       // tpin: \"0000\"\r\n//     };\r\n\r\n//     if (paymentMethod === \"wallet\") {\r\n//       setTpinDialogOpen(true);\r\n      \r\n//     } else {\r\n//       console.log(\"Payment Gateway flow\");\r\n//       PGSubmit(bodyObject)\r\n//     }\r\n//   };\r\n\r\n//   const handleTpinSubmit = () => {\r\n//     if (tpin.trim().length != 4 ) {\r\n//       alert(\" 4 Digit TPIN is required.\");\r\n//       return;\r\n//     }\r\n\r\n//     // console.log(\"TPIN Submitted:\", tpin);\r\n//     const bodyObject = {\r\n//       warehouse: warehouseDetails?.warehouse_name || '',\r\n//       mode: formData?.paymode || 'Prepaid', \r\n//       amount: Number(shippingCharges?.total),\r\n//       finalAmount: shippingCharges?.finalAmount,\r\n//       plateformCharge: shippingCharges?.plateformCherge,\r\n//       profit: \"\", \r\n//       description: \"box\",\r\n//       weight: formData?.weight, \r\n//       qty: qty,\r\n//       paymentMode: paymentMethod === 'wallet'? 'wallet': \"PG\",\r\n//       count: qty,\r\n//       length: length, \r\n//       width: width,\r\n//       height: height,\r\n//       ewaybill: [formData?.ewayBill || ''], \r\n//       n_value: [formData?.invoiceValue],\r\n//       inv: [\"inv1\"],\r\n//       seller_gst_tin: orderData?.gstin || '',\r\n//       consignee_gst_tin: orderData?.consigneeGstn || '',\r\n//       insurance: formData?.insurance ? \"Yes\":'No',\r\n//       store_code: orderData?.storeCode, \r\n//       company: orderData.companyName,\r\n//       name: orderData.name,\r\n//       phone: orderData.phone,\r\n//       pincode: formData?.pincode,\r\n//       address: orderData.address,\r\n//       city: orderData.city,\r\n//       state: orderData.state,\r\n//       tpin: tpin\r\n//     };\r\n   \r\n//     walletSubmit(bodyObject)\r\n//     // Proceed with wallet payment\r\n//   };\r\n\r\n//   // Call this when order is successful\r\n// // const handleOrderSuccess = () => {\r\n// //   setOrderSuccessOpen(true);\r\n// // };\r\n\r\n// const handleCloseSuccessDialog = () => {\r\n//   setOrderSuccessOpen(false);\r\n//   naviagte('/courier-onboard')\r\n// };\r\n\r\n\r\n  \r\n\r\n\r\n//   return (\r\n//     <>\r\n//       <CustomOrderCheckOutBox title={\"Order Details\"}>\r\n//         <Grid container spacing={3}>\r\n//           <Grid item xs={12} md={6} lg={4}>\r\n//             <CustomTextField\r\n//               fullWidth\r\n//               label=\"Seller GSTIN Number\"\r\n//               value={orderData.gstin}\r\n//               onChange={(e) => handleChange(\"gstin\", e.target.value)}\r\n//             />\r\n//           </Grid>\r\n//           <Grid item xs={12} md={6} lg={4}>\r\n//             <CustomTextField\r\n//               fullWidth\r\n//               label=\"Company Name\"\r\n//               required\r\n//               error={!!formErrors.companyName}\r\n//               helperText={formErrors.companyName}\r\n//               value={orderData.companyName}\r\n//               onChange={(e) => handleChange(\"companyName\", e.target.value)}\r\n//             />\r\n//           </Grid>\r\n//           <Grid item xs={12} md={6} lg={4}>\r\n//             <CustomTextField\r\n//               fullWidth\r\n//               label=\"Store Code\"\r\n//               required\r\n//               error={!!formErrors.storeCode}\r\n//               helperText={formErrors.storeCode}\r\n//               value={orderData.storeCode}\r\n//               onChange={(e) => handleChange(\"storeCode\", e.target.value)}\r\n//             />\r\n//           </Grid>\r\n//           <Grid item xs={12} md={6} lg={4}>\r\n//             <CustomTextField\r\n//               fullWidth\r\n//               label=\"Consignee GSTN\"\r\n//               required\r\n//               error={!!formErrors.consigneeGstn}\r\n//               helperText={formErrors.consigneeGstn}\r\n//               value={orderData.consigneeGstn}\r\n//               onChange={(e) => handleChange(\"consigneeGstn\", e.target.value)}\r\n//             />\r\n//           </Grid>\r\n//           <Grid item xs={12} md={6} lg={4}>\r\n//             <CustomTextField\r\n//               fullWidth\r\n//               label=\"Name\"\r\n//               required\r\n//               error={!!formErrors.name}\r\n//               helperText={formErrors.name}\r\n//               value={orderData.name}\r\n//               onChange={(e) => handleChange(\"name\", e.target.value)}\r\n//             />\r\n//           </Grid>\r\n//           <Grid item xs={12} md={6} lg={4}>\r\n//             <CustomTextField\r\n//               fullWidth\r\n//               label=\"Phone Number\"\r\n//               required\r\n//               error={!!formErrors.phone}\r\n//               helperText={formErrors.phone}\r\n//               value={orderData.phone}\r\n//               onChange={(e) => handleChange(\"phone\", e.target.value)}\r\n//               inputProps={{\r\n//                 maxLength:'10'\r\n//               }}\r\n//             />\r\n//           </Grid>\r\n//           <Grid item xs={12} md={6} lg={4}>\r\n//             <CustomTextField\r\n//               fullWidth\r\n//               label=\"Address\"\r\n//               required\r\n//               error={!!formErrors.address}\r\n//               helperText={formErrors.address}\r\n//               value={orderData.address}\r\n//               onChange={(e) => handleChange(\"address\", e.target.value)}\r\n//             />\r\n//           </Grid>\r\n//           <Grid item xs={12} md={6} lg={4}>\r\n//             <CustomTextField\r\n//               fullWidth\r\n//               label=\"City\"\r\n//               required\r\n//               error={!!formErrors.city}\r\n//               helperText={formErrors.city}\r\n//               value={orderData.city}\r\n//               onChange={(e) => handleChange(\"city\", e.target.value)}\r\n//             />\r\n//           </Grid>\r\n//           <Grid item xs={12} md={6} lg={4}>\r\n//             <CustomTextField\r\n//               fullWidth\r\n//               label=\"State\"\r\n//               required\r\n//               error={!!formErrors.state}\r\n//               helperText={formErrors.state}\r\n//               value={orderData.state}\r\n//               onChange={(e) => handleChange(\"state\", e.target.value)}\r\n//             />\r\n//           </Grid>\r\n//         </Grid>\r\n//       </CustomOrderCheckOutBox>\r\n\r\n//       {/* PAYMENT METHOD SELECTION */}\r\n//       <CustomOrderCheckOutBox title={\"Payment Method\"}>\r\n//         <RadioGroup\r\n//           row\r\n//           value={paymentMethod}\r\n//           onChange={(e) => setPaymentMethod(e.target.value)}\r\n//         >\r\n//           <FormControlLabel value=\"wallet\" control={<Radio />} label=\"Wallet\" />\r\n//           <FormControlLabel value=\"gateway\" control={<Radio />} label=\"Payment Gateway\" />\r\n//         </RadioGroup>\r\n//       </CustomOrderCheckOutBox>\r\n\r\n//       {/* Pay Now Button */}\r\n//       <CustomOrderCheckOutBox title={\"\"}>\r\n//         <Box display={\"flex\"} justifyContent={\"center\"} width={\"100%\"}>\r\n//           <Button\r\n//             variant=\"contained\"\r\n//             color=\"success\"\r\n//             onClick={handleSubmit}\r\n//             sx={{\r\n//               borderColor: \"var(--bs-primary1)\",\r\n//               width: \"25%\",\r\n//               backgroundColor: \"var(--bs-primary1)\",\r\n//               color: \"white\",\r\n//             }}\r\n//           >\r\n//             Pay Now\r\n//           </Button>\r\n//         </Box>\r\n//       </CustomOrderCheckOutBox>\r\n\r\n//       {/* TPIN Dialog */}\r\n//       <Dialog\r\n//   open={tpinDialogOpen}\r\n//   onClose={() => \r\n//     setTpinDialogOpen(false)\r\n    \r\n//   }\r\n//   PaperProps={{\r\n//     sx: {\r\n//       borderRadius: 3,\r\n//       p: 2,\r\n//       minWidth: 400,\r\n//     },\r\n//   }}\r\n// >\r\n//   {/* <DialogTitle sx={{ textAlign: 'center', fontWeight: 'bold', fontSize: '1.5rem' }}>\r\n//     🔒 Secure Payment\r\n    \r\n//   </DialogTitle> */}\r\n\r\n//   <DialogContent>\r\n//     <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" gap={2}>\r\n//       <Typography variant=\"body1\" textAlign=\"center\" marginBottom={2} >\r\n//         Please enter your 4-digit TPIN to proceed with the payment.\r\n//       </Typography>\r\n\r\n//       <CustomTextField\r\n//         label=\"Enter TPIN\"\r\n//         type=\"password\"\r\n//         value={tpin}\r\n//         // onChange={(e) => setTpin(e.target.value)}\r\n//         onChange={(e) => {\r\n//           const value = e.target.value;\r\n//           if (/^\\d{0,4}$/.test(value)) {\r\n//             setTpin(value);\r\n//           }\r\n//         }}\r\n//         inputProps={{ maxLength: 4 }}\r\n//         // sx={{ width: \"60%\", textAlign: 'center' }}\r\n//       />\r\n//     </Box>\r\n//   </DialogContent>\r\n\r\n//   <DialogActions sx={{ justifyContent: \"center\", pb: 2 }}>\r\n//     <Button\r\n//    onClick={() => {\r\n//     setTpinDialogOpen(false);\r\n//     setTpin('');\r\n//   }}\r\n//       variant=\"outlined\"\r\n//       sx={{ minWidth: 120 , \r\n//         borderColor: \"var(--bs-primary1)\",\r\n       \r\n//         // backgroundColor: \"var(--bs-primary1)\",\r\n//         color: \"var(--bs-primary1)\",\r\n//       }} \r\n//     >\r\n//       Cancel\r\n//     </Button>\r\n//     <Button\r\n//       onClick={handleTpinSubmit}\r\n//       variant=\"contained\"\r\n//       color=\"primary\"\r\n//       sx={{ minWidth: 120 ,   borderColor: \"var(--bs-primary1)\",\r\n       \r\n//         backgroundColor: \"var(--bs-primary1)\",\r\n//         color: \"white\", }}\r\n//     >\r\n//       Submit\r\n//     </Button>\r\n//   </DialogActions>\r\n// </Dialog>\r\n\r\n\r\n//      {/* Order Comfirmation Dialog  */}\r\n//      <Dialog\r\n//   open={orderSuccessOpen}\r\n//   onClose={() => {}}\r\n//   disableEscapeKeyDown\r\n//   disableBackdropClick \r\n//   // For MUI v5+ use this:\r\n//   PaperProps={{ onClick: (e) => e.stopPropagation() }}\r\n// >\r\n//   {/* <DialogTitle sx={{ fontWeight: \"bold\", textAlign: \"center\", color: \"green\" }}>\r\n//     🎉 Order Placed Successfully!\r\n//   </DialogTitle> */}\r\n//   <DialogContent>\r\n//     <Typography textAlign=\"center\" variant=\"body1\" gutterBottom>\r\n//       Your order has been submitted successfully. You will receive a confirmation shortly.\r\n//     </Typography>\r\n//   </DialogContent>\r\n//   <DialogActions sx={{ justifyContent: \"center\", pb: 2 }}>\r\n//     <Button\r\n//       variant=\"contained\"\r\n//       color=\"primary\"\r\n//       onClick={handleCloseSuccessDialog}\r\n     \r\n//       sx={{ minWidth: 120 ,   borderColor: \"var(--bs-primary1)\",\r\n       \r\n//         backgroundColor: \"var(--bs-primary1)\",\r\n//         color: \"white\", }}\r\n//     >\r\n//       OK\r\n//     </Button>\r\n//   </DialogActions>\r\n// </Dialog>\r\n\r\n\r\n//     </>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n\r\n\r\nconst CouirerCheck = ({ setProcessStart  }) => {\r\n    const [pincode, setPincode] = useState(\"\");\r\n   const serviceChecker = async() => {\r\n\r\n      let response  = await checkCourierService({pincode})\r\n        // setcheckSerivce(true);\r\n        // setProcessStart(true)\r\n        if(!response?.data?.error && response?.data?.statusCode === 200)\r\n        {\r\n          setProcessStart(true)\r\n        }\r\n        toastMessage(response?.data?.error , response?.data?.message)\r\n        // alert(\"CheckSerivce Sent! (Simulated)\");\r\n    };\r\n\r\n \r\n\r\n \r\n\r\n    return (\r\n        <Container maxWidth={'sm'}  style={{ marginTop: \"2rem\" }}>\r\n            <Grid container spacing={4} >\r\n                {/* Left Side: Profile Cards */}\r\n            \r\n                \r\n                {/* Right Side: Process Section */}\r\n                <Grid item xs={12}>\r\n                    <Card style={{ padding: \"2rem\", boxShadow: \"0px 4px 10px rgba(0,0,0,0.1)\" }}>\r\n                        <Typography variant=\"h6\" align=\"center\" gutterBottom   sx={{ px: 1, py: 0, fontWeight: \"600\", fontSize: \"20px\" ,color:'var(--bs-primary1)' }}>\r\n                            Check Pincode Service\r\n                        </Typography>\r\n                        <TextField\r\n                            label=\"Pincode\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            value={pincode}\r\n                            onChange={(e) => {\r\n                              const value = e.target.value;\r\n                              if (/^\\d{0,6}$/.test(value)) {\r\n                                  setPincode(value);\r\n                              }\r\n                          }}\r\n                          inputProps={{\r\n                            maxLength: 6,\r\n                            pattern: \"[0-9]*\", \r\n                            inputMode: \"numeric\", \r\n                        }}\r\n                            margin=\"normal\"\r\n                            required\r\n                            sx={{\r\n                              \"& .MuiOutlinedInput-root\": {\r\n                                \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                              },\r\n                            }}  \r\n                        />\r\n                        <Button variant=\"contained\" color=\"primary\" disabled={pincode?.length !=6 }  sx={{\r\n                                borderColor: 'var(--bs-primary1)', // Custom colors\r\n                                marginTop:'15px',\r\n                                backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                                color: \"white\",\r\n                              }} fullWidth onClick={serviceChecker} >\r\n                            Check Pincode\r\n                        </Button>\r\n                     \r\n                     \r\n                      \r\n                    </Card>\r\n                </Grid>\r\n\r\n              \r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst CreateOrder = () =>{\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [courierLoading , setCourierLoading ] = useState(false)\r\n  const [orderType ,  setOrderType ] = useState('NON ESSENTIALS')\r\n  const naviagte =  useNavigate()\r\n  const [orderData , setOrderData] = useState({})\r\n  const [sameAsBilling , setSameAsBilling] = useState(true)\r\n  const [ serviceable , setServiceAble] = useState(false)\r\n  const [pincode , setPincode ] = useState('')\r\n\r\n  const { warehouseDetails} = useCourierDashboard()\r\n\r\n\r\n  const getUserPincodeData = async(pincode)=>{\r\n    let res  = await  getPincodeDetails(pincode)\r\n     if(res?.data?.error === false)\r\n     {\r\n      setOrderData((prev)=>({\r\n        ...prev,\r\n        deliveryCity : res.data?.data?.city,\r\n        deliveryState : res?.data?.data?.state\r\n      }))\r\n     }\r\n  }\r\n\r\n  const [products, setProducts] = useState([\r\n    {\r\n      productName: \"\",\r\n      sku :'',\r\n      unitPrice: \"\",\r\n      quantity: \"\",\r\n      productDiscount: \"\",\r\n      taxRate: \"\",\r\n      hsnCode: \"\",\r\n    },\r\n  ]);\r\n  const [productErrors, setProductErrors] = useState([\r\n    {\r\n      productName: \"\",\r\n      unitPrice: \"\",\r\n      quantity: \"\",\r\n      sku:\"\"\r\n    },\r\n  ]);\r\n const [otherCharges  , setOtherCharges] = useState({})\r\n\r\n\r\n  const handleChange = (field, value) => {\r\n    const onlyNumbers = /^[0-9\\b]+$/;\r\n\r\n    // Allow only numbers for numeric fields\r\n  \r\n    const numberFields = [\"invoice_number\", \"billingPincode\",\"billingMobile\",\"deliveryMobile\" , \"deliveryPincode\" , \"deliveryAlternateMobile\"];\r\n    if (numberFields.includes(field) && value !== \"\" && !onlyNumbers.test(value)) {\r\n      return; \r\n    }\r\n    setOrderData((prev) => ({ ...prev, [field]: value }));\r\n    setFormErrors((prevErrors) => ({ ...prevErrors, [field]: \"\" })); \r\n\r\n   // Auto-fill city & state based on delivery pincode\r\n   if (field === \"deliveryPincode\" && value.length === 6) {\r\n    getUserPincodeData(value);\r\n  }\r\n  };\r\n\r\n\r\n\r\n  const validateDeliveryDetails = () => {\r\n    const errors = {};\r\n    const isMobile = (number) => /^[6-9]\\d{9}$/.test(number);\r\n    const isPincode = (pin) => /^\\d{6}$/.test(pin);\r\n\r\n    if(!orderData?.invoice_number || Number(orderData.invoice_number) < 1)\r\n    {\r\n      errors.invoice_number = \"Invoice value should greater than 1\";\r\n    }\r\n    if ((orderData.invoice_number) >= 50000) {\r\n      if (orderData?.ewaybill_no?.trim() === \"\") {\r\n        errors.ewaybill_no = \"E-Way Bill is required\";\r\n      } else if (orderData?.ewaybill_no?.length !== 12) {\r\n        errors.ewaybill_no = \"Enter your 12 Digit E-Way Bill\";\r\n      }\r\n    }\r\n\r\n    if (!orderData.reseller_name?.trim()) {\r\n      errors.reseller_name = \"Sender name is required\";\r\n    }\r\n    \r\n    if (!orderData.company_name?.trim()) {\r\n      errors.company_name = \"Brand name is required\";\r\n    }\r\n  \r\n    if (!orderData.deliveryMobile || !isMobile(orderData.deliveryMobile)) {\r\n      errors.deliveryMobile = \"Enter a valid 10-digit mobile number\";\r\n    }\r\n  \r\n    if (!orderData.shipping_customer_name?.trim()) {\r\n      errors.shipping_customer_name = \"Receiver First name is required\";\r\n    }\r\n    if (!orderData.shipping_last_name?.trim()) {\r\n      errors.shipping_last_name = \"Receiver Last name is required\";\r\n    }\r\n  \r\n    if (!orderData.deliveryAddress?.trim()) {\r\n      errors.deliveryAddress = \"Complete address is required\";\r\n    }\r\n  \r\n    if (!orderData.deliveryPincode || !isPincode(orderData.deliveryPincode)) {\r\n      errors.deliveryPincode = \"Enter a valid 6-digit pincode\";\r\n    }\r\n  \r\n    if (!orderData.deliveryCity?.trim()) {\r\n      errors.deliveryCity = \"City is required\";\r\n    }\r\n  \r\n    if (!orderData.deliveryState?.trim()) {\r\n      errors.deliveryState = \"State is required\";\r\n    }\r\n    if (\r\n      orderData.customer_gstin &&\r\n      !/^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$/.test(orderData.customer_gstin)\r\n    ) {\r\n      errors.customer_gstin = \"Enter a valid GSTIN number\";\r\n    }\r\n  \r\n    if (\r\n      orderData.deliveryAlternateMobile &&\r\n      !isMobile(orderData.deliveryAlternateMobile)\r\n    ) {\r\n      errors.deliveryAlternateMobile = \"Enter a valid alternate mobile number\";\r\n    }\r\n  \r\n    if (\r\n      orderData.deliveryEmail &&\r\n      !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(orderData.deliveryEmail)\r\n    ) {\r\n      errors.deliveryEmail = \"Enter a valid email address\";\r\n    }\r\n\r\n    if (!sameAsBilling) {\r\n      if (!orderData.billingMobile || !isMobile(orderData.billingMobile)) {\r\n        errors.billingMobile = \"Enter a valid 10-digit mobile number\";\r\n      }\r\n    \r\n      if (!orderData.billing_customer_name?.trim()) {\r\n        errors.billing_customer_name = \"First name is required\";\r\n      }\r\n      if (!orderData.billing_last_name?.trim()) {\r\n        errors.billing_last_name = \"Last name is required\";\r\n      }\r\n    \r\n      if (!orderData.billingAddress?.trim()) {\r\n        errors.billingAddress = \"Billing address is required\";\r\n      }\r\n    \r\n      if (!orderData.billingPincode || !isPincode(orderData.billingPincode)) {\r\n        errors.billingPincode = \"Enter a valid 6-digit billing pincode\";\r\n      }\r\n    \r\n      if (!orderData.billingCity?.trim()) {\r\n        errors.billingCity = \"Billing city is required\";\r\n      }\r\n    \r\n      if (!orderData.billingState?.trim()) {\r\n        errors.billingState = \"Billing state is required\";\r\n      }\r\n    \r\n      if (\r\n        orderData.billingEmail &&\r\n        !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(orderData.billingEmail)\r\n      ) {\r\n        errors.billingEmail = \"Enter a valid billing email\";\r\n      }\r\n    }\r\n    console.log(errors , \"errors\")\r\n  \r\n    setFormErrors(errors);\r\n    return Object.keys(errors).length === 0; // returns true if valid\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sameAsBilling) {\r\n      setOrderData((prev) => ({\r\n        ...prev,\r\n        billing_customer_name: prev.shipping_customer_name,\r\n        billing_last_name:prev.shipping_last_name,\r\n        billingMobile: prev.deliveryMobile,\r\n        billingAddress: prev.deliveryAddress,\r\n        billingPincode: prev.deliveryPincode,\r\n        billingCity: prev.deliveryCity,\r\n        billingState: prev.deliveryState,\r\n        billingLandmark: prev.deliveryLandmark,\r\n        billingEmail: prev.deliveryEmail,\r\n      }));\r\n    }\r\n  }, [sameAsBilling  , orderData]);\r\n\r\n\r\n  const handleProductChange = (index, field, value) => {\r\n    const updatedProducts = [...products];\r\n    updatedProducts[index][field] = value;\r\n    setProducts(updatedProducts);\r\n    validateProductField(index, field, value); // validate on change\r\n  };\r\n  \r\n\r\n  // const validateProductField = (index, field, value) => {\r\n  //   const updatedErrors = [...productErrors];\r\n  //   let errorMsg = \"\";\r\n\r\n  //   switch (field) {\r\n  //     case \"productName\":\r\n  //       if (!value.trim()) errorMsg = \"Product Name is required.\";\r\n  //       break;\r\n  //     case \"unitPrice\":\r\n  //       if (!value || isNaN(value)) {\r\n  //         errorMsg = \"Enter a valid number.\";\r\n  //       } else if (Number(value) < 1) {\r\n  //         errorMsg = \"Unit Price must be at least 1.\";\r\n  //       }\r\n  //       break;\r\n  //     case \"quantity\":\r\n  //       if (!value || isNaN(value)) {\r\n  //         errorMsg = \"Enter a valid number.\";\r\n  //       } else if (Number(value) < 1) {\r\n  //         errorMsg = \"Quantity must be at least 1.\";\r\n  //       }\r\n  //       break;\r\n  //     default:\r\n  //       errorMsg = \"\";\r\n  //   }\r\n\r\n  //   updatedErrors[index][field] = errorMsg;\r\n  //   setProductErrors(updatedErrors);\r\n  // };\r\n\r\n  const validateProductField = (index = null, field = null, value = null) => {\r\n    const newErrors = [...productErrors];\r\n  \r\n    const validateSingle = (i, f, v) => {\r\n      let errorMsg = \"\";\r\n      // sku\r\n  \r\n      switch (f) {\r\n        case \"productName\":\r\n          if (!v?.trim()) errorMsg = \"Product Name is required.\";\r\n          break;\r\n          case \"sku\":\r\n            if (!v?.trim()) errorMsg = \"Product SKU is required.\";\r\n            break;  \r\n        case \"unitPrice\":\r\n          if (!v || isNaN(v)) {\r\n            errorMsg = \"Enter a valid number.\";\r\n          } else if (Number(v) < 1) {\r\n            errorMsg = \"Product Price must be at least 1.\";\r\n          }\r\n          break;\r\n        case \"quantity\":\r\n          if (!v || isNaN(v)) {\r\n            errorMsg = \"Enter a valid number.\";\r\n          } else if (Number(v) < 1) {\r\n            errorMsg = \"Quantity must be at least 1.\";\r\n          }\r\n          break;\r\n        default:\r\n          errorMsg = \"\";\r\n      }\r\n  \r\n      if (!newErrors[i]) newErrors[i] = {};\r\n      newErrors[i][f] = errorMsg;\r\n    };\r\n  \r\n    if (index !== null && field !== null) {\r\n      // For onChange\r\n      validateSingle(index, field, value);\r\n    } else {\r\n      // For full form submission validation\r\n      products.forEach((product, i) => {\r\n        validateSingle(i, \"sku\", product.sku);\r\n        validateSingle(i, \"productName\", product.productName);\r\n        validateSingle(i, \"unitPrice\", product.unitPrice);\r\n        validateSingle(i, \"quantity\", product.quantity);\r\n      });\r\n    }\r\n  \r\n    setProductErrors(newErrors);\r\n  \r\n    return newErrors.every(errObj => Object.values(errObj).every(e => !e));\r\n  };\r\n  \r\n\r\n  const handleAddProduct = () => {\r\n    setProducts([\r\n      ...products,\r\n      {\r\n        productName: \"\",\r\n        unitPrice: \"\",\r\n        quantity: \"\",\r\n        productDiscount: \"\",\r\n        taxRate: \"\",\r\n        hsnCode: \"\",\r\n      },\r\n    ]);\r\n    setProductErrors([\r\n      ...productErrors,\r\n      {\r\n        productName: \"\",\r\n        unitPrice: \"\",\r\n        quantity: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleRemoveProduct = (index) => {\r\n    const updatedProducts = [...products];\r\n    const updatedErrors = [...productErrors];\r\n    updatedProducts.splice(index, 1);\r\n    updatedErrors.splice(index, 1);\r\n    setProducts(updatedProducts);\r\n    setProductErrors(updatedErrors);\r\n  };\r\n\r\n  // Other Charges Handler \r\n\r\n  const handleOtherCharges = (field, value) => {\r\n    setOtherCharges((prev) => ({ ...prev, [field]: value }));\r\n  \r\n  };\r\n  \r\n\r\n  const [packageInfo, setPackageInfo] = useState({\r\n    deadWeight: \"\",\r\n    length: \"\",\r\n    breadth: \"\",\r\n    height: \"\",\r\n    volumetricWeight: \"0\",\r\n  });\r\n\r\n  const [packageInfoerrors, setPackageInfoErrors] = useState({});\r\n\r\n  const handlePackageInfo = (field, value) => {\r\n    if (isNaN(value) || Number(value) < 0) return;\r\n    setPackageInfo((prev) => ({ ...prev, [field]: value }));\r\n    setPackageInfoErrors((prev) => ({ ...prev, [field]: \"\" }));\r\n  };\r\n  const packageInfoValidateFields = () => {\r\n    const newErrors = {};\r\n    if (!packageInfo?.deadWeight || Number(packageInfo?.deadWeight) <= 0)\r\n      newErrors.deadWeight = \"Dead weight must be more than 0\";\r\n\r\n    [\"length\", \"breadth\", \"height\"]?.forEach((dim) => {\r\n      if (!packageInfo[dim] || Number(packageInfo[dim]) <= 0.5) {\r\n        newErrors[dim] = `${dim.charAt(0).toUpperCase() + dim.slice(1)} must be greater than 0.5 cm`;\r\n      }\r\n    });\r\n\r\n    setPackageInfoErrors(newErrors);\r\n    \r\n    return Object.keys(newErrors)?.length === 0;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { deadWeight, length, breadth, height } = packageInfo;\r\n  \r\n    if (\r\n      Number(deadWeight) > 0 &&\r\n      Number(length) > 0.5 &&\r\n      Number(breadth) > 0.5 &&\r\n      Number(height) > 0.5\r\n    ) {\r\n      calculateVolumetricWeight();\r\n    } else {\r\n      setPackageInfo((prev) => ({\r\n        ...prev,\r\n        volumetricWeight: \"0\",\r\n      }));\r\n    }\r\n  }, [packageInfo.deadWeight, packageInfo.length, packageInfo.breadth, packageInfo.height]);\r\n  \r\n  const calculateVolumetricWeight = async () => {\r\n    if (!packageInfoValidateFields()) return;\r\n\r\n    // API simulation\r\n    const { length, breadth, height } = packageInfo;\r\n    const volWeight = ((length * breadth * height) / 5000).toFixed(2); // Formula per common courier rules\r\n\r\n    setPackageInfo((prev) => ({\r\n      ...prev,\r\n      volumetricWeight: volWeight,\r\n    }));\r\n  };\r\n  \r\n const subtotal =  useMemo(()=> products?.reduce((sum , val)=> (sum + (val?.unitPrice || 0) * val?.quantity || 0 ), 0),  [products])\r\n\r\n const otherChargestotal  =  (Number(otherCharges?.shippingCharges) || 0 ) + (Number(otherCharges?.giftwrap) || 0) + (Number(otherCharges?.transactionCharges) || 0)\r\n\r\n\r\n  //Check User Pin is ServiceAble or not \r\n   // API call for service availability\r\n const checkUserPincode = async (pincode) => {\r\n  let body = {\r\n    pickup_postcode : warehouseDetails?.pincode,\r\n    delivery_postcode : pincode,\r\n    weight:12,\r\n    cod: false\r\n  }\r\n  try {\r\n    let response  = await checkShipRocketCourierService(body)\r\n    if(!response?.data?.error && response?.data?.statusCode === 200)\r\n    {\r\n      setServiceAble(true);\r\n      // setCity(response?.data?.data?.city)\r\n    }\r\n    else {\r\n      setServiceAble(false);\r\n      // setCity('')\r\n    }\r\n    toastMessage(response?.data?.error , response?.data?.message)\r\n\r\n  } catch (err) {\r\n    setServiceAble(false);\r\n   \r\n  }\r\n};\r\n\r\nconst handlePinChange = (field, value) => {\r\n  const onlyNumbers = /^[0-9\\b]+$/;\r\n\r\n  // Allow only numbers for numeric fields\r\n  const numberFields = [\"pincode\"];\r\n  if (numberFields.includes(field) && value !== \"\" && !onlyNumbers.test(value)) {\r\n    return; \r\n  }\r\n  setPincode(value)\r\n  // setFormData((prev) => ({ ...prev, [field]: value }));\r\n\r\n  // Handle pincode logic\r\n  if (field === \"pincode\") {\r\n    if (value.length < 6) {\r\n      setServiceAble(false);\r\n    }\r\n    if (value.length === 6) {\r\n      checkUserPincode(value);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst userCreateOrder = async()=> {\r\n \r\n  setCourierLoading(true)\r\n  const orderDetails = {\r\n    pickup_location: warehouseDetails?.warehouse_name,\r\n    reseller_name: orderData?.reseller_name,\r\n    company_name: orderData?.company_name,\r\n    billing_customer_name: orderData?.billing_customer_name,\r\n    billing_last_name: orderData?.billing_last_name,\r\n    billing_address: orderData?.billingAddress,\r\n    billing_city: orderData?.billingCity,\r\n    billing_pincode: orderData?.billingPincode,\r\n    billing_state: orderData?.billingState,\r\n    billing_country: \"India\",\r\n    billing_email: orderData?.billingEmail,\r\n    billing_phone: orderData?.billingMobile,\r\n    billing_alternate_phone: orderData?.deliveryAlternateMobile,\r\n    shipping_is_billing: sameAsBilling,\r\n    shipping_customer_name: orderData?.shipping_customer_name,\r\n    shipping_last_name: orderData?.shipping_last_name,\r\n    shipping_address: orderData?.deliveryAddress,\r\n    shipping_city: orderData?.deliveryCity,\r\n    shipping_pincode: orderData?.deliveryPincode,\r\n    shipping_state: orderData?.deliveryState,\r\n    shipping_country: \"India\",\r\n    shipping_email: orderData?.deliveryEmail,\r\n    shipping_phone: orderData?.deliveryMobile,\r\n    order_items : products.map((item)=>({\r\n         name  : item?.productName,\r\n         sku : item?.sku || '',\r\n         units: item?.quantity,\r\n         selling_price: item?.unitPrice,\r\n         discount : item?.productDiscount || 0,\r\n         tax : item?.taxRate || 0,\r\n         hsn : item?.hsnCode || ''\r\n\r\n    })),\r\n   \r\n    payment_method: \"Prepaid\",\r\n    shipping_charges: otherCharges?.shippingCharges || 0,\r\n    giftwrap_charges: otherCharges?.giftwrap || 0,\r\n    transaction_charges: otherCharges?.transactionCharges || 0,\r\n    total_discount: otherCharges?.totalDiscount || 0,\r\n    sub_total: subtotal,\r\n    length: packageInfo?.length,\r\n    breadth: packageInfo?.breadth,\r\n    height: packageInfo?.height,\r\n    weight: packageInfo?.deadWeight,\r\n    ewaybill_no: orderData?.ewaybill_no,\r\n    customer_gstin: orderData?.customer_gstin,\r\n    invoice_number: orderData?.invoiceValue,\r\n    order_type: orderType,\r\n  };\r\n     \r\n     try {\r\n        let res  = await  createShipRocketOrder(orderDetails)\r\n           \r\n          toastMessage(res?.data?.error , res?.data?.message)\r\n          return res \r\n     } catch (error) {\r\n      \r\n     } finally{\r\n      setCourierLoading(false)\r\n     }\r\n}\r\n\r\n\r\nconst handleSubmit = async() => {\r\n  const isDeliveryValid = validateDeliveryDetails();\r\n  const isPackageValid = packageInfoValidateFields();\r\n  const isProductValid = validateProductField(); // validate all products\r\n\r\n  if (!isDeliveryValid || !isPackageValid || !isProductValid) {\r\n    console.log(\"Form has errors.\");\r\n  } else {\r\n   let res = await userCreateOrder()\r\n   if(res?.data?.error === false)\r\n    {\r\n      setTimeout(()=>\r\n        naviagte('/order-details')\r\n      ,1000)\r\n    \r\n    }\r\n    // console.log(\"Form has submitted.\");\r\n\r\n\r\n    // continue with your logic\r\n  }\r\n};\r\n\r\nconst handleDirectShip = async()=>{\r\n  const isDeliveryValid = validateDeliveryDetails();\r\n  const isPackageValid = packageInfoValidateFields();\r\n  const isProductValid = validateProductField(); // validate all products\r\n\r\n  if (!isDeliveryValid || !isPackageValid || !isProductValid) {\r\n    console.log(\"Form has errors.\");\r\n  } else {\r\n   let res = await userCreateOrder()\r\n   if(res?.data?.error === false)\r\n    {\r\n      let data = res?.data?.data || {}\r\n      naviagte(`/order-ship/?delivery_postcode=${data?.shipping_address?.shipping_pincode}&order_id=${data?.shipRocket_order_id}`)\r\n      \r\n    }\r\n    // console.log(\"Form has submitted.\");\r\n\r\n\r\n    // continue with your logic\r\n  }\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n<CustomOrderBox title={\"Pickup & Destination Details\"}>\r\n\r\n\r\n      \r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6} display={'none'}>\r\n          <CustomTextField fullWidth label=\"Pickup Area Pincode\" value={warehouseDetails?.pincode} disabled required hide={true}  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <CustomTextField fullWidth label=\"Deliver Area Pincode\"  \r\n            value={pincode}\r\n            onChange={(e) => handlePinChange(\"pincode\", e.target.value)}\r\n            // error={!!errors.pincode}\r\n            // helperText={errors?.pincode}\r\n            inputProps={{\r\n              maxLength:6,\r\n            }}\r\n            required />\r\n        </Grid>\r\n      </Grid>\r\n      </CustomOrderBox>  \r\n\r\n    <CustomOrderBox title={\"Seller & Delivery Details \"}>\r\n  <Grid container spacing={3}>\r\n  <Grid item xs={12} md={6} lg={4}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Sender Name\"\r\n        required\r\n        value={orderData.reseller_name}\r\n        onChange={(e) => handleChange(\"reseller_name\", e.target.value)}\r\n        // inputProps={{ maxLength: '10' }}\r\n        error={!!formErrors.reseller_name}\r\n        helperText={formErrors.reseller_name}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={4}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Brand Name\"\r\n        required\r\n        value={orderData.company_name}\r\n        onChange={(e) => handleChange(\"company_name\", e.target.value)}\r\n        // inputProps={{ maxLength: '10' }}\r\n        error={!!formErrors.company_name}\r\n        helperText={formErrors.company_name}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={4}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Mobile Number\"\r\n        required\r\n        value={orderData.deliveryMobile}\r\n        onChange={(e) => handleChange(\"deliveryMobile\", e.target.value)}\r\n        inputProps={{ maxLength: '10' }}\r\n        error={!!formErrors.deliveryMobile}\r\n        helperText={formErrors.deliveryMobile}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={4}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Receiver First Name\"\r\n        required\r\n        value={orderData.shipping_customer_name}\r\n        onChange={(e) => handleChange(\"shipping_customer_name\", e.target.value)}\r\n        error={!!formErrors.shipping_customer_name}\r\n        helperText={formErrors.shipping_customer_name}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={4}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Receiver Last Name\"\r\n        required\r\n        value={orderData.shipping_last_name}\r\n        onChange={(e) => handleChange(\"shipping_last_name\", e.target.value)}\r\n        error={!!formErrors.shipping_last_name}\r\n        helperText={formErrors.shipping_last_name}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={4} display={'none'}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Customer GSTIN\"\r\n       \r\n        value={orderData.customer_gstin}\r\n        onChange={(e) => handleChange(\"customer_gstin\", e.target.value)}\r\n        error={!!formErrors.customer_gstin}\r\n        helperText={formErrors.customer_gstin}\r\n      />\r\n    </Grid>\r\n\r\n    \r\n    <Grid item xs={12}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Complete Address\"\r\n        required\r\n        value={orderData.deliveryAddress}\r\n        onChange={(e) => handleChange(\"deliveryAddress\", e.target.value)}\r\n        error={!!formErrors.deliveryAddress}\r\n        helperText={formErrors.deliveryAddress}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={4}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Landmark (Optional)\"\r\n        value={orderData.deliveryLandmark}\r\n        onChange={(e) => handleChange(\"deliveryLandmark\", e.target.value)}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={4}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Pincode\"\r\n        required\r\n        value={orderData.deliveryPincode}\r\n        onChange={(e) => handleChange(\"deliveryPincode\", e.target.value)}\r\n        inputProps={{ maxLength: '6' }}\r\n        error={!!formErrors.deliveryPincode}\r\n        helperText={formErrors.deliveryPincode}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={4}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"City\"\r\n        required\r\n        value={orderData.deliveryCity}\r\n        onChange={(e) => handleChange(\"deliveryCity\", e.target.value)}\r\n        error={!!formErrors.deliveryCity}\r\n        helperText={formErrors.deliveryCity}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={4}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"State\"\r\n        required\r\n        value={orderData.deliveryState}\r\n        onChange={(e) => handleChange(\"deliveryState\", e.target.value)}\r\n        error={!!formErrors.deliveryState}\r\n        helperText={formErrors.deliveryState}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={4}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Alternate Mobile Number (Optional)\"\r\n        value={orderData.deliveryAlternateMobile}\r\n        onChange={(e) => handleChange(\"deliveryAlternateMobile\", e.target.value)}\r\n        inputProps={{ maxLength: '10' }}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={4}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Email ID (Optional)\"\r\n        value={orderData.deliveryEmail}\r\n        onChange={(e) => handleChange(\"deliveryEmail\", e.target.value)}\r\n      />\r\n    </Grid>\r\n  </Grid>\r\n   {/* Same as Billing Checkbox */}\r\n  <Grid container spacing={3}>\r\n\r\n \r\n<Box mt={4} ml={3}>\r\n  <FormControlLabel\r\n    control={\r\n      <Checkbox\r\n        checked={sameAsBilling}\r\n        onChange={(e) =>  setSameAsBilling(e.target.checked)}\r\n      />\r\n    }\r\n    label=\"Billing Details are same as Delivery Details\"\r\n  />\r\n</Box>\r\n</Grid>\r\n\r\n   {/* Conditionally Render Billing Fields */}\r\n   {!sameAsBilling && (\r\n       \r\n          <Grid container mt={1} spacing={3}>\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <CustomTextField\r\n                fullWidth\r\n                label=\"Billing Mobile Number\"\r\n                required\r\n                value={orderData.billingMobile || \"\"}\r\n                inputProps={{ maxLength: '10' }}\r\n                error={!!formErrors.billingMobile}\r\n                helperText={formErrors.billingMobile}\r\n                onChange={(e) => handleChange(\"billingMobile\", e.target.value)}\r\n              \r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"First Name\"\r\n        required\r\n        value={orderData.billing_customer_name || ''}\r\n        onChange={(e) => handleChange(\"billing_customer_name\", e.target.value)}\r\n        error={!!formErrors.billing_customer_name}\r\n        helperText={formErrors.billing_customer_name}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={4}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Last Name\"\r\n        required\r\n        value={orderData.billing_last_name || ''}\r\n        onChange={(e) => handleChange(\"billing_last_name\", e.target.value)}\r\n        error={!!formErrors.billing_last_name}\r\n        helperText={formErrors.billing_last_name}\r\n      />\r\n    </Grid>\r\n            <Grid item xs={12}>\r\n              <CustomTextField\r\n                fullWidth\r\n                label=\"Billing Address\"\r\n                required\r\n                value={orderData.billingAddress || \"\"}\r\n                error={!!formErrors.billingAddress}\r\n                helperText={formErrors.billingAddress}\r\n                onChange={(e) => handleChange(\"billingAddress\", e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <CustomTextField\r\n                fullWidth\r\n                label=\"Billing Landmark (Optional)\"\r\n                value={orderData.billingLandmark || \"\"}\r\n                onChange={(e) => handleChange(\"billingLandmark\", e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <CustomTextField\r\n                fullWidth\r\n                label=\"Billing Pincode\"\r\n                required\r\n                // inputProps={maxLength:'6'}\r\n                inputProps={{ maxLength: '6' }}\r\n                value={orderData.billingPincode || \"\"}\r\n                error={!!formErrors.billingPincode}\r\n                helperText={formErrors.billingPincode}\r\n                onChange={(e) => handleChange(\"billingPincode\", e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <CustomTextField\r\n                fullWidth\r\n                label=\"Billing City\"\r\n                required\r\n                value={orderData.billingCity || \"\"}\r\n                error={!!formErrors.billingCity}\r\n                helperText={formErrors.billingCity}\r\n                onChange={(e) => handleChange(\"billingCity\", e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <CustomTextField\r\n                fullWidth\r\n                label=\"Billing State\"\r\n                required\r\n                value={orderData.billingState || \"\"}\r\n                error={!!formErrors.billingState}\r\n                helperText={formErrors.billingState}\r\n                onChange={(e) => handleChange(\"billingState\", e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <CustomTextField\r\n                fullWidth\r\n                label=\"Billing Email (Optional)\"\r\n                value={orderData.billingEmail || \"\"}\r\n                onChange={(e) => handleChange(\"billingEmail\", e.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid> )}\r\n\r\n\r\n   \r\n\r\n \r\n \r\n</CustomOrderBox>\r\n\r\n\r\n<CustomOrderBox title=\"Product Details\">\r\n  {products.map((product, index) => (\r\n    <Box key={index} mb={4}>\r\n      {/* <Typography variant=\"subtitle1\" mb={1}>\r\n        Product #{index + 1}\r\n      </Typography> */}\r\n\r\n      <Grid container spacing={3}>\r\n        {/* First row: 5 fields */}\r\n        <Grid item xs={12} md={6} lg={2.4}>\r\n          <CustomTextField\r\n            fullWidth\r\n            label=\"Product Name\"\r\n            required\r\n            value={product.productName}\r\n            onChange={(e) =>\r\n              handleProductChange(index, \"productName\", e.target.value)\r\n            }\r\n            error={Boolean(productErrors[index]?.productName)}\r\n            helperText={productErrors[index]?.productName}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={2.4}>\r\n          <CustomTextField\r\n            fullWidth\r\n            label=\"Product SKU\"\r\n            required\r\n            value={product.sku}\r\n            onChange={(e) =>\r\n              handleProductChange(index, \"sku\", e.target.value)\r\n            }\r\n            error={Boolean(productErrors[index]?.sku)}\r\n            helperText={productErrors[index]?.sku}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={2.4}>\r\n          <CustomTextField\r\n            fullWidth\r\n            label=\"Product Value\"\r\n            required\r\n            type=\"number\"\r\n            value={product.unitPrice}\r\n            onChange={(e) =>\r\n              handleProductChange(index, \"unitPrice\", e.target.value)\r\n            }\r\n            error={Boolean(productErrors[index]?.unitPrice)}\r\n            helperText={productErrors[index]?.unitPrice}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={2.4}>\r\n          <CustomTextField\r\n            fullWidth\r\n            label=\"Quantity\"\r\n            required\r\n            type=\"number\"\r\n            value={product.quantity}\r\n            onChange={(e) =>\r\n              handleProductChange(index, \"quantity\", e.target.value)\r\n            }\r\n            error={Boolean(productErrors[index]?.quantity)}\r\n            helperText={productErrors[index]?.quantity}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={2.4} display={'none'}>\r\n          <CustomTextField\r\n            fullWidth\r\n            label=\"Product Discount (%)\"\r\n            type=\"number\"\r\n            value={product.productDiscount}\r\n            onChange={(e) =>\r\n              handleProductChange(index, \"productDiscount\", e.target.value)\r\n            }\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={2.4} display={'none'}>\r\n          <CustomTextField\r\n            fullWidth\r\n            label=\"Tax Rate (%)\"\r\n            type=\"number\"\r\n            value={product.taxRate}\r\n            onChange={(e) =>\r\n              handleProductChange(index, \"taxRate\", e.target.value)\r\n            }\r\n          />\r\n        </Grid>\r\n\r\n        {/* Second row: HSN and Delete */}\r\n        <Grid item xs={12} md={6} lg={2.4} display={'none'}>\r\n          <CustomTextField\r\n            fullWidth\r\n            label=\"HSN Code\"\r\n            value={product.hsnCode}\r\n            onChange={(e) =>\r\n              handleProductChange(index, \"hsnCode\", e.target.value)\r\n            }\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6} lg={2.4} display=\"flex\" alignItems=\"center\">\r\n          {index !== 0 && (\r\n            <IconButton\r\n              onClick={() => handleRemoveProduct(index)}\r\n              color=\"error\"\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  ))}\r\n\r\n  {/* Add product button aligned properly */}\r\n  <Box mt={2} display=\"flex\" justifyContent=\"flex-end\">\r\n    <Button variant=\"outlined\" onClick={handleAddProduct}>\r\n      + Add More Product\r\n    </Button>\r\n  </Box>\r\n\r\n  {/* <CustomOrderBox title=\"Add Other Charges Optional\">\r\n<Grid container spacing={3}>\r\n    <Grid item xs={12} md={6} lg={3}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Shipping Charges\"\r\n        value={otherCharges?.shippingCharges || ''}\r\n\r\n        onChange={(e) => handleOtherCharges(\"shippingCharges\", e.target.value)}\r\n        inputProps={{ maxLength: '6' }}\r\n        // error={!!formErrors.deliveryMobile}\r\n        // helperText={formErrors.deliveryMobile}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={3}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Gift Wrap\"\r\n      \r\n        value={otherCharges?.giftwrap || ''}\r\n        onChange={(e) => handleOtherCharges(\"giftwrap\", e.target.value)}\r\n        // onChange={(e) => handleChange(\"deliveryMobile\", e.target.value)}\r\n        inputProps={{ maxLength: '6' }}\r\n        // error={!!formErrors.deliveryMobile}\r\n        // helperText={formErrors.deliveryMobile}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={3}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Transaction Charges \"\r\n        type='number'\r\n        value={otherCharges?.transactionCharges  || ''}\r\n        onChange={(e) => handleOtherCharges(\"transactionCharges\", e.target.value)}\r\n        // onChange={(e) => handleChange(\"deliveryMobile\", e.target.value)}\r\n        inputProps={{ maxLength: '6' }}\r\n        // error={!!formErrors.deliveryMobile}\r\n        // helperText={formErrors.deliveryMobile}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} lg={3}>\r\n      <CustomTextField\r\n        fullWidth\r\n        label=\"Total Discount\"\r\n        value={otherCharges?.totalDiscount || ''}\r\n        onChange={(e) => handleOtherCharges(\"totalDiscount\", e.target.value)}\r\n        // onChange={(e) => handleChange(\"deliveryMobile\", e.target.value)}\r\n        inputProps={{ maxLength: '6' }}\r\n        // error={!!formErrors.deliveryMobile}\r\n        // helperText={formErrors.deliveryMobile}\r\n      />\r\n    </Grid>\r\n    </Grid>\r\n</CustomOrderBox> */}\r\n<Grid container spacing={3} mt={1} p={1}>\r\n      <Grid  item xs={12} md={6} lg={12}>\r\n\r\n   \r\n     {/* <OrderInfoBlock title={'Sub-total for Product'} value={`₹ ${subtotal}`} />\r\n     <OrderInfoBlock title={'Other Charges'} value={`₹ ${otherChargestotal}`} />\r\n     <OrderInfoBlock title={'Discount'} value={`₹ ${Number(otherCharges?.totalDiscount) || 0}`} /> */}\r\n     <OrderInfoBlock title={'Total Product Value'} value={`₹ ${subtotal + otherChargestotal - (Number(otherCharges?.totalDiscount) || 0)}`} />\r\n          \r\n          \r\n      </Grid>\r\n    \r\n  </Grid>\r\n</CustomOrderBox>\r\n<CustomOrderBox title={\"Package Details\"}>\r\n<Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6} md={2.4}>\r\n          <CustomTextField\r\n            fullWidth\r\n            label=\"Dead Weight (kg)\"\r\n            value={packageInfo.deadWeight}\r\n            onChange={(e) => handlePackageInfo(\"deadWeight\", e.target.value)}\r\n            error={!!packageInfoerrors.deadWeight}\r\n            helperText={packageInfoerrors.deadWeight}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={2.4}>\r\n          <CustomTextField\r\n            fullWidth\r\n            label=\"Length (cm)\"\r\n            value={packageInfo.length}\r\n            onChange={(e) => handlePackageInfo(\"length\", e.target.value)}\r\n            error={!!packageInfoerrors.length}\r\n            helperText={packageInfoerrors.length}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={2.4}>\r\n          <CustomTextField\r\n            fullWidth\r\n            label=\"Breadth (cm)\"\r\n            value={packageInfo.breadth}\r\n            onChange={(e) => handlePackageInfo(\"breadth\", e.target.value)}\r\n            error={!!packageInfoerrors.breadth}\r\n            helperText={packageInfoerrors.breadth}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={2.4}>\r\n          <CustomTextField\r\n            fullWidth\r\n            label=\"Height (cm)\"\r\n            value={packageInfo.height}\r\n            onChange={(e) => handlePackageInfo(\"height\", e.target.value)}\r\n            error={!!packageInfoerrors.height}\r\n            helperText={packageInfoerrors.height}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={2.4}>\r\n          <CustomTextField\r\n            fullWidth\r\n            label=\"Volumetric Weight (kg)\"\r\n            value={packageInfo.volumetricWeight}\r\n            InputProps={{ readOnly: true }}\r\n          />\r\n        </Grid>\r\n        {/* <Grid item xs={12}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={calculateVolumetricWeight}>\r\n            Calculate Volumetric Weight\r\n          </Button>\r\n        </Grid> */}\r\n       \r\n      <Box sx={{p:2}}>\r\n      <Typography\r\n    variant=\"h6\"\r\n    gutterBottom\r\n    sx={{\r\n      paddingBottom: 2,\r\n      fontWeight: \"600\",\r\n      fontSize: \"18px\",\r\n      color: \"var(--bs-primary1)\",\r\n    }}\r\n  >\r\n     Aplicable Weight   {Number(packageInfo.volumetricWeight) > Number(packageInfo?.deadWeight) ? packageInfo.volumetricWeight: packageInfo?.deadWeight  }\r\n  </Typography>\r\n        </Box>\r\n      </Grid>\r\n\r\n      </CustomOrderBox>\r\n<CustomOrderBox>\r\n<Box mt={3}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          gutterBottom\r\n          sx={{\r\n            paddingBottom: 1,\r\n            fontWeight: \"600\",\r\n            fontSize: \"16px\",\r\n            color: \"var(--bs-primary1)\",\r\n          }}\r\n        >\r\n          Mode & Invoice Details\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormControl fullWidth size=\"small\" >\r\n              <InputLabel sx={{ fontSize: \"16px\" }} >Payment Mode</InputLabel>\r\n              <Select label=\"Payment Mode\"   sx={{\r\n      fontSize: \"14px\",\r\n      \"& .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"#ccc\",\r\n      },\r\n      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"var(--bs-primary1)\",\r\n      },\r\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"var(--bs-primary1)\",\r\n      },\r\n    }}   value='Prepaid' disabled>\r\n                <MenuItem value=\"Prepaid\">Prepaid</MenuItem>\r\n                <MenuItem value=\"cod\">Cash on Delivery</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n           \r\n          <Grid item xs={12} sm={6}>\r\n            <FormControl fullWidth size=\"small\" >\r\n              <InputLabel sx={{ fontSize: \"16px\" }} >Order Type</InputLabel>\r\n              <Select label=\"Order Type\"   sx={{\r\n      fontSize: \"14px\",\r\n      \"& .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"#ccc\",\r\n      },\r\n      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"var(--bs-primary1)\",\r\n      },\r\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"var(--bs-primary1)\",\r\n      },\r\n    }}   value={orderType} onChange={(e)=> setOrderType(e.target.value)}>\r\n                <MenuItem value=\"ESSENTIALS\">ESSENTIALS</MenuItem>\r\n                <MenuItem value=\"NON ESSENTIALS\">NON ESSENTIALS</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <CustomTextField\r\n              fullWidth\r\n              label=\"Invoice Value\" \r\n              value={orderData.invoice_number || ''}\r\n              onChange={(e) => handleChange(\"invoice_number\", e.target.value)}\r\n              error={!!formErrors.invoice_number}\r\n              helperText={formErrors.invoice_number}\r\n              inputProps={{\r\n                maxLength:6,\r\n              }}\r\n              required />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Box mt={3}>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          {/* <Grid item xs={12} sm={6}>\r\n          <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={formData.insurance}\r\n                  onChange={(e) => handleChange(\"insurance\", e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Insurance?\"\r\n            />\r\n          </Grid> */}\r\n          {orderData?.invoice_number >= 50000 &&\r\n          <Grid item xs={12} sm={6}>\r\n            <CustomTextField fullWidth label=\"E-Way Value\" \r\n              value={orderData.ewaybill_no || ''}\r\n              onChange={(e) => handleChange(\"ewaybill_no\", e.target.value)}\r\n              error={!!formErrors.ewaybill_no}\r\n              helperText={formErrors.ewaybill_no}\r\n              inputProps={{\r\n                maxLength:12,\r\n              }}\r\n              required />\r\n          </Grid> }\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Box mt={3} display=\"flex\" columnGap={4} >\r\n      <Button variant='outlined' color=\"success\" \r\n          onClick={handleDirectShip}\r\n          disabled={!serviceable || courierLoading}\r\n        sx={{\r\n                                borderColor: 'var(--bs-primary1)', // Custom colors\r\n                                width: \"200px\" ,\r\n                                // backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                                color: \"var(--bs-primary1)\",\r\n\r\n                              }}>\r\n          Ship Order\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"success\" \r\n          onClick={handleSubmit}\r\n          disabled={!serviceable || courierLoading}\r\n        sx={{\r\n                                borderColor: 'var(--bs-primary1)', // Custom colors\r\n                                width: \"200px\" ,\r\n                                backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                                color: \"white\",\r\n\r\n                              }}>\r\n          Create Order\r\n        </Button>\r\n       \r\n        {/* <Button variant=\"outlined\" color=\"error\" sx={{ width: \"45%\" }} onClick={handleReset}>\r\n          Reset\r\n        </Button> */}\r\n      </Box>\r\n</CustomOrderBox>\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst CourierDashboard = () => {\r\n  const [processStart , setProcessStart] = useState(true)\r\n\r\n  const  {setWarehouseDetails} = useCourierDashboard()\r\n  const [checkWareHouse , setCheckWareHouse] = useState(false)\r\n  const [currentStep, setCurrentStep] = useState(\"add-order\"); // \"process\" | \"show\" | \"checkout\"\r\n\r\n  const handleOrderProcessComplete = () => setCurrentStep(\"show\");\r\n  const handleOrderShowComplete = () => setCurrentStep(\"checkout\");\r\n  const [loading , setLoading] = useState(true)\r\n  const editBoolon = new URLSearchParams(window.location.search).get('edit') === 'true';\r\n\r\n  const warehouseFind = async()=> {\r\n         try {\r\n          let response = await getWareHouse()\r\n         \r\n          if(response?.data?.statusCode === 200 )\r\n          {\r\n           setWarehouseDetails(response?.data?.data)\r\n           setCheckWareHouse(true)\r\n          }\r\n         } catch (error) {\r\n          \r\n         } finally {\r\n          setLoading(false);\r\n         }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    warehouseFind()\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    console.log(editBoolon, \"editbool\");\r\n    if (editBoolon) {\r\n       \r\n        setCurrentStep('add-order');\r\n    }\r\n}, []);\r\n\r\n   if(loading === true)\r\n   {\r\n    return null\r\n   }\r\n  return (\r\n    <>\r\n\r\n<div className=\"PageHeading\"><h1>Courier</h1></div>\r\n  \r\n    <Container >\r\n             \r\n             {/* <AddWareHouse/> */}\r\n\r\n            {!processStart ? (\r\n                  <CouirerCheck setProcessStart={setProcessStart}/>\r\n            ) : \r\n             (\r\n              !checkWareHouse ? (\r\n                <AddWareHouse setCheckWareHouse={setCheckWareHouse}/>\r\n              ):\r\n              <>\r\n              {\r\n                currentStep === 'add-order' && (\r\n                <CreateOrder/>\r\n                )\r\n              }\r\n              {/* {currentStep === \"process\" && (\r\n                <OrderProcess onNext={handleOrderProcessComplete} />\r\n              )}\r\n              {currentStep === \"show\" && (\r\n                <OrderShow onNext={handleOrderShowComplete} />\r\n              )}\r\n              {currentStep === \"checkout\" && <OrderCheckout />} */}\r\n            </>\r\n             ) \r\n            }\r\n\r\n         \r\n\r\n{/* {processStart && (\r\n    <>\r\n    \r\n   \r\n      <Tabs\r\n        variant=\"scrollable\"\r\n        scrollButtons=\"auto\"\r\n        centered\r\n        value={tabIndex}\r\n        onChange={(e, newValue) => setTabIndex(newValue)}\r\n      >\r\n        <Tab label=\"Address\" disabled={!completedSteps.has(0)} />\r\n        <Tab label=\"Product Measurement\" disabled={!completedSteps.has(1)} />\r\n        <Tab label=\"Courier Agency\" disabled={!completedSteps.has(2)} />\r\n        <Tab label=\"Product Description\" disabled={!completedSteps.has(3)} />\r\n        <Tab label=\"Sender Details\" disabled={!completedSteps.has(4)} />\r\n        <Tab label=\"Receiver Details\" disabled={!completedSteps.has(5)} />\r\n        <Tab label=\"Review & Confirm\" disabled={!completedSteps.has(6)} />\r\n        <Tab label=\"Booking Payment\" disabled={!completedSteps.has(7)} />\r\n        <Tab label=\"Generate Challan\" disabled={!completedSteps.has(8)} />\r\n      </Tabs>\r\n\r\n      <Card style={{ padding: \"2rem\", marginTop: \"1rem\", boxShadow: \"0px 4px 10px rgba(0,0,0,0.1)\" }}>\r\n        {tabIndex === 0 && <Address onComplete={handleComplete} />}\r\n        {tabIndex === 1 && <ProductMeasurement onComplete={handleComplete} />}\r\n        {tabIndex === 2 && <CourierAgency onComplete={handleComplete} />}\r\n        {tabIndex === 3 && <ProductDescription onComplete={handleComplete} />}\r\n        {tabIndex === 4 && <SenderDetails onComplete={handleComplete} />}\r\n        {tabIndex === 5 && <ReceiverDetails onComplete={handleComplete} />}\r\n        {tabIndex === 6 && <ReviewAndConfirm onComplete={handleComplete} />}\r\n        {tabIndex === 7 && <BookingPayment onComplete={handleComplete} />}\r\n        {tabIndex === 8 && <GenerateChallan />}\r\n      </Card>\r\n      </> )}  */}\r\n    </Container>\r\n  \r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CourierDashboard;\r\n","import { useState } from 'react';\r\nimport { Box, Typography, Tooltip, IconButton, Avatar } from '@mui/material';\r\nimport { PhotoCamera, Delete } from '@mui/icons-material';\r\n// import { cloudImage } from '../api/upload/imageUpload';\r\nimport { cloudImage } from '../api/login/Login';\r\nimport { genrateUrl } from '../utils/genrateUrl';\r\n\r\n\r\nconst useCourierImageUploadOnboard = () => {\r\n    // const [image, setImage] = useState(null);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n \r\n    const handleImageChange = async (e) => {\r\n        const file = e.target.files[0];\r\n        const allowedTypes = ['image/jpeg', 'image/png', 'image/gif'];\r\n\r\n        if (file && allowedTypes.includes(file.type)) {\r\n            // const previewUrl = URL.createObjectURL(file);\r\n            // setImage(previewUrl);\r\n\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('image', file);\r\n                let res = await cloudImage(formData);\r\n                setTimeout(()=>{\r\n                    setImageUrl(res?.data?.data?.url);\r\n                },750)\r\n               \r\n            } catch (error) {\r\n                console.error('Image upload failed:', error);\r\n            }\r\n        }\r\n    };\r\n   \r\n\r\n   \r\n    const handleRemoveImage = () => {\r\n        // setImage(null);\r\n        setImageUrl('');\r\n    };\r\n\r\n    \r\n\r\n    const ImageUpload = ({ index = 0, title = 'No Image', editBool = true }) => (\r\n        <Box\r\n            sx={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: 250,\r\n                borderRadius: 2,\r\n                overflow: 'hidden',\r\n                bgcolor: 'grey.200',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                cursor: 'pointer',\r\n            }}\r\n            onClick={() => !imageUrl && document.getElementById(`image-upload-${index}`)?.click()}\r\n        >\r\n            {imageUrl ? (\r\n                <Avatar\r\n                    src={genrateUrl(imageUrl)}\r\n                    variant=\"rounded\"\r\n                    sx={{ width: '100%', height: '100%' }}\r\n                    onClick={(e) => e.stopPropagation()}\r\n                />\r\n            ) : (\r\n                <Typography color=\"textSecondary\">{title}</Typography>\r\n            )}\r\n            <input\r\n                accept=\"image/*\"\r\n                style={{ display: 'none' }}\r\n                id={`image-upload-${index}`}\r\n                type=\"file\"\r\n                onChange={(e) => handleImageChange(e, index)}\r\n            />\r\n            {!imageUrl && (\r\n                <Tooltip title=\"Upload Image\">\r\n                    <IconButton\r\n                        component=\"span\"\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            document.getElementById(`image-upload-${index}`)?.click();\r\n                        }}\r\n                        sx={{ position: 'absolute', bottom: 8, right: 8, bgcolor: 'white' }}\r\n                    >\r\n                        <PhotoCamera />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            )}\r\n            {imageUrl && editBool && (\r\n                <Tooltip title=\"Remove Image\">\r\n                    <IconButton\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleRemoveImage(index);\r\n                        }}\r\n                        sx={{ position: 'absolute', top: 8, right: 8, bgcolor: 'white' }}\r\n                    >\r\n                        <Delete />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            )}\r\n        </Box>\r\n    );\r\n\r\n    return { ImageUpload, imageUrl , setImageUrl };\r\n};\r\n\r\nexport default useCourierImageUploadOnboard;\r\n","import React from 'react';\r\nimport { Container, Row, Col, Button, Typography, Box } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaCheckCircle } from 'react-icons/fa';\r\n\r\nconst CourierKycPending = () => {\r\n  return (\r\n    <Container maxWidth=\"lg\" className=\"mt-4 d-flex align-items-center justify-content-center\">\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          borderRadius: 2,\r\n          boxShadow: 3,\r\n          padding: 4,\r\n          backgroundColor: 'white',\r\n        }}\r\n      >\r\n        <FaCheckCircle className=\"confirmation-icon mb-4\" />\r\n        <Typography variant=\"h3\" fontSize={'20px'} color=\"var(--bs-nav)\" gutterBottom>\r\n          Congratulations!\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body1\"\r\n          color=\"textSecondary\"\r\n          sx={{ textAlign: 'left', marginBottom: 4 }}\r\n          fontSize={'14px'}\r\n        >\r\n          KYC Verification in Progress\r\n          <br />\r\n          Thank you for submitting your KYC documents. Your verification is\r\n          currently under review. Please bear with us for a moment while we\r\n          process your details. You will be notified as soon as your KYC is\r\n          approved via an OTP. In the meantime, please feel free to reach out\r\n          if you have any questions.\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          sx={{ textTransform: 'none' ,\r\n            backgroundColor: 'var(--bs-primary1)', \r\n            color: \"white\",\r\n          \r\n          }}\r\n        >\r\n          <Link to=\"/dashboard\" style={{ textDecoration: 'none', color: 'white' }}>\r\n            <span style={{color:\"#fff\"}}>\r\n            Back to Dashboard\r\n            </span>\r\n            \r\n          </Link>\r\n        </Button>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CourierKycPending;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport {Dialog, DialogTitle, DialogContent, DialogActions, MenuItem, Container, Card, TextField, Avatar, Button, Typography, Stack, Grid, Tabs, Tab, Box , Autocomplete  } from \"@mui/material\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Select from \"react-select\";\r\nimport {\r\n\r\n    createsponserPaymentGatewayOrder,\r\n  getAllBank,\r\n  getsponserPaymentAmount,\r\n  sendSponserOtp,\r\n  sponserPaymentWallet,\r\n  verifyponserPaymentGatewayResponse,\r\n  verifySponserOtp,\r\n  corieronboardingAdharOtpSend,\r\n  corieronboardingBankVerification,\r\n  corieronboardingPanVerify,\r\n  corieronboardingAdharOtpVerify,\r\n  corieronboardingAddDoc,\r\n  corieronboardingKycVideo,\r\n  corierSignup,\r\n  getDetailByPin,\r\n  getDMtcharges,\r\n  Getprofile,\r\n  getCorieronboardingDoc,\r\n  getcorieronboardAggrement,\r\n  corierAgrementCheck,\r\n} from \"../../api/login/Login\";\r\n\r\nimport CouierDashboard from \"./CouierDashboard\";\r\nimport { FormHelperText, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from \"@mui/material\";\r\nimport { loadScript } from \"../../utils/loadScript\";\r\n\r\nimport toastMessage from \"../../utils/toastMessage\";\r\nimport { genrateUrl } from \"../../utils/genrateUrl\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport useCourierImageUploadOnboard from \"../../hooks/useCourierImageUploadOnboard\";\r\nimport useVideoUpload from \"../../hooks/useVideoUpload\";\r\nimport useVideoRecorder from \"../../hooks/useViderRecorder\";\r\nimport VideoRecorder from \"../../components/compeleteRegister/VideoRecorder\";\r\nimport { FaVideo, FaUpload } from 'react-icons/fa';\r\nimport { CourierDashboardProvider } from \"./CourierDashboardProvider\";\r\nimport withLocation from \"../../utils/withLocation\";\r\nimport { razor_pay_key } from \"../../baseUrl\";\r\nimport CourierKycPending from \"./CourierKycPending\";\r\nimport Loader from \"../../common/loader/Loader\";\r\n\r\nconst mobileRegex = /^[6-9]\\d{9}$/;\r\n\r\n\r\n\r\n\r\nconst validationSchema = yup.object().shape({\r\n    name: yup.string()\r\n    // .required(\"Name is required\"), ,\r\n    ,\r\n    pincode: yup\r\n        .string()\r\n        .matches(/^[0-9]{6}$/, \"Pincode must be exactly 6 digits\")\r\n        .required(\"Enter your pincode.\"),\r\n        city: yup.string().trim().required(\"City Name is required\"),\r\n        state: yup.string().trim().required(\"State Name is required\"),    \r\n    fatherName: yup.string().trim().required(\"Father's Name is required\"),\r\n    education: yup.string().trim().required(\"Education is required\"),\r\n    permanentAddress: yup.string().trim().required(\"Permanent Address is required\"),\r\n    aadharNumber: yup\r\n        .string()\r\n        // .matches(/^\\d{12}$/, \"Aadhar Number must be 12 digits\")\r\n        // .required(\"Aadhar Number is required\"),\r\n        ,\r\n    panNumber: yup\r\n        .string()\r\n        .matches(/^[A-Z]{5}[0-9]{4}[A-Z]{1}$/, \"Invalid PAN Number\")\r\n        .required(\"PAN Number is required\"),\r\n    firmName: yup.string().trim().required(\"Firm Name is required\"),\r\n    businessAddress: yup.string().required(\"Business Address is required\"),\r\n    businessMobileNumber: yup\r\n        .string()\r\n        .matches(/^[0-9]{10}$/, \"Invalid Mobile Number\")\r\n        .required(\"Business Mobile Number is required\"),\r\n    businessMailId: yup.string().email(\"Invalid email\").required(\"Business Mail Id is required\"),\r\n    shopNearbyLocation: yup.string().trim().required(\"Shop Nearby Location is required\"),\r\n    yearOfBusinessPlace: yup\r\n        .number()\r\n        .typeError(\"Must be a number\")\r\n        .required(\"Year of Business Place is required\"),\r\n    businessPlaceType: yup\r\n        .string()\r\n        .oneOf([\"Owned\", \"Rented\"], \"Select a valid option\")\r\n        .required(\"Business Place Type is required\"),\r\n        bank_type: yup\r\n        .string()\r\n        .oneOf([\"savings\", \"current\"], \"Select a valid option\")\r\n        .required(\"Bank Type is required\"),    \r\n    workingTime: yup.string().required(\"Working Time is required\"),\r\n    workingDays: yup\r\n        .string()\r\n        .oneOf([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"], \"Select a valid option\")\r\n        .required(\"Working Days is required\"),\r\n    otp : yup.string(),\r\n    // otp: yup.string().when(\"aadharNumber\", (aadharNumber, schema, context) => {\r\n    //     const initialAadharNumber = context?.options?.context?.initialValues?.aadharNumber;\r\n\r\n    //     // Ensure both values exist and check modification\r\n    //     if (initialAadharNumber && aadharNumber && initialAadharNumber !== aadharNumber) {\r\n    //         return schema.required(\"OTP is required for Aadhar verification\");\r\n    //     }\r\n    //     return schema.notRequired();\r\n    // }),\r\n\r\n    bank_id: yup.string().required(\"Please select a bank\"),\r\n    ifsc: yup.string().trim().required(\"IFSC Code is required\"),\r\n    account_number: yup\r\n    .string().trim().required(\"Please enter bank account number\"),\r\n    businessType: yup.string()\r\n    .oneOf([\"Proprietor\", \"Individual\", \"OPC\", \"Private Limited\", \"Public Limited\"], \"Select a valid Business Type\")\r\n    .required(\"Business Type is required\"),\r\n});\r\n\r\n\r\n\r\nconst SponsorVerification = ({ setUser, sponserUser , setSponserUser, setProcessStart, setShowSponsorTab }) => {\r\n    const [mobileNumber, setMobileNumber] = useState(\"\");\r\n    const [ mobileError , setMobileError] = useState(false)\r\n    const [loading , setLoading]= useState(false)\r\n    const [otp, setOtp] = useState(\"\");\r\n    const [otpSent, setOtpSent] = useState(false);\r\n    const [otpVerified, setOtpVerified] = useState(false);\r\n  \r\n\r\n    const sendOTP = withLocation(async (latitude, longitude) => {\r\n        let body = {\r\n            sponcer_mobile: `+91${mobileNumber}`,\r\n            lat: latitude,\r\n            long: longitude,\r\n            sponcer : true,\r\n\r\n        };\r\n        setLoading(true)\r\n        try {\r\n            let res = await sendSponserOtp(body);\r\n             toastMessage(res?.data?.error , res?.data?.message)\r\n             if(!res?.data?.error)\r\n             {\r\n                setOtpSent(true);\r\n                setSponserUser(res?.data?.data?.sponsorData)\r\n                setOtp('')\r\n             }\r\n            \r\n           \r\n            \r\n        } catch (error) {\r\n            console.error(\"Error sending OTP:\", error);\r\n        } finally{\r\n            setLoading(false)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * verifyOTP function using for \r\n     * @param {float} latitude \r\n     * @param {float} longitude\r\n     * @return void\r\n     * @since 26/03/2025\r\n     * @author Jax || from <Needu>\r\n     */\r\n    const verifyOTP = withLocation(async (latitude, longitude) => {\r\n        let body = {\r\n            sponcer_mobile: `+91${mobileNumber}`,\r\n            otp: otp,\r\n    \r\n        };\r\n       setLoading(true)\r\n        try {\r\n            let res = await verifySponserOtp(body);\r\n           \r\n            toastMessage(res?.data?.error , res?.data?.message)\r\n            if(!res?.data?.error)\r\n            {\r\n            //    setOtpSent(true);\r\n            setUser(res?.data?.data)\r\n               setOtpVerified(true);\r\n            }\r\n          \r\n        } catch (error) {\r\n            console.error(\"Error verifying OTP:\", error);\r\n        }finally{\r\n            setLoading(false)\r\n        }\r\n    });\r\n\r\n    const startWithSponsor = () => {\r\n        // alert(\"You have chosen to start with the sponsor!\");\r\n        setShowSponsorTab(true);\r\n        setProcessStart(true);\r\n    };\r\n\r\n\r\n\r\n    const withoutSponserData = withLocation(async (latitude, longitude) => {\r\n        let body = {\r\n            sponcer_mobile: `+91${mobileNumber}`,\r\n            lat: latitude,\r\n            long: longitude,\r\n            sponcer : false,\r\n\r\n        };\r\n        setLoading(true)\r\n        try {\r\n            let res = await sendSponserOtp(body);\r\n             toastMessage(res?.data?.error , res?.data?.message)\r\n             if(!res?.data?.error)\r\n             {\r\n               \r\n                setUser(res?.data?.data)\r\n                setShowSponsorTab(false);\r\n                setProcessStart(true);\r\n              \r\n             }\r\n           \r\n         \r\n           \r\n            \r\n        } catch (error) {\r\n            console.error(\"Error sending OTP:\", error);\r\n        } finally{\r\n            setLoading(false)\r\n        }\r\n    });\r\n\r\n    const startWithoutSponsor = () => {\r\n        withoutSponserData()\r\n      \r\n    };\r\n\r\n    const handleReset = ()=>{\r\n       setOtpSent(false)\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth={'sm'}  style={{ marginTop: \"2rem\" }}>\r\n            <Grid container spacing={4} >\r\n                {/* Left Side: Profile Cards */}\r\n            \r\n                \r\n                {/* Right Side: Process Section */}\r\n                <Grid item xs={12}>\r\n                    <Card style={{ padding: \"2rem\", boxShadow: \"0px 4px 10px rgba(0,0,0,0.1)\" }}>\r\n                        <Typography variant=\"h5\" align=\"center\" gutterBottom style={{color:'var(--bs-primary1)'}}>\r\n                            Enter Sponsor Details\r\n                        </Typography>\r\n                        <TextField\r\n                            label=\"Mobile Number\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            value={mobileNumber}\r\n                            disabled={otpVerified || otpSent}\r\n                            onChange={(e) => {\r\n                                const value = e.target.value.replace(/\\D/g, \"\").slice(0, 10);\r\n                                setMobileNumber(value);\r\n                                setMobileError(!mobileRegex.test(value)); // Validate number\r\n                            }}\r\n                            error={mobileError}\r\n                            helperText={mobileError ? \"Enter a valid 10-digit mobile number\" : \"\"}\r\n                            margin=\"normal\"\r\n                            required\r\n                            sx={{\r\n                                \"& .MuiOutlinedInput-root\": {\r\n                                  \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                  \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                },\r\n                                \"& label.Mui-focused\": {\r\n                                  color: 'var(--bs-nav)',\r\n                                },\r\n                              }}\r\n                        />\r\n\r\n                        {otpSent ? \r\n                         <>\r\n                         <Button variant='outlined' color=\"primary\" fullWidth  \r\n                           onClick={handleReset}\r\n                           disabled={otpVerified}\r\n                         sx={{\r\n                            // backgroundColor: 'var(--bs-primary1)', \r\n                            borderColor:'var(--bs-primary1)',\r\n                            color: \"var(--bs-primary1)\",\r\n                          \r\n                          }}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                         </>:\r\n                         <>\r\n                         <Button variant=\"contained\" color=\"primary\" fullWidth onClick={sendOTP} \r\n                        disabled={!mobileRegex.test(mobileNumber) || otpVerified || loading} \r\n                         sx={{\r\n                            backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                            color: \"white\",\r\n                          \r\n                          }}\r\n                        >\r\n                            Send OTP\r\n                        </Button>\r\n                         </>\r\n                    }\r\n                        \r\n                        {otpSent && (\r\n                            <>\r\n                                <TextField\r\n                                    label=\"Enter OTP\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    value={otp}\r\n                                    onChange={(e) => setOtp(e.target.value)}\r\n                                    disabled={ otpVerified}\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    sx={{\r\n                                        \"& .MuiOutlinedInput-root\": {\r\n                                          \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                          \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                        },\r\n                                        \"& label.Mui-focused\": {\r\n                                          color: 'var(--bs-nav)',\r\n                                        },\r\n                                      }}\r\n                                />\r\n                                <Button variant=\"contained\" color=\"success\" fullWidth onClick={verifyOTP} disabled={otp.length < 4 || otpVerified || loading} \r\n                                 sx={{\r\n                                    borderColor: 'var(--bs-primary1)', // Custom colors\r\n                                  \r\n                                    backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                                    color: \"white\",\r\n                                  }}\r\n                                >\r\n                                    Verify OTP\r\n                                </Button>\r\n                            </>\r\n                        )}\r\n\r\n                        {(otpSent && sponserUser?.adhaar_name ) && (\r\n                               <Grid sx={{ marginTop: \"2rem\" }} item xs={12}>\r\n                            \r\n                                  <Card\r\n                                 \r\n                                  style={{\r\n                                    padding: \"1rem\",\r\n                                    marginBottom: \"1rem\",\r\n                                    backgroundColor: \"white\",\r\n                                    borderRadius: \"10px\",\r\n                                    boxShadow: \"0px 4px 10px rgba(0,0,0,0.1)\",\r\n                                 \r\n                                  }}\r\n                                >\r\n                                   \r\n                                   <Box   style={{\r\n                                \r\n                                    textAlign: \"center\",\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                    alignItems: \"center\",\r\n                                  }}>\r\n           \r\n                                 \r\n                                  <Avatar\r\n                                    src={genrateUrl(sponserUser?.profile)}\r\n                                    sx={{ width: 60, height: 60, bgcolor: \"var(--bs-secondary2)\", marginBottom: \"0.5rem\" }}\r\n                                  />\r\n                                    </Box>\r\n                                    <Box   style={{\r\n                                      marginLeft : '1rem',\r\n                                      marginTop: '1rem',\r\n                                      marginBottom:'3rem',\r\n                              \r\n                              }}>\r\n           \r\n                                 \r\n                                  <Typography variant=\"body1\"><span><b>Name</b> :</span> {sponserUser?.adhaar_name} </Typography>\r\n                                  <Typography variant=\"body2\"><span><b>Address</b> :</span> {sponserUser?.business_Address}</Typography>\r\n                                  <Typography variant=\"body2\"><span><b>Phone</b> :</span> {sponserUser?.mobile}</Typography>\r\n                                  </Box>\r\n                                </Card>\r\n                                \r\n                             \r\n                           </Grid>\r\n                        )}\r\n                        {otpVerified && (\r\n                            <Stack spacing={2} direction=\"column\" mt={2}>\r\n                                <Button variant=\"outlined\" color=\"success\" sx={{\r\n                                borderColor: 'var(--bs-primary1)', // Custom colors\r\n                              \r\n                                // backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                                color: 'var(--bs-primary1)',\r\n                              }} fullWidth onClick={startWithSponsor}>\r\n                                    Start with Sponsor\r\n                                </Button>\r\n\r\n                                <Button variant=\"outlined\" color=\"success\" sx={{\r\n                                borderColor: 'var(--bs-primary1)', // Custom colors\r\n                              \r\n                                // backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                                color: 'var(--bs-primary1)',\r\n                              }} fullWidth onClick={startWithoutSponsor}>\r\n                                    Start with without Sponsor\r\n                                </Button>\r\n                               \r\n                            </Stack>\r\n                        )}\r\n                        {!otpSent && (\r\n                            <Button variant=\"outlined\" color=\"secondary\" fullWidth onClick={startWithoutSponsor} style={{ marginTop: \"1rem\" }}  sx={{\r\n                                borderColor: 'var(--bs-primary1)', // Custom colors\r\n                              \r\n                                // backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                                color: 'var(--bs-primary1)',\r\n                              }}>\r\n                                Start without Sponsor\r\n                            </Button>\r\n                        )}\r\n                    </Card>\r\n                </Grid>\r\n\r\n             \r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst SignupForm = ({walletShowHeader,setpageLoader , user , onComplete }) => {\r\n    console.log(user , \"user\")\r\n    const [formData, setFormData] = useState(null);\r\n    const [isOtpRequired, setIsOtpRequired] = useState(false);\r\n    // const [verficationCharges , setVerificationCharges] = useState('')\r\n    \r\n    const [previousAadhar, setPreviousAadhar] = useState(null);\r\n    const [isAadharVerified, setIsAadharVerified] = useState(false);\r\n    const [isBankVerified, setIsBankVerified] = useState(false);\r\n    const [bankList, setBankList] = useState([]);\r\n    const [bankVerifiedId , setBankVerifiedId] = useState('')\r\n    const [adharRef , setadharRef] = useState('')\r\n\r\n    const validatePanNumber = async ( panNumber) => {\r\n            let body = {\r\n                pan:panNumber,\r\n                user_id: window.localStorage.getItem(\"userToken\"),\r\n               }\r\n\r\n               try {\r\n                let response = await corieronboardingPanVerify(body)\r\n                setFormData((pre)=>({...pre , name : response?.data?.data?.name  }))\r\n            } catch (error) {\r\n                \r\n            }\r\n      \r\n        \r\n    }\r\n\r\n      //  const getVerificationCharges = async()=> {\r\n              \r\n      //       try {\r\n      //           let res  = await getDMtcharges()  \r\n      //           setVerificationCharges(res?.data?.data?.bankVerificationCharge)\r\n      //       } catch (error) {\r\n                \r\n      //       }\r\n    \r\n      //     }\r\n    useEffect(() => {\r\n     \r\n            const fetchedData = {\r\n                 pincode :\"\",\r\n                 city :\"\",\r\n                 state:\"\",\r\n                fatherName: \"\",\r\n                education: \"\",\r\n                permanentAddress: user?.presentAddr,\r\n                aadharNumber: user?.adhaar_number,\r\n                panNumber: user?.pan_number,\r\n                firmName: \"\",\r\n                businessAddress: user?.business_Address,\r\n                businessMobileNumber: user?.mobile?.slice(3),\r\n                businessMailId: user?.email,\r\n                account_number:'',\r\n                bank_id :'',\r\n                ifsc:'',\r\n                bank_type :'current',\r\n                shopNearbyLocation: \"\",\r\n                yearOfBusinessPlace: \"\",\r\n                businessPlaceType: \"\",\r\n                workingTime: \"\",\r\n                workingDays: \"\",\r\n                businessType:\"\"\r\n            };\r\n            setFormData((pre)=>({...pre , ...fetchedData}));\r\n            // setPreviousAadhar(fetchedData.aadharNumber);\r\n            setIsAadharVerified(false); // Mark as verified initially\r\n          \r\n\r\n          \r\n                validatePanNumber(user?.pan_number)\r\n         \r\n      \r\n    }, []);\r\n    const formFields = [\r\n        { key: \"businessAddress\", label: \"Business Address\" },\r\n        { key: \"education\", label: \"Education\" },\r\n      \r\n        { key: \"firmName\", label: \"Firm Name\" },\r\n        \r\n        { key: \"businessMobileNumber\", label: \"Business Mobile Number\" },\r\n        { key: \"businessMailId\", label: \"Business Mail ID\" },\r\n        { key: \"shopNearbyLocation\", label: \"Shop Nearby Location\" },\r\n        { key: \"yearOfBusinessPlace\", label: \"Year of Business Place\" },\r\n    ];\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchBanks = async () => {\r\n            try {\r\n                const res = await getAllBank();\r\n                const mapped = res?.data?.data?.map((item) => ({\r\n                    value: item, // Store full bank object as value\r\n                    label: item.bank_name, // Show only bank_name in dropdown\r\n                }));\r\n                setBankList(mapped);\r\n            } catch (error) {\r\n                console.error(\"Error fetching bank list:\", error);\r\n            }\r\n        };\r\n        fetchBanks();\r\n        // getVerificationCharges()\r\n        \r\n    }, []);\r\n\r\n \r\n\r\n  \r\n    \r\n    const validateAddhar = async (adharnumber , setFieldValue)=> {\r\n        setFieldValue('otp' ,'')\r\n       let body = {\r\n        adhaarNumber:adharnumber,\r\n        user_id: window.localStorage.getItem(\"userToken\"),\r\n       }\r\n       setpageLoader(true)\r\n        try {\r\n            let res = await corieronboardingAdharOtpSend(body)\r\n            toastMessage(res?.data?.error , res?.data?.message)\r\n            if(!res?.data?.error)\r\n            {\r\n               // setOtpSent(true);\r\n            //    setPaymentComplete(true);\r\n               setIsOtpRequired(true)\r\n               setadharRef(res?.data?.data?.ref_id)\r\n               \r\n\r\n            }\r\n        } catch (error) {\r\n            \r\n        } finally{\r\n          setpageLoader(false)\r\n        }\r\n       \r\n    }\r\n\r\n    const verifyAadharOtp = async (otp, setErrors) => {\r\n        try {\r\n            if (!otp) {\r\n                setErrors({ otp: \"OTP cannot be empty.\" });\r\n                return;\r\n            }\r\n            setpageLoader(true)\r\n            // alert(\"Aadhar Verified Successfully!\");\r\n          let body = \r\n{otp:otp, ref_id:adharRef}\r\n\r\n            let res = await corieronboardingAdharOtpVerify(body)\r\n            toastMessage(res?.data?.error , res?.data?.message)\r\n            if(!res?.data?.error)\r\n            {\r\n               // setOtpSent(true);\r\n            //    setPaymentComplete(true);\r\n            //    setIsOtpRequired(true)\r\n               setIsAadharVerified(true);\r\n               setIsOtpRequired(false)\r\n               setadharRef(null)\r\n\r\n            }\r\n           \r\n        } catch (error) {\r\n            setErrors({ otp: \"Error verifying OTP\" });\r\n        } finally {\r\n          setpageLoader(false)\r\n        }\r\n    };\r\n\r\n    const bankVerify = async (values, setErrors) => {\r\n\r\n        console.log(values , \"value\")\r\n        try {\r\n            let errors = {};\r\n    \r\n            if (!values?.bank_id) {\r\n                errors.bank_id = \"Please select a bank\";\r\n            }\r\n            if (!values?.account_number) {\r\n                errors.account_number = \"Bank account number is required\";\r\n            }\r\n            if (!values?.ifsc) {\r\n                errors.ifsc = \"IFSC Code is required\";\r\n            } else if (!/^[A-Z]{4}0[A-Z0-9]{6}$/.test(values.ifsc)) {\r\n                errors.ifsc = \"Invalid IFSC Code\";\r\n            }\r\n    \r\n            // If there are any errors, set them and stop verification\r\n            if (Object.keys(errors).length > 0) {\r\n                setErrors(errors);\r\n                return;\r\n            }\r\n            let obj = {\r\n          \r\n           bank_name : values?.bank?.label,\r\n           name:user?.pan_name,\r\n            bankAccount:values?.account_number,\r\n           ifsc:values?.ifsc,\r\n           bank_id : values?.bank_id,\r\n           account_type : values?.bank_type,\r\n       \r\n\r\n            }\r\n            setpageLoader(true)\r\n            let res = await corieronboardingBankVerification(obj)\r\n           \r\n            // \r\n            \r\n            if(!res?.data?.error)\r\n            {\r\n                setIsBankVerified(true);\r\n                setBankVerifiedId(res?.data?.data?.bankDetailesId)\r\n                walletShowHeader()\r\n            }\r\n            toastMessage(res?.data?.error , res?.data?.message)\r\n         \r\n        } catch (error) {\r\n            // setErrors({ otp: \"Error verifying Bank\" });\r\n        } finally{\r\n          setpageLoader(false)\r\n        }\r\n    };\r\n\r\n    const fetchPincode = async (value, setFieldValue, setErrors) => {\r\n        try {\r\n            // Validate Pincode format\r\n            if (!value) {\r\n                setErrors({ pincode: \"Pincode is required\" });\r\n                return;\r\n            } else if (!/^[0-9]{6}$/.test(value)) {\r\n                setErrors({ pincode: \"Pincode must be exactly 6 digits\" });\r\n                return;\r\n            }\r\n    \r\n            // Clear previous errors\r\n            setErrors({});\r\n    \r\n            // Fetch details by pincode\r\n            const res = await getDetailByPin(value);\r\n    \r\n            if (res?.data?.error) {\r\n                setErrors({ pincode: \"Invalid Pincode or not found\" });\r\n            } else {\r\n                setFieldValue(\"city\", res.data?.data?.city || \"\");\r\n                setFieldValue(\"state\", res.data?.data?.state || \"\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching pincode details:\", error);\r\n            setErrors({ pincode: \"Something went wrong. Please try again.\" });\r\n        }\r\n    };\r\n    \r\n    \r\n    \r\n\r\n    const handleSubmit = withLocation(async (latitude, longitude , value) => {\r\n        if(!isAadharVerified)\r\n        {\r\n            return   toastMessage(true , \"Please Verify Your Aadhar Number\")   \r\n        }\r\n        if(!isBankVerified || !bankVerifiedId)\r\n        {\r\n          return   toastMessage(true , \"Please Verify Your Bank Account\")  \r\n        }\r\n\r\n        const body = {\r\n            name: value?.name,\r\n            father_name: value.fatherName,\r\n            email: user?.email,\r\n            Business_mail: value?.businessMailId,\r\n            profile: user?.profile,\r\n            shopNearbyLocatio: value.shopNearbyLocation,\r\n            yearOfBusinessPlace: value.yearOfBusinessPlace,\r\n            businessPlaceType: value.businessPlaceType,\r\n            workingTime: value.workingTime,\r\n            workingDays: value.workingDays,\r\n            bankDetailesId: bankVerifiedId,\r\n            mobile: user?.mobile,\r\n            business_mobile: value.businessMobileNumber,\r\n            sponsor_id: user?.sponcerId || '',\r\n            latitude: latitude,\r\n            longitude: longitude,\r\n            adhaar_number: user?.adhaar_number,\r\n            pan_number: user?.pan_number,\r\n            country: user?.country,\r\n            state: user?.state,\r\n            presentAddr: value.permanentAddress,\r\n            pinCode: user.pincode,\r\n            pan_name: value.name,\r\n            adhaar_name: user?.adhaar_name,\r\n            shop_name: value.firmName,\r\n            business_pincode: value.pincode,\r\n            business_city: value.city,\r\n            business_state: value.state,\r\n            business_Address: user?.business_Address || '',\r\n            businessType : value.businessType,\r\n            educationQualification: value?.education || ''\r\n        };\r\n        \r\n        setpageLoader(true)\r\n        \r\n        \r\n        try {\r\n            let res = await corierSignup(body)\r\n            toastMessage(res?.data?.error , res?.data?.message)\r\n            if(!res?.data.error)\r\n            {\r\n                onComplete()\r\n            }\r\n        } catch (error) {\r\n            \r\n        } finally{\r\n          setpageLoader(false)\r\n        }\r\n    })\r\n\r\n\r\n    if (!formData) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    const workingTimeOptions = [\r\n        { value: \"9AM - 6PM\", label: \"9AM - 6PM\" },\r\n        { value: \"10AM - 5PM\", label: \"10AM - 5PM\" },\r\n        { value: \"10AM - 6PM\", label: \"10AM - 6PM\" },\r\n        { value: \"10AM - 7PM\", label: \"10AM - 7PM\" },\r\n        { value: \"11AM - 8PM\", label: \"11AM - 8PM\" },\r\n    ];\r\n\r\n\r\n   \r\n\r\n    return (\r\n        <Formik\r\n            initialValues={formData}\r\n            enableReinitialize\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values) => {\r\n                \r\n                \r\n                handleSubmit(values)\r\n               \r\n            }}\r\n        >\r\n            {({validateField, setFieldTouched, values, setFieldValue, errors, touched , setErrors , isSubmitting }) => {\r\n                //  console.log(\"Formik Errors:\", errors);\r\n                //  console.log(\"Formik Touch:\", touched);\r\n                //  console.log(\"Formik Values:\", values);\r\n                 return (\r\n                    <Form>\r\n                    <Grid container spacing={2} style={{ marginBottom: \"4rem\" }}>\r\n                        {/* Name (Disabled) */}\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field name=\"name\" as={TextField}  InputLabelProps={{ shrink: true }} label=\"Name\" variant=\"outlined\" fullWidth margin=\"normal\" disabled />\r\n                        </Grid>\r\n                      \r\n                        {/* Father Name */}\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field name=\"fatherName\" as={TextField}  InputLabelProps={{ shrink: true }} label=\"Father Name\" variant=\"outlined\" fullWidth margin=\"normal\"\r\n                                 error={touched.fatherName && Boolean(errors.fatherName)}\r\n                                helperText={touched.fatherName && errors.fatherName} \r\n                                 sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }}\r\n                                   />\r\n                        </Grid>\r\n\r\n                        {/* PAN Number */}\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field\r\n                                name=\"panNumber\"\r\n                                as={TextField}\r\n                                label=\"Pan Number\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled\r\n                                margin=\"normal\"\r\n                                sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }}\r\n                                // error={touched.panNumber && Boolean(errors.panNumber)}\r\n                                // helperText={touched.panNumber && errors.panNumber}\r\n                                // onBlur={(e) => validatePanNumber(e.target.value, setFieldValue, setErrors)}\r\n                            />\r\n                        </Grid>\r\n\r\n                        {/* Aadhar Number */}\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Grid container spacing={2}>\r\n                                 <Grid item xs={12} sm={7}>\r\n                                 <Field\r\n                                name=\"aadharNumber\"\r\n                                as={TextField}\r\n                                label=\"Aadhar Number\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{ shrink: true }}\r\n                                disabled\r\n                                margin=\"normal\"\r\n                                sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }}\r\n                                // error={touched.aadharNumber && Boolean(errors.aadharNumber)}\r\n                                // helperText={touched.aadharNumber && errors.aadharNumber}\r\n                                // onChange={(e) => {\r\n                                //     const newAadhar = e.target.value;\r\n                                //     setFieldValue(\"aadharNumber\", newAadhar);\r\n                                //     setIsOtpRequired(newAadhar !== previousAadhar);\r\n                                //     setIsAadharVerified(false); // Reset verification on change\r\n                                // }}\r\n                            />\r\n                                 </Grid>\r\n\r\n                                \r\n                                 <Grid item xs={12} sm={5}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        onClick={() => validateAddhar(values.aadharNumber , setFieldValue)}\r\n                                        disabled={isAadharVerified}\r\n                                        \r\n                                        sx={{marginTop:'25px' ,backgroundColor: \"var(--bs-primary1)\", color: \"white\"}}\r\n                                    >\r\n                                        ReValidate\r\n                                    </Button>\r\n                                </Grid>\r\n                                \r\n                            </Grid>\r\n                            \r\n                        </Grid>\r\n\r\n                        {/* OTP Input & Verify Button (Visible if Aadhar is changed) */}\r\n                        {isOtpRequired && (\r\n                            <>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Field name=\"otp\" as={TextField} label=\"OTP\" variant=\"outlined\" fullWidth margin=\"normal\"   sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }} />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        onClick={() => verifyAadharOtp(values.otp)}\r\n                                        disabled={!values.otp}\r\n                                        \r\n                                        sx={{marginTop:'25px' ,backgroundColor: \"var(--bs-primary1)\", color: \"white\"}}\r\n                                    >\r\n                                        Verify Aadhar OTP\r\n                                    </Button>\r\n                                </Grid>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {/* // Bank Account  */}\r\n                          {/* Bank Selection */}\r\n                          {/* <Grid item xs={12} sm={6}>\r\n                            <Select\r\n                                options={bankList}\r\n                                isDisabled={isBankVerified}\r\n                                value={values.bank}\r\n                                onChange={(selected) => {\r\n                                    setFieldValue(\"bank\", selected || null);\r\n                                    setFieldValue(\"bank_id\", selected?.value.bankID || '')\r\n                                    setFieldValue(\"ifsc\", selected?.value.ifsc_code || \"\"); \r\n                                    setErrors(\"bank_id\" , '')\r\n                                    // Auto-fill IFSC\r\n                                }}\r\n                                placeholder=\"Select Bank\"\r\n                                // isClearable\r\n                                isSearchable\r\n                                menuPortalTarget={document.body} // Render menu outside parent container\r\n                              \r\n                                styles={{\r\n                                    menuPortal: (base) => ({ ...base, zIndex: 9999 }),\r\n                                    control: (base) => ({\r\n                                        ...base,\r\n                                        borderColor: `${errors?.bank_id ? '#d32f2f': 'hsl(0, 0%, 80%)' }`,\r\n                                        boxShadow: \"none\",\r\n                                        marginTop:'17px',\r\n                                        minHeight:'50px',\r\n                                        \"&:hover\": { borderColor: \"var(--bs-primary1)\" },\r\n                                    }),\r\n                                    option: (base, state) => ({\r\n                                        ...base,\r\n                                        backgroundColor: state.isFocused ? \"var(--bs-primary1)\" : \"white\",\r\n                                        color: \"black\",\r\n                                        zIndex: 20,\r\n                                        \"&:hover\": { backgroundColor: \"var(--bs-primary1)\", color: \"white\" },\r\n                                    }),\r\n                                }}\r\n                            />\r\n                            {touched.bank_id && errors.bank_id && (\r\n                                <p className=\"MuiFormHelperText-root Mui-error MuiFormHelperText-sizeMedium MuiFormHelperText-contained css-wq8qsl-MuiFormHelperText-root\">{errors.bank_id}</p>\r\n                            )}\r\n                        </Grid> */}\r\n\r\n<Grid item xs={12} sm={6}>\r\n  <Autocomplete\r\n    options={bankList}\r\n    getOptionLabel={(option) => option?.label || \"\"}\r\n    value={values.bank || null}\r\n    isOptionEqualToValue={(option, value) => option.value.bankID === value?.value?.bankID}\r\n    onChange={(e, selected) => {\r\n      setFieldValue(\"bank\", selected || null);\r\n      setFieldValue(\"bank_id\", selected?.value?.bankID || '');\r\n      setFieldValue(\"ifsc\", selected?.value?.ifsc_code || '');\r\n    \r\n      setFieldTouched(\"bank_id\", true);\r\n      setFieldTouched(\"ifsc\", true);\r\n    \r\n      setTimeout(() => {\r\n        validateField(\"bank_id\");\r\n        validateField(\"ifsc\");\r\n      }, 0);\r\n    }}\r\n    disabled={isBankVerified}\r\n    renderInput={(params) => (\r\n      <TextField\r\n        {...params}\r\n        label=\"Select Bank\"\r\n        error={Boolean(touched.bank_id && errors.bank_id)}\r\n        helperText={touched.bank_id && errors.bank_id}\r\n        // sx={{ mt: 2 }}\r\n      />\r\n    )}\r\n    sx={{\r\n      \"& label.Mui-focused\": {\r\n        color: 'var(--bs-nav)',\r\n      },\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                    mt:2,\r\n                                  }}\r\n  />\r\n</Grid>\r\n\r\n                        {/* IFSC Code */}\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field\r\n                                name=\"ifsc\"\r\n                                as={TextField}\r\n                                label=\"Enter IFSC\"\r\n                                InputLabelProps={{ shrink: true }}\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                disabled={isBankVerified}\r\n                                sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }}\r\n                                // error={touched.ifsc && errors.ifsc}\r\n                                // helperText={touched.ifsc || errors.ifsc}\r\n                                error={touched.ifsc && Boolean(errors.ifsc)}\r\n                                helperText={touched.ifsc && errors.ifsc} \r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field\r\n                                name=\"account_number\"\r\n                                as={TextField}\r\n                                label=\"Enter Account Number\"\r\n                                InputLabelProps={{ shrink: true }}\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                error={touched.account_number && Boolean(errors.account_number)}\r\n                                helperText={touched.account_number && errors.account_number}\r\n                                disabled={isBankVerified}\r\n                                sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }}\r\n                            />\r\n                           {/* <Typography fontSize={12} color=\"var(--bs-nav)\" fontWeight={500}>\r\n              Account Verification Charge: ₹ {verficationCharges || 0}\r\n            </Typography>   */}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} >\r\n  <Stack direction=\"row\" spacing={2} marginTop={2} alignItems=\"center\">\r\n    {/* Bank Type Selection */}\r\n    <FormControl \r\n      component=\"fieldset\" \r\n      error={touched.bank_type && Boolean(errors.bank_type)}\r\n      disabled={isBankVerified}\r\n    >\r\n      <Field name=\"bank_type\">\r\n        {({ field }) => (\r\n          <RadioGroup {...field} row>\r\n            <FormControlLabel value=\"savings\" sx={{ \"& .MuiTypography-root\": { fontSize: \"14px\" } }}  control={<Radio />} label=\"Savings\" />\r\n            <FormControlLabel value=\"current\" sx={{ \"& .MuiTypography-root\": { fontSize: \"14px\" } }} control={<Radio />} label=\"Current\" />\r\n          </RadioGroup>\r\n        )}\r\n      </Field>\r\n      {touched.bank_type && errors.bank_type && (\r\n        <FormHelperText>{errors.bank_type}</FormHelperText>\r\n      )}\r\n    </FormControl>\r\n\r\n    {/* Bank Verify Button */}\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      onClick={() => bankVerify(values, setErrors)}\r\n      disabled={\r\n        (String(values?.account_number || \"\").length < 8 &&\r\n          !values?.ifsc &&\r\n          !values?.bank_id) ||\r\n        errors?.account_number ||\r\n        errors?.ifsc ||\r\n        errors?.bank_id || isBankVerified\r\n      }\r\n      sx={{\r\n        backgroundColor: \"var(--bs-primary1)\", \r\n        \r\n        color: \"white\", \r\n        whiteSpace: \"nowrap\", // Prevent button text from wrapping\r\n      }}\r\n    >\r\n      Verify\r\n    </Button>\r\n  </Stack>\r\n</Grid>\r\n\r\n                       \r\n                                <Grid item xs={12} sm={6}>\r\n                            <Field name=\"permanentAddress\" as={TextField} label=\"Permanent Address\" variant=\"outlined\" fullWidth margin=\"normal\" disabled InputLabelProps={{ shrink: true }} />\r\n                        </Grid>\r\n\r\n\r\n                        {/* //Pincode  */}\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field\r\n                                name=\"pincode\"\r\n                                as={TextField}\r\n                                label=\"Pincode\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{ shrink: true }}\r\n                                inputProps={{\r\n                                    inputMode: \"numeric\", // Show numeric keyboard on mobile\r\n                                    pattern: \"[0-9]*\", // Only allow numbers\r\n                                    maxLength: 6, // Max length of 6 digits\r\n                                  }}\r\n                                margin=\"normal\"\r\n                                sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }}\r\n                                error={touched.pincode && Boolean(errors.pincode)}\r\n                                helperText={touched.pincode && errors.pincode}\r\n                                onChange={(e) => {\r\n                                    const value = e.target.value.replace(/\\D/g, \"\").slice(0, 6); // Remove non-digits & limit to 6 digits\r\n                                    setFieldValue(\"pincode\", value);\r\n                        \r\n                                    if (value.length === 6) {\r\n                                        fetchPincode(value, setFieldValue, setErrors); // Fetch only when 6 digits entered\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field\r\n                                name=\"city\"\r\n                                as={TextField}\r\n                                label=\"City\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{ shrink: true }}\r\n                              \r\n                                margin=\"normal\"\r\n                                sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }}\r\n                                  error={touched.city && Boolean(errors.city)}\r\n                                  helperText={touched.city && errors.city}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field\r\n                                name=\"state\"\r\n                                as={TextField}\r\n                                label=\"State\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{ shrink: true }}\r\n                              \r\n                                margin=\"normal\"\r\n                                sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }}\r\n                                  error={touched.state && Boolean(errors.state)}\r\n                                  helperText={touched.state && errors.state}\r\n                            />\r\n                        </Grid>\r\n                      \r\n                        {/* Other Fields */}\r\n                        {formFields?.map((name) => (\r\n                            <Grid item xs={12} sm={6} key={name?.key}>\r\n                                <Field name={name?.key} as={TextField}  InputLabelProps={{ shrink: true }} label={name?.label} variant=\"outlined\" fullWidth margin=\"normal\"\r\n                                  error={touched[name?.key] && Boolean(errors[name?.key])}\r\n                                  helperText={touched[name?.key] && errors[name?.key]}\r\n                                sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }} />\r\n                            </Grid>\r\n                        ))}\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field name=\"businessType\" as={TextField}  select label=\"Business Type\" variant=\"outlined\" fullWidth margin=\"normal\"   sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }}\r\n                                  error={touched.businessType && Boolean(errors.businessType)}\r\n                                  helperText={touched.businessType && errors.businessType}\r\n                                  >\r\n                                {[\"Proprietor\", \"Individual\" ,\"OPC\",\"Private Limited\" ,\"Public Limited\"].map((option) => (\r\n                                    <MenuItem key={option} value={option}>\r\n                                        {option}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Field>\r\n                        </Grid>\r\n                        {/* Business Place Type */}\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field name=\"businessPlaceType\" as={TextField} select label=\"Business Place Type\" variant=\"outlined\" fullWidth margin=\"normal\"   sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }}\r\n                                  error={touched.businessPlaceType && Boolean(errors.businessPlaceType)}\r\n                                  helperText={touched.businessPlaceType && errors.businessPlaceType}\r\n                                  >\r\n                                {[\"Owned\", \"Rented\"].map((option) => (\r\n                                    <MenuItem key={option} value={option}>\r\n                                        {option}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Field>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field name=\"workingTime\" as={TextField} select label=\"Working Time\" variant=\"outlined\" fullWidth margin=\"normal\"   sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }}\r\n                                  error={touched.workingTime && Boolean(errors.workingTime)}\r\n                                  helperText={touched.workingTime && errors.workingTime}\r\n                                  >\r\n                            {workingTimeOptions.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n            </MenuItem>\r\n        ))}\r\n                            </Field>\r\n                        </Grid>\r\n                        {/* Working Days */}\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field name=\"workingDays\" as={TextField} select label=\"Working Days\" variant=\"outlined\" fullWidth margin=\"normal\"   sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }}\r\n                                  error={touched.workingDays && Boolean(errors.workingDays)}\r\n                                  helperText={touched.workingDays && errors.workingDays}\r\n                                  >\r\n                                {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"].map((option) => (\r\n                                    <MenuItem key={option} value={option}>\r\n                                        {option}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Field>\r\n                        </Grid>\r\n\r\n\r\n                        {/* Submit Button (Disabled until Aadhar is verified) */}\r\n                        <Grid item xs={12}>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\"      sx={{\r\n                                borderColor: 'var(--bs-primary1)', // Custom colors\r\n                                width:\"200px\",\r\n                                backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                                color: \"white\",\r\n                              }} >\r\n                                Next\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Form>\r\n                 )\r\n            } }\r\n              \r\n            \r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst UploadBusinessImages = ({ onComplete }) => {\r\n    // Initialize all image upload hooks individually at the top of the component\r\n    const imageUpload1 = useCourierImageUploadOnboard();\r\n    const imageUpload2 = useCourierImageUploadOnboard();\r\n    const imageUpload3 = useCourierImageUploadOnboard();\r\n    const imageUpload4 = useCourierImageUploadOnboard();\r\n    const imageUpload5 = useCourierImageUploadOnboard();\r\n    const imageUpload6 = useCourierImageUploadOnboard();\r\n    const imageUpload7 = useCourierImageUploadOnboard();\r\n    const imageUpload8 = useCourierImageUploadOnboard();\r\n    const imageUpload9 = useCourierImageUploadOnboard();\r\n    const imageUpload10 = useCourierImageUploadOnboard();\r\n  \r\n    const [error, setError] = useState(\"\");\r\n  \r\n    // Array of all image upload hooks\r\n    const imageUploads = [\r\n      imageUpload1,\r\n      imageUpload2,\r\n      imageUpload3,\r\n      imageUpload4,\r\n      imageUpload5,\r\n      imageUpload6,\r\n      imageUpload7,\r\n      imageUpload8,\r\n      imageUpload9,\r\n      imageUpload10,\r\n    ];\r\n  \r\n    const titles = [\r\n      \"Shop Inner Image\",\r\n      \"Shop Outer Image\",\r\n      \"Shop Left of Outer\",\r\n      \"Shop Right of Outer\",\r\n      \"Shop Front\",\r\n      \"Shop Nearby Image\",\r\n      \"Aadhaar Front Image\",\r\n      \"Aadhaar Back Image\",\r\n      \"Pancard Image\",\r\n      \"Bank Proof Image\",\r\n    ];\r\n  \r\n    const getDoc = async()=>{\r\n      \r\n      try {\r\n       let res = await getCorieronboardingDoc()\r\n       if(res?.data?.error === false)\r\n        \r\n       {\r\n   \r\n        imageUploads[0].setImageUrl(res?.data?.data?.shopInnerImg)\r\n        imageUploads[1].setImageUrl(res?.data?.data?.shopOuterImg)\r\n        imageUploads[2].setImageUrl(res?.data?.data?.shopLeftOfOuter)\r\n        imageUploads[3].setImageUrl(res?.data?.data?.shopRightOfOuter)\r\n        imageUploads[4].setImageUrl(res?.data?.data?.shopFront)\r\n        imageUploads[5].setImageUrl(res?.data?.data?.shopNearByImage)\r\n        imageUploads[6].setImageUrl(res?.data?.data?.adhaarImgFront)\r\n        imageUploads[7].setImageUrl(res?.data?.data?.adhaarImgBack)\r\n        imageUploads[8].setImageUrl(res?.data?.data?.panImg)\r\n        imageUploads[9].setImageUrl(res?.data?.data?.bankImg)\r\n       }\r\n\r\n      } catch (error) {\r\n       \r\n      }\r\n   }\r\n    useEffect(()=>{\r\n      getDoc()\r\n    },[])\r\n\r\n \r\n  \r\n    const handleSubmit = async () => {\r\n      // Check if any image URL is missing\r\n      const missingImages = imageUploads.some(({ imageUrl }) => !imageUrl);\r\n  \r\n      if (missingImages) {\r\n        setError(\"Please upload all images before proceeding.\");\r\n        return;\r\n      }\r\n  \r\n      setError(\"\"); // Clear error if all images are uploaded\r\n  \r\n      const body = {\r\n        shopInnerImg: imageUploads[0].imageUrl,\r\n        shopOuterImg: imageUploads[1].imageUrl,\r\n        shopLeftOfOuter: imageUploads[2].imageUrl,\r\n        shopRightOfOuter: imageUploads[3].imageUrl,\r\n        shopFront: imageUploads[4].imageUrl,\r\n        shopNearByImage: imageUploads[5].imageUrl,\r\n        adhaarImgFront: imageUploads[6].imageUrl,\r\n        adhaarImgBack: imageUploads[7].imageUrl,\r\n        panImg: imageUploads[8].imageUrl,\r\n        bankImg: imageUploads[9].imageUrl,\r\n      };\r\n  \r\n      try {\r\n        let res = await corieronboardingAddDoc(body);\r\n        toastMessage(res?.data?.error, res?.data?.message);\r\n        if (!res?.data?.error) {\r\n          onComplete();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error submitting images:\", error);\r\n      }\r\n    };\r\n\r\n\r\n  \r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div className=\"row g-4\">\r\n            {imageUploads.map((upload, index) => (\r\n              <div key={index} className=\"col-12 col-md-6 col-lg-4 col-xl-3\">\r\n                <upload.ImageUpload index={index} title={titles[index]} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n  \r\n        {error && <p style={{ color: \"red\", textAlign: \"center\", marginTop: \"10px\" }}>{error}</p>}\r\n  \r\n        <Stack spacing={3} alignItems=\"center\" marginTop={4}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSubmit}\r\n            sx={{\r\n              borderColor: \"var(--bs-primary1)\",\r\n              width: \"200px\",\r\n              backgroundColor: \"var(--bs-primary1)\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            Next\r\n          </Button>\r\n        </Stack>\r\n      </>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n const UploadBusinessVideo = ({onComplete}) => {\r\n    const [showRecorder, setShowRecorder] = useState(false);\r\n    const [recordedVideo, setRecordedVideo] = useState(null);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n  \r\n    const handleSaveVideo = (videoUrl) => {\r\n      setRecordedVideo(videoUrl);\r\n      setShowRecorder(false);\r\n    };\r\n  \r\n    const uploadVideo = async (videoBlob) => {\r\n      setIsUploading(true);\r\n      const video = new FormData();\r\n      video.append(\"video\", videoBlob, \"recorded_video.webm\");\r\n      video.append(\"user_id\", window.localStorage.getItem(\"userIdToken\"));\r\n      console.log(video , \"video\")\r\n      \r\n      try {\r\n        // Upload logic here\r\n        // toastMessage(res?.data?.error , res?.data?.message)\r\n      \r\n       let res = await  corieronboardingKycVideo(video)\r\n       toastMessage(res?.data?.error , res?.data?.message)\r\n       if(!res?.data?.error)\r\n       {\r\n        onComplete()\r\n       }\r\n      } catch (error) {\r\n      \r\n      } finally {\r\n        setIsUploading(false);\r\n      }\r\n    };\r\n  \r\n    const handleUpload = async () => {\r\n      if (recordedVideo) {\r\n        const videoBlob = await fetch(recordedVideo)?.then(r => r.blob());\r\n        console.log(videoBlob , \"videoBlob\")\r\n           await uploadVideo(videoBlob);\r\n      } else {\r\n        // toast.error(\"Please record a video first\");\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"container text-center\">\r\n        {/* <h6>Video KYC Recording</h6> */}\r\n       \r\n        {recordedVideo ? (\r\n          <div className=\"mt-3\">\r\n            <video src={recordedVideo} controls style={{ width: '100%', maxWidth: '500px' }} />\r\n            {/* <Button onClick={handleUpload} disabled={isUploading} className=\"mt-3\">\r\n              {isUploading ? 'Uploading...' : 'Upload Video'}\r\n            </Button> */}\r\n\r\n<Stack spacing={3} alignItems=\"center\" marginTop={4}>\r\n         <Button\r\n           type=\"submit\"\r\n           variant=\"contained\"\r\n           color=\"primary\"\r\n         \r\n           sx={{\r\n             borderColor: 'var(--bs-primary1)',\r\n             width: \"200px\",\r\n             backgroundColor: 'var(--bs-primary1)',\r\n             color: \"white\",\r\n           }}\r\n           onClick={handleUpload} disabled={isUploading}\r\n         >\r\n           Next\r\n         </Button>\r\n       </Stack>\r\n          </div>\r\n        ) : <>\r\n         <Box\r\n            sx={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: 350,\r\n                borderRadius: 2,\r\n                overflow: 'hidden',\r\n                bgcolor: 'grey.200',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                // cursor: 'pointer',\r\n            }}\r\n           \r\n        >\r\n         \r\n                <Button variant=\"outlined\" color=\"textSecondary\" onClick ={()=> setShowRecorder(true)}>{'Video KYC'}</Button>\r\n        \r\n         \r\n        </Box>\r\n        \r\n        </>}\r\n        <VideoRecorder \r\n          show={showRecorder} \r\n          handleClose={() => setShowRecorder(false)} \r\n          onSave={handleSaveVideo}\r\n        />\r\n        {/* <ToastContainer /> */}\r\n\r\n        \r\n      </div>\r\n    );\r\n  };\r\n\r\nconst UploadSelfDeclarationVideo = ({ onComplete }) => (\r\n    <Stack spacing={2} alignItems=\"center\">\r\n    <Button variant=\"contained\" component=\"label\">\r\n        Upload Self Declaration Video\r\n        <input type=\"file\" hidden accept=\"video/*\" />\r\n    </Button>\r\n    <Button variant=\"contained\" color=\"primary\" onClick={onComplete}>\r\n      Next\r\n  </Button>\r\n</Stack>\r\n);\r\n\r\nconst VerifyDocuments = ({setCurrentPage , onComplete}) => {\r\n  // const pdfUrl = \"https://filesamples.com/samples/document/pdf/sample1.pdf\";\r\n  const [pdfUrl , setPdfUrl] = useState('')\r\n  \r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleSubmit = () => {\r\n      setOpen(true); // Open the popup\r\n    };\r\n  \r\n    const handleClose = async() => {\r\n      let body = {\r\n        is_courierAgreement:true\r\n      }\r\n      let res  = await corierAgrementCheck(body)\r\n      if(res?.data?.error === false)\r\n      {\r\n        onComplete()\r\n        setOpen(false); \r\n        setCurrentPage('onboarding-pending-page')\r\n      }\r\n      \r\n      //\r\n    };\r\n\r\n    useEffect(() => {\r\n      let fileURL;\r\n      \r\n      const getAggrement = async () => {\r\n        try {\r\n          let res = await getcorieronboardAggrement();\r\n          \r\n          setTimeout(()=>{\r\n            fileURL = URL.createObjectURL(res.data);\r\n            setPdfUrl(fileURL);\r\n          },50)\r\n         \r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      };\r\n    \r\n      getAggrement();\r\n    \r\n      return () => {\r\n        if (fileURL) {\r\n          URL.revokeObjectURL(fileURL);\r\n        }\r\n      };\r\n    }, []);\r\n    \r\n    return (\r\n        <Container maxWidth=\"sm\" >\r\n            <Card style={{ padding: \"2rem\", boxShadow: \"0px 4px 10px rgba(0,0,0,0.1)\" }}>\r\n\r\n          \r\n                <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n                    Agreement\r\n                </Typography>\r\n                <iframe src={pdfUrl} width=\"100%\" height=\"600px\" />\r\n                <Button variant=\"contained\" color=\"success\" fullWidth onClick={handleSubmit} style={{ marginTop: \"1rem\" }}  sx={{\r\n             borderColor: 'var(--bs-primary1)',\r\n             backgroundColor: 'var(--bs-primary1)',\r\n             color: \"white\",\r\n           }}>\r\n                    Submit\r\n                </Button>\r\n            </Card>\r\n\r\n            <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle sx={{color:'var(--bs-primary1)'}} >Thank You!</DialogTitle>\r\n        <DialogContent>\r\n          <Typography sx={{color:'var(--bs-nav)'}}>\r\n            Your application has been received, and our onboarding team will provide an update on its status soon.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" variant=\"contained\" style={{ marginTop: \"1rem\" }}  sx={{\r\n             borderColor: 'var(--bs-primary1)',\r\n             backgroundColor: 'var(--bs-primary1)',\r\n             color: \"white\"}}>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nconst PaymentGateWay = ({showSponsorTab , setPaymentComplete }) => {\r\n    const [selectedPayment, setSelectedPayment] = useState(null);\r\n    const [tpin, setTpin] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [bal , setBal] = useState()\r\n    const [loading , setLoading] = useState(false)\r\n    const [firstLoading , setFirstLoading] = useState(true)\r\n\r\n    useEffect(()=>{\r\n       const getAmount = async()=> {\r\n             setFirstLoading(true)\r\n            try {\r\n                let res = await getsponserPaymentAmount()\r\n                    setBal(res?.data?.data?.amt)\r\n                    if(res?.data?.data?.paymentStatus === true)\r\n                    {\r\n                        setPaymentComplete(true);\r\n                    }\r\n            } catch (error) {\r\n                \r\n            }\r\n            finally{\r\n                setFirstLoading(false)\r\n            }\r\n       }\r\n       getAmount()\r\n    },[])\r\n\r\n    const handleWalletPayment = withLocation(async (latitude, longitude) => {\r\n        if (tpin.length !== 4) {\r\n            setError(\"Enter a valid 4-digit TPIN\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        let body = {\r\n            tpin:tpin,\r\n            latitude,\r\n            longitude,\r\n                \r\n        };\r\n        setLoading(true)\r\n        try {\r\n            let res = await sponserPaymentWallet(body);\r\n             toastMessage(res?.data?.error , res?.data?.message)\r\n             if(!res?.data?.error)\r\n             {\r\n                \r\n                // setOtpSent(true);\r\n                setPaymentComplete(true);\r\n             }\r\n            //  setOtpSent(true);\r\n            //  setSponserUser(res?.data?.data?.sponsorData)\r\n            //  setOtp('')\r\n            \r\n        } catch (error) {\r\n            console.error(\"Error sending OTP:\", error);\r\n        } finally{\r\n            setLoading(false)\r\n        }\r\n    });\r\n\r\n    const loadGateWay = async(body)=>{\r\n        console.log(body , \"body\")\r\n        const isLoaded = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\r\n\r\n        if (!isLoaded) {\r\n            alert(\"Razorpay SDK failed to load. Please check your internet connection.\");\r\n            return;\r\n        }\r\n       \r\n        const options = {\r\n            key: razor_pay_key, \r\n            amount: body.amount,  \r\n            currency: \"INR\",\r\n            name: \"Needu\",\r\n            description: \"Payment for Onboarding\",\r\n            order_id : body?.id, \r\n            handler: async function (response) {\r\n              \r\n               \r\n                let res  =  await verifyponserPaymentGatewayResponse(response)\r\n                toastMessage(res?.data?.error , res?.data?.message)\r\n                setLoading(false)\r\n                if(!res?.data?.error)\r\n                {\r\n                   \r\n                    setPaymentComplete(true); \r\n                }\r\n               \r\n            },\r\n            prefill: {\r\n                name: \"User Name\",\r\n                email: \"user@example.com\",\r\n                contact: \"9999999999\",\r\n            },\r\n            theme: {\r\n                color: \"#3399cc\",\r\n            },\r\n        };\r\n\r\n        const paymentObject = new window.Razorpay(options);\r\n        paymentObject.on('payment.failed', async function (response){\r\n            let res  =  await verifyponserPaymentGatewayResponse(response?.error)\r\n            toastMessage(res?.data?.error , res?.data?.message)\r\n            setLoading(false)\r\n            \r\n    });\r\n        paymentObject.open();\r\n    }\r\n\r\n    const handleRazorpayPayment = withLocation( async (latitude, longitude) => {\r\n        setLoading(true)\r\n           let body = {\r\n            latitude ,\r\n            longitude\r\n           }\r\n         \r\n          try {\r\n            let res = await createsponserPaymentGatewayOrder(body)\r\n          \r\n              if(!res.error)\r\n              {\r\n                loadGateWay(res?.data?.data)\r\n              }\r\n          } catch (error) {\r\n            \r\n          }\r\n\r\n       \r\n    })\r\n\r\n      \r\n    if(firstLoading)\r\n    {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n\r\n    \r\n    return (\r\n        <Container style={{ marginTop: \"2rem\", display: \"flex\", justifyContent: \"center\" }}>\r\n            <Card\r\n                style={{\r\n                    padding: \"2rem\",\r\n                    maxWidth: \"500px\",\r\n                    width: \"100%\",\r\n                    boxShadow: \"0px 4px 15px rgba(0,0,0,0.1)\",\r\n                    borderRadius: \"10px\",\r\n                }}\r\n            >\r\n                \r\n                <Typography variant=\"h5\" align=\"center\" gutterBottom style={{color:'var(--bs-primary1)'}}>\r\n                    Select Payment Method\r\n                </Typography>\r\n                <Typography variant='body1' align=\"center\" gutterBottom style={{color:'var(--bs-primary1)'}}>\r\n                    You Have Choosen to Start {showSponsorTab ? 'With Sponsor' : 'Without Sponsor'}\r\n                </Typography>\r\n                <FormControl component=\"fieldset\" style={{ width: \"100%\", marginBottom: \"1rem\" }}>\r\n                    <FormLabel component=\"legend\" style={{ fontWeight: \"bold\", marginBottom: \"0.5rem\" ,color:'var(--bs-primary1)' }}>\r\n                        Choose an option:\r\n                    </FormLabel>\r\n                    <RadioGroup\r\n                        aria-label=\"payment-method\"\r\n                        name=\"payment-method\"\r\n                        value={selectedPayment}\r\n                        onChange={(e) => {\r\n                            setSelectedPayment(e.target.value);\r\n                            setTpin(\"\");\r\n                            setError(\"\");\r\n                        }}\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"gateway\"\r\n                            control={<Radio color=\"primary\" />}\r\n                            label=\"Payment Gateway\"\r\n                            style={{\r\n                                backgroundColor: selectedPayment === \"gateway\" ? \"#f0f0f0\" : \"transparent\",\r\n                                borderRadius: \"8px\",\r\n                                padding: \"0.5rem\",\r\n                                transition: \"0.3s\",\r\n                            }}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"wallet\"\r\n                            control={<Radio color=\"secondary\" />}\r\n                            label=\"Wallet\"\r\n                            style={{\r\n                                backgroundColor: selectedPayment === \"wallet\" ? \"#f0f0f0\" : \"transparent\",\r\n                                borderRadius: \"8px\",\r\n                                padding: \"0.5rem\",\r\n                                transition: \"0.3s\",\r\n                            }}\r\n                        />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n\r\n                {selectedPayment && (\r\n                    <>\r\n                        <Typography variant=\"h6\" align=\"center\" style={{ marginTop: \"1rem\" ,color:'var(--bs-primary1)' }} >\r\n                            Confirm Payment\r\n                        </Typography>\r\n\r\n                        {selectedPayment === \"wallet\" && (\r\n                            <TextField\r\n                                label=\"Enter 4-digit TPIN\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                type=\"password\"\r\n                                value={tpin}\r\n                                onChange={(e) => setTpin(e.target.value.replace(/\\D/g, \"\").slice(0, 4))}\r\n                                error={!!error}\r\n                                helperText={error}\r\n                                required\r\n                                sx={{\r\n                                    \"& .MuiOutlinedInput-root\": {\r\n                                      \"&:hover fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Hover border\r\n                                      \"&.Mui-focused fieldset\": { borderColor: \"var(--bs-primary1)\" }, // Focus border\r\n                                    },\r\n                                  }}\r\n                            />\r\n                        )}\r\n\r\n                        <Button\r\n                            onClick={selectedPayment === \"wallet\" ? handleWalletPayment : handleRazorpayPayment}\r\n                            variant=\"contained\"\r\n                            \r\n                            color=\"primary\"\r\n                            fullWidth\r\n                            disabled={loading}\r\n                            sx={{\r\n                                borderColor: 'var(--bs-primary1)', // Custom colors\r\n                              \r\n                                backgroundColor: 'var(--bs-primary1)', // Custom colors\r\n                                color: \"white\",\r\n                              }}\r\n                            style={{\r\n                                marginTop: \"1rem\",\r\n                                padding: \"0.8rem\",\r\n                                fontSize: \"1rem\",\r\n                                fontWeight: \"bold\",\r\n                            }}\r\n                        >\r\n                            Pay {bal}\r\n                        </Button>\r\n                    </>\r\n                )}\r\n            </Card>\r\n        </Container> ) }\r\n\r\nconst CouierIndex = ({walletShowHeader}) => {\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [processStart, setProcessStart] = useState(false);\r\n    const [currentPage , setCurrentPage] = useState('')\r\n    // const [processStart, setProcessStart] = useState(true);\r\n    const [ showSponsorTab,setShowSponsorTab] = useState(false)\r\n    const [paymentComplete, setPaymentComplete] = useState(false);\r\n    const [kycApproved , isKycApproved] = useState(false)\r\n    // const [paymentComplete, setPaymentComplete] = useState(true);\r\n    const [completedSteps, setCompletedSteps] = useState(false);\r\n    const [sponserUser , setSponserUser] = useState({})\r\n    const [user , setUser] = useState({})\r\n    const [opBoardingComplete , setOnBoardingComplete] = useState(false)\r\n    const [loading , setLoading] = useState(true)\r\n    const [pageLoader , setpageLoader] = useState(false)\r\n    \r\n    const handleComplete = () => {\r\n      setCompletedSteps((pre)=>!pre)\r\n        // setCompletedSteps((prev) => new Set([...prev, tabIndex]));\r\n        // setTabIndex((prev) => prev + 1);\r\n\r\n    };\r\n\r\n    const validateOnboarding = async()=> {\r\n      setpageLoader(true)\r\n        try {\r\n            let res  = await Getprofile()\r\n            if(res?.data?.error === false)\r\n            {\r\n              // setOnBoardingComplete(res?.data?.data?.is_courierOnboarding)\r\n                if(res?.data?.data?.is_courierSingup === false)\r\n                {\r\n                  setTabIndex(0)\r\n                  setCurrentPage('onboarding-page')\r\n                  processStart(false)\r\n                  return\r\n                }\r\n\r\n                if(res?.data?.data?.is_courierSingup === true)\r\n                {\r\n                  setProcessStart(true)\r\n                }\r\n                if(res?.data?.data?.is_courierDoc === false )\r\n                  {\r\n                    setTabIndex(1)\r\n                    setCurrentPage('onboarding-page')\r\n                    return\r\n                  }\r\n                  if(res?.data?.data?.is_courierVideo === false )\r\n                    {\r\n                      setTabIndex(2)\r\n                      setCurrentPage('onboarding-page')\r\n                      return\r\n                    }  \r\n                    if(res?.data?.data?.is_courierAgreement === false )\r\n                      {\r\n                        setTabIndex(3)\r\n                        setCurrentPage('onboarding-page')\r\n                        return\r\n                      }    \r\n                  if(res?.data?.data?.is_courierSingup === true && res?.data?.data?.is_courierDoc === true && res?.data?.data?.is_courierVideo === true && res?.data?.data?.is_courierAgreement === true && res?.data?.data?.is_courierOnboarding === false )  \r\n                  {\r\n                    setCurrentPage('onboarding-pending-page')\r\n                    return\r\n                  }\r\n\r\n                  if(res?.data?.data?.is_courierSingup === true && res?.data?.data?.is_courierDoc === true && res?.data?.data?.is_courierVideo === true &&  res?.data?.data?.is_courierAgreement === true && res?.data?.data?.is_courierOnboarding === true )  \r\n                    {\r\n                      setCurrentPage('courier-page')\r\n                      setOnBoardingComplete(res?.data?.data?.is_courierOnboarding)\r\n                      // setTabIndex(3)\r\n                      // setCurrentPage('onboarding-page')\r\n                      return\r\n                    }\r\n            }  \r\n        } catch (error) {\r\n            \r\n        }\r\n        finally {\r\n            setLoading(false)\r\n            setpageLoader(false)\r\n        }\r\n    \r\n    }\r\n\r\n\r\n\r\n    \r\n    useEffect(()=>{\r\n        validateOnboarding()\r\n    },[completedSteps])\r\n    \r\n    if(loading)\r\n    {\r\n        return null\r\n    }\r\n\r\n   \r\n    // !completedSteps.has(0)\r\n    if ( currentPage === 'courier-page' && opBoardingComplete === true) {\r\n\r\n        return (\r\n        <CourierDashboardProvider>\r\n          <CouierDashboard />\r\n        </CourierDashboardProvider>\r\n        )\r\n    }\r\n\r\n    return (\r\n      <>\r\n      {pageLoader && <Loader/>}\r\n      <div className=\"PageHeading\"><h1>Courier</h1></div>\r\n      { currentPage === 'onboarding-pending-page' && \r\n         <CourierKycPending/>\r\n      }\r\n      \r\n      {currentPage === 'onboarding-page' &&\r\n        <Container style={{ marginTop: \"2rem\" }}>\r\n            \r\n            {!processStart ? (\r\n                <SponsorVerification \r\n                    setProcessStart={setProcessStart} \r\n                    setShowSponsorTab={setShowSponsorTab}\r\n                    setSponserUser={setSponserUser}\r\n                    sponserUser={sponserUser}\r\n                    setUser={setUser}\r\n                />\r\n            ) : !paymentComplete ? (\r\n                <PaymentGateWay setPaymentComplete={setPaymentComplete} showSponsorTab={showSponsorTab} />\r\n            ) : (\r\n                <>\r\n                    <Tabs value={tabIndex} onChange={(e, newValue) => setTabIndex(newValue)} centered>\r\n                        <Tab label=\"Signup Form\" disabled={true} />\r\n                        <Tab label=\"Upload Business Images\" disabled={true} />\r\n                        <Tab label=\"Upload Self Declaration Video\" disabled={true} />\r\n                       \r\n                        <Tab label=\"Agreement\" disabled={true} />\r\n                    </Tabs>\r\n                    <Card style={{ padding: \"2rem\", marginTop: \"1rem\", boxShadow: \"0px 4px 10px rgba(0,0,0,0.1)\" }}>\r\n                        {tabIndex === 0 && <SignupForm setpageLoader={setpageLoader} walletShowHeader={walletShowHeader} user={user} onComplete={handleComplete} />}\r\n                        {tabIndex === 1 && <UploadBusinessImages  onComplete={handleComplete} />}\r\n                        {tabIndex === 2 && <UploadBusinessVideo onComplete={handleComplete} />}\r\n                        {tabIndex === 3 && <VerifyDocuments setCurrentPage={setCurrentPage} onComplete={handleComplete} />}\r\n                    </Card>\r\n                </>\r\n            )}\r\n        </Container>\r\n}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CouierIndex;","import { baseUrlImage } from \"../baseUrl\"\r\n\r\n\r\n\r\nexport const genrateUrl = url =>  baseUrlImage + (url || '')","export const  getLocation = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n         \r\n            resolve({\r\n              latitude: position.coords.latitude,\r\n              longitude: position.coords.longitude,\r\n            });\r\n          },\r\n          (error) => {\r\n            if (error.code === error.PERMISSION_DENIED) {\r\n              alert(\"Please Enable Location to Proceed\");\r\n            }\r\n            reject(error);\r\n          },\r\n          {\r\n            enableHighAccuracy: true,\r\n            timeout: 10000,\r\n            maximumAge: 0\r\n          });\r\n      } else {\r\n        reject(new Error('Geolocation is not supported'));\r\n      }\r\n    });\r\n  };\r\n","export const loadScript = (src) => {\r\n    return new Promise((resolve, reject) => {\r\n        const script = document.createElement(\"script\");\r\n        script.src = src;\r\n        script.async = true;\r\n        script.onload = () => resolve(true);\r\n        script.onerror = () => reject(new Error(`Failed to load script: ${src}`));\r\n        document.body.appendChild(script);\r\n    });\r\n};","import { toast } from \"react-toastify\";\r\n\r\n\r\nexport default function toastMessage(error, message = \"something went wrong\") {\r\n\r\n    error === false ? toast.success(message) : toast.error(message);\r\n    // error === false  ?  setSnackbar({ open: true, message: response?.data?.message ||, severity: 'success' }) :  setSnackbar({ open: true, message , severity: 'error' });\r\n}","import { getLocation } from \"./getLocation\";\r\n\r\nconst  withLocation = (callback) => async (...args) => { \r\n    try {\r\n        let { latitude, longitude } = await getLocation();\r\n        \r\n        if (!latitude || !longitude) {\r\n            return alert(\"Please Enable Location\");\r\n        }\r\n\r\n       return await callback(latitude, longitude , ...args);\r\n    } catch (error) {\r\n        console.error(\"Error fetching location:\", error);\r\n    }\r\n};\r\n\r\nexport default  withLocation"],"names":["_ref","show","handleClose","onSave","isRecording","setIsRecording","useState","isPaused","setIsPaused","recordedVideo","setRecordedVideo","timer","setTimer","cameraError","setCameraError","isCameraOn","setIsCameraOn","hasWebcam","setHasWebcam","videoRef","useRef","mediaRecorderRef","streamRef","chunksRef","useEffect","Promise","resolve","navigator","mediaDevices","enumerateDevices","then","devices","some","device","kind","catch","result","interval","setInterval","prevTimer","clearInterval","startRecording","useCallback","getUserMedia","video","audio","stream","current","srcObject","MediaRecorder","ondataavailable","handleDataAvailable","onstop","handleStop","start","error","console","name","stopRecording","state","stop","getTracks","forEach","track","pauseRecording","pause","resumeRecording","resume","_ref2","data","size","push","videoBlob","Blob","type","videoUrl","URL","createObjectURL","handleCancel","_jsxs","Modal","onHide","centered","children","_jsx","Header","closeButton","Title","Body","className","_Fragment","ref","width","height","autoPlay","muted","style","display","background","src","controls","maxWidth","seconds","minutes","Math","floor","remainingSeconds","concat","toString","padStart","formatTime","Button","variant","onClick","backgroundColor","border","handleSave","Footer","CourierContext","createContext","CourierDashboardProvider","warehouseDetails","setWarehouseDetails","city","setCity","shippingCharges","setShippingCharges","qty","setQty","length","setLength","setWidth","setHeight","formData","setFormData","pincode","weight","invoiceValue","insurance","paymode","ewayBill","appointmentDelivery","Provider","value","useCourierDashboard","useContext","CustomTextField","hide","rest","TextField","InputLabelProps","shrink","fontSize","sx","borderColor","CustomOrderBox","_ref3","title","Paper","padding","borderRadius","marginTop","boxShadow","Box","px","py","Typography","gutterBottom","paddingBottom","fontWeight","color","OrderInfoBlock","_ref5","justifyContent","opacity","AddWareHouse","_ref6","setCheckWareHouse","warehouseCreationCompelete","setWareHouseCreationComplete","address","fetchWarehouseData","async","_response$data3","_response$data4","_response$data5","response","createWareHouse","warehouseName","business_Address","_response$data","getWareHouse","_response$data2","statusCode","warehouseFind","toastMessage","message","_response$data6","getCourierWareHouseInformation","pre","_response$data7","_response$data7$data","_response$data8","_response$data8$data","_response$data9","_response$data9$data","_response$data10","_response$data10$data","business_city","business_state","business_pincode","findWarehouse","validationSchema","Yup","required","Container","Grid","container","spacing","item","xs","Card","align","Formik","initialValues","enableReinitialize","onSubmit","values","_ref7","setSubmitting","_ref8","getFieldProps","touched","errors","setFieldValue","isSubmitting","Form","label","fullWidth","margin","Boolean","helperText","Object","keys","filter","field","includes","map","charAt","toUpperCase","slice","disabled","marginLeft","flexDirection","sm","gap","alignItems","mt","CouirerCheck","_ref9","setProcessStart","setPincode","onChange","e","target","test","inputProps","maxLength","pattern","inputMode","_response$data11","_response$data12","_response$data13","_response$data14","checkCourierService","CreateOrder","formErrors","setFormErrors","courierLoading","setCourierLoading","orderType","setOrderType","naviagte","useNavigate","orderData","setOrderData","sameAsBilling","setSameAsBilling","serviceable","setServiceAble","products","setProducts","productName","sku","unitPrice","quantity","productDiscount","taxRate","hsnCode","productErrors","setProductErrors","otherCharges","setOtherCharges","handleChange","prev","prevErrors","_res$data","res","getPincodeDetails","_res$data2","_res$data2$data","_res$data3","_res$data3$data","deliveryCity","deliveryState","getUserPincodeData","validateDeliveryDetails","_orderData$reseller_n","_orderData$company_na","_orderData$shipping_c","_orderData$shipping_l","_orderData$deliveryAd","_orderData$deliveryCi","_orderData$deliverySt","isMobile","number","isPincode","pin","_orderData$ewaybill_n","_orderData$ewaybill_n2","_orderData$billing_cu","_orderData$billing_la","_orderData$billingAdd","_orderData$billingCit","_orderData$billingSta","invoice_number","Number","ewaybill_no","trim","reseller_name","company_name","deliveryMobile","shipping_customer_name","shipping_last_name","deliveryAddress","deliveryPincode","customer_gstin","deliveryAlternateMobile","deliveryEmail","billingMobile","billing_customer_name","billing_last_name","billingAddress","billingPincode","billingCity","billingState","billingEmail","log","billingLandmark","deliveryLandmark","handleProductChange","index","updatedProducts","validateProductField","arguments","undefined","newErrors","validateSingle","i","f","v","errorMsg","isNaN","product","every","errObj","packageInfo","setPackageInfo","deadWeight","breadth","volumetricWeight","packageInfoerrors","setPackageInfoErrors","handlePackageInfo","packageInfoValidateFields","_ref10","_Object$keys","dim","calculateVolumetricWeight","volWeight","toFixed","subtotal","useMemo","reduce","sum","val","otherChargestotal","giftwrap","transactionCharges","handlePinChange","body","pickup_postcode","delivery_postcode","cod","_response$data15","_response$data16","_response$data17","_response$data18","checkShipRocketCourierService","err","checkUserPincode","userCreateOrder","orderDetails","pickup_location","warehouse_name","billing_address","billing_city","billing_pincode","billing_state","billing_country","billing_email","billing_phone","billing_alternate_phone","shipping_is_billing","shipping_address","shipping_city","shipping_pincode","shipping_state","shipping_country","shipping_email","shipping_phone","order_items","units","selling_price","discount","tax","hsn","payment_method","shipping_charges","giftwrap_charges","transaction_charges","total_discount","totalDiscount","sub_total","order_type","_res$data4","_res$data5","createShipRocketOrder","md","lg","ml","FormControlLabel","control","Checkbox","checked","_productErrors$index","_productErrors$index2","_productErrors$index3","_productErrors$index4","_productErrors$index5","_productErrors$index6","_productErrors$index7","_productErrors$index8","mb","IconButton","updatedErrors","splice","handleRemoveProduct","DeleteIcon","handleAddProduct","p","InputProps","readOnly","FormControl","InputLabel","Select","MenuItem","columnGap","isDeliveryValid","isPackageValid","isProductValid","_res$data7","_res$data8","_data$shipping_addres","shipRocket_order_id","_res$data6","setTimeout","CourierDashboard","processStart","checkWareHouse","currentStep","setCurrentStep","loading","setLoading","editBoolon","URLSearchParams","window","location","search","get","_response$data19","_response$data20","useCourierImageUploadOnboard","imageUrl","setImageUrl","ImageUpload","editBool","position","overflow","bgcolor","cursor","_document$getElementB","document","getElementById","click","Avatar","genrateUrl","stopPropagation","accept","id","file","files","FormData","append","cloudImage","_res$data$data","url","handleImageChange","Tooltip","component","_document$getElementB2","bottom","right","PhotoCamera","top","Delete","CourierKycPending","FaCheckCircle","textAlign","marginBottom","textTransform","Link","to","textDecoration","mobileRegex","yup","shape","matches","fatherName","education","permanentAddress","aadharNumber","panNumber","firmName","businessAddress","businessMobileNumber","businessMailId","email","shopNearbyLocation","yearOfBusinessPlace","typeError","businessPlaceType","oneOf","bank_type","workingTime","workingDays","otp","bank_id","ifsc","account_number","businessType","SponsorVerification","setUser","sponserUser","setSponserUser","setShowSponsorTab","mobileNumber","setMobileNumber","mobileError","setMobileError","setOtp","otpSent","setOtpSent","otpVerified","setOtpVerified","sendOTP","withLocation","latitude","longitude","sponcer_mobile","lat","long","sponcer","sendSponserOtp","_res$data4$data","sponsorData","verifyOTP","verifySponserOtp","withoutSponserData","_res$data9","_res$data10","_res$data11","_res$data12","startWithoutSponsor","replace","handleReset","adhaar_name","profile","mobile","Stack","direction","startWithSponsor","SignupForm","walletShowHeader","setpageLoader","user","onComplete","isOtpRequired","setIsOtpRequired","previousAadhar","setPreviousAadhar","isAadharVerified","setIsAadharVerified","isBankVerified","setIsBankVerified","bankList","setBankList","bankVerifiedId","setBankVerifiedId","adharRef","setadharRef","_user$mobile","fetchedData","presentAddr","adhaar_number","pan_number","pan","user_id","localStorage","getItem","corieronboardingPanVerify","_response$data$data","validatePanNumber","formFields","key","_res$data13","_res$data13$data","getAllBank","mapped","bank_name","fetchBanks","handleSubmit","father_name","Business_mail","shopNearbyLocatio","bankDetailesId","business_mobile","sponsor_id","sponcerId","country","pinCode","pan_name","shop_name","educationQualification","_res$data28","_res$data29","corierSignup","workingTimeOptions","validateField","setFieldTouched","setErrors","Field","as","adharnumber","adhaarNumber","_res$data14","_res$data15","_res$data16","corieronboardingAdharOtpSend","_res$data17","_res$data17$data","ref_id","validateAddhar","_res$data18","_res$data19","_res$data20","corieronboardingAdharOtpVerify","verifyAadharOtp","Autocomplete","options","getOptionLabel","option","bank","isOptionEqualToValue","_value$value","bankID","selected","_selected$value","_selected$value2","ifsc_code","renderInput","params","_ref4","RadioGroup","row","Radio","FormHelperText","_values$bank","_res$data21","_res$data23","_res$data24","obj","bankAccount","account_type","corieronboardingBankVerification","_res$data22","_res$data22$data","bankVerify","String","whiteSpace","_res$data25","getDetailByPin","_res$data26","_res$data26$data","_res$data27","_res$data27$data","fetchPincode","select","UploadBusinessImages","imageUpload1","imageUpload2","imageUpload3","imageUpload4","imageUpload5","imageUpload6","imageUpload7","imageUpload8","imageUpload9","imageUpload10","setError","imageUploads","titles","_res$data30","getCorieronboardingDoc","_res$data31","_res$data31$data","_res$data32","_res$data32$data","_res$data33","_res$data33$data","_res$data34","_res$data34$data","_res$data35","_res$data35$data","_res$data36","_res$data36$data","_res$data37","_res$data37$data","_res$data38","_res$data38$data","_res$data39","_res$data39$data","_res$data40","_res$data40$data","shopInnerImg","shopOuterImg","shopLeftOfOuter","shopRightOfOuter","shopFront","shopNearByImage","adhaarImgFront","adhaarImgBack","panImg","bankImg","getDoc","upload","_res$data41","_res$data42","_res$data43","corieronboardingAddDoc","UploadBusinessVideo","showRecorder","setShowRecorder","isUploading","setIsUploading","_fetch","fetch","r","blob","_res$data44","_res$data45","_res$data46","corieronboardingKycVideo","uploadVideo","VideoRecorder","VerifyDocuments","setCurrentPage","pdfUrl","setPdfUrl","open","setOpen","_res$data47","corierAgrementCheck","is_courierAgreement","fileURL","getcorieronboardAggrement","getAggrement","revokeObjectURL","Dialog","onClose","DialogTitle","DialogContent","DialogActions","PaymentGateWay","showSponsorTab","setPaymentComplete","selectedPayment","setSelectedPayment","tpin","setTpin","bal","setBal","firstLoading","setFirstLoading","_res$data48","_res$data48$data","_res$data49","_res$data49$data","getsponserPaymentAmount","amt","paymentStatus","getAmount","handleWalletPayment","_res$data50","_res$data51","_res$data52","sponserPaymentWallet","handleRazorpayPayment","createsponserPaymentGatewayOrder","_res$data58","loadScript","alert","razor_pay_key","amount","currency","description","order_id","handler","_res$data53","_res$data54","_res$data55","verifyponserPaymentGatewayResponse","prefill","contact","theme","paymentObject","Razorpay","on","_res$data56","_res$data57","loadGateWay","FormLabel","transition","_ref11","tabIndex","setTabIndex","currentPage","paymentComplete","kycApproved","isKycApproved","completedSteps","setCompletedSteps","opBoardingComplete","setOnBoardingComplete","pageLoader","handleComplete","_res$data59","Getprofile","_res$data60","_res$data60$data","_res$data61","_res$data61$data","_res$data62","_res$data62$data","_res$data63","_res$data63$data","_res$data64","_res$data64$data","_res$data65","_res$data65$data","_res$data66","_res$data66$data","_res$data67","_res$data67$data","_res$data68","_res$data68$data","_res$data69","_res$data69$data","_res$data70","_res$data70$data","_res$data71","_res$data71$data","_res$data72","_res$data72$data","_res$data73","_res$data73$data","_res$data74","_res$data74$data","_res$data75","_res$data75$data","is_courierSingup","is_courierDoc","is_courierVideo","is_courierOnboarding","validateOnboarding","CouierDashboard","Loader","Tabs","newValue","Tab","baseUrlImage","getLocation","reject","geolocation","getCurrentPosition","coords","code","PERMISSION_DENIED","enableHighAccuracy","timeout","maximumAge","Error","script","createElement","onload","onerror","appendChild","toast","success","callback","_len","args","Array","_key"],"sourceRoot":""}