{"version":3,"file":"static/js/9048.2c9660db.chunk.js","mappings":"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","sources":["components/merchantLoginArea/sinupMerchant/tabSinUp/NewTabSignUp.js","components/merchantLoginArea/sinupMerchant/signUpMerchantForm/MobilesinupOtpModal.js","components/merchantLoginArea/sinupMerchant/signUpMerchantForm/SignUpMerchantForm.js","components/merchantLoginArea/sinupMerchant/SinUpMerchant.js","pages/merchantLoginArea/sinupMerchant/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\n\r\nfunction NewTabSignUp({ data, count, tabChange, register, handleResiter2 }) {\r\n  const initialUserTypeId = '65f3fb87a6a2a92f979b47eb';\r\n  const [selectedOption, setSelectedOption] = useState(initialUserTypeId);\r\n  const [errorValue, setErrorValue] = useState({});\r\n  useEffect(() => {\r\n    if (data && data.length > 0) {\r\n      const index = data.findIndex(item => item._id === initialUserTypeId);\r\n      if (index !== -1) {\r\n        tabChange(index, initialUserTypeId);\r\n        handleResiter2(initialUserTypeId);\r\n      }\r\n    }\r\n  }, [data]);\r\n\r\n  const handleSelectChange = (e) => {\r\n    const selectedId = e.target.value;\r\n    setSelectedOption(selectedId);\r\n    const index = data.findIndex(item => item._id === selectedId);\r\n    tabChange(index, selectedId);\r\n    handleResiter2(selectedId);\r\n    \r\n    setErrorValue(prev => ({ ...prev, user_type: \"\" }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-lg-6 col-md-6 col-sm-12  form-group mb-1\">\r\n      <div className=\"input-group\">\r\n        <select\r\n          id=\"userTypeSelect\"\r\n          name=\"user_type_id\"\r\n          value={selectedOption}\r\n          onChange={handleSelectChange}\r\n          className=\"form-select form-control\"\r\n        >\r\n          <option value=\"\" disabled selected={true}>Select User Type</option>\r\n          {data && data.map((item) => (\r\n            <option key={item._id} value={item._id}>\r\n              {item.user_type}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <span className=\"text-danger\">{errorValue.user_type}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTabSignUp;","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { resendOtpslogin } from \"../../../../api/login/Login\";\r\nimport {\r\n  toastErrorMessage,\r\n  toastSuccessMessage,\r\n} from \"../../../compeleteRegister/ToastShare\";\r\n\r\nconst MobilesinupOtpModal = ({\r\n  show,\r\n  onHide,\r\n  otp,\r\n  inputs,\r\n  otpMessage,\r\n  otpError,\r\n  handleResendOTP,\r\n  otpHandleChange,\r\n  handleKeyDown,\r\n  handleOtpSubmit,\r\n  setOtp,\r\n  // resendOtpslogin, // Assuming you have an API function for resending OTP\r\n  storedMobileNo,\r\n  logintoken,\r\n}) => {\r\n  const [isTimerEnded, setIsTimerEnded] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(120);\r\n  const [resendLoading, setResendLoading] = useState(false);\r\n  const [isResendDisabled, setIsResendDisabled] = useState(true);\r\n\r\n  const timerRef = useRef(null);\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, \"0\")}:${remainingSeconds\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const startTimer = useCallback(() => {\r\n    if (timerRef.current) clearInterval(timerRef.current);\r\n\r\n    setTimeLeft(120);\r\n    setIsTimerEnded(false);\r\n    setIsResendDisabled(true);\r\n\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft((prevTime) => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(timerRef.current);\r\n          setIsResendDisabled(false);\r\n          setIsTimerEnded(true);\r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!show) return;\r\n    startTimer();\r\n    return () => {\r\n      if (timerRef.current) clearInterval(timerRef.current);\r\n    };\r\n  }, [show, startTimer]);\r\n\r\n  const handleResendOtp = useCallback(async () => {\r\n    try {\r\n      setResendLoading(true);\r\n      setIsResendDisabled(true);\r\n      const response = await resendOtpslogin({\r\n        customer_mobile: storedMobileNo,\r\n        user_id: logintoken,\r\n      });\r\n      console.log(\"response\", response);\r\n      if (response?.data?.statusCode == 200) {\r\n        toastSuccessMessage(response?.data?.message);\r\n        setOtp(new Array(6).fill(\"\"));\r\n        startTimer();\r\n      } else {\r\n        toastErrorMessage(response?.data?.data?.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error resending OTP:\", error);\r\n    } finally {\r\n      setResendLoading(false);\r\n      setIsResendDisabled(false);\r\n    }\r\n  }, [startTimer, setOtp, resendOtpslogin, storedMobileNo, logintoken]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      centered\r\n      className=\"email-optp-modle\"\r\n      style={{ zIndex: 1050 }}\r\n    >\r\n      <Modal.Body\r\n        style={{\r\n          backgroundColor: `var(--bs-primary1)`,\r\n          color: `var(--bs-primary2)`,\r\n          border: \"2px solid var(--bs-primary3)\",\r\n          transform: \"translateZ(0)\",\r\n        }}\r\n      >\r\n        <div className=\"set-head\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"headinf-otp\">\r\n                <h2>Mobile OTP Verification</h2>\r\n                <p className=\"set-lage\">\r\n                  We've sent a 6-digit verification code to your mobile number,\r\n                  please enter it here!\r\n                </p>\r\n              </div>\r\n              {isTimerEnded ? (\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-login\"\r\n                    onClick={handleResendOtp}\r\n                    disabled={resendLoading || isResendDisabled}\r\n                  >\r\n                    {resendLoading ? (\r\n                      <span\r\n                        className=\"spinner-border spinner-border-sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                      ></span>\r\n                    ) : (\r\n                      \"Resend OTP\"\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>OTP expires in {formatTime(timeLeft)}</span>\r\n                    <span\r\n                      className=\"resend-otp\"\r\n                      onClick={handleResendOtp}\r\n                      style={{\r\n                        cursor: isResendDisabled ? \"default\" : \"pointer\",\r\n                        color: isResendDisabled ? \"gray\" : \"blue\",\r\n                        pointerEvents: isResendDisabled ? \"none\" : \"auto\",\r\n                      }}\r\n                    >\r\n                      Resend OTP\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"otp-inputs\">\r\n                    {otp.map((value, index) => (\r\n                      <input\r\n                        key={index}\r\n                        type=\"number\"\r\n                        maxLength=\"1\"\r\n                        value={value}\r\n                        onChange={(e) =>\r\n                          otpHandleChange(index, e.target.value, setOtp, inputs)\r\n                        }\r\n                        onKeyDown={(e) => handleKeyDown(index, e, inputs)}\r\n                        ref={(input) => (inputs.current[index] = input)}\r\n                        className=\"otp-input\"\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-login\"\r\n                      onClick={() => handleOtpSubmit(\"mobile\")}\r\n                      disabled={\r\n                        resendLoading || otp.some((digit) => digit === \"\")\r\n                      }\r\n                    >\r\n                      {resendLoading ? (\r\n                        <span\r\n                          className=\"spinner-border spinner-border-sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        ></span>\r\n                      ) : (\r\n                        \"Submit OTP\"\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {otpMessage && (\r\n                <div className=\"alert alert-success mt-3\">{otpMessage}</div>\r\n              )}\r\n              {otpError && (\r\n                <div className=\"alert alert-danger mt-3\">{otpError}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MobilesinupOtpModal;\r\n","import { FaMobileScreenButton } from \"react-icons/fa6\";\r\nimport { FaRegUser } from \"react-icons/fa\";\r\nimport { MdOutlineEmail } from \"react-icons/md\";\r\nimport { RiLockPasswordFill } from \"react-icons/ri\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { TiTick } from \"react-icons/ti\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport TabSignUp from \"../tabSinUp/TabSignUp\";\r\nimport {\r\n  CountryList,\r\n  emailSinup,\r\n  emailSinupOtp,\r\n  isEmailExits,\r\n  isEmailExits2,\r\n  isVerifiedMobileOtp,\r\n  registerUser,\r\n  userType,\r\n  resendOtpslogin,\r\n} from \"../../../../api/login/Login\";\r\nimport { getUserDetails } from \"../../../../utils/localStorage\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { MdVerified } from \"react-icons/md\";\r\nimport { onboardingRequest } from \"../../../../api/login/Login\";\r\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../../baseUrl\";\r\nimport {\r\n  toastErrorMessage,\r\n  toastSuccessMessage,\r\n} from \"../../../compeleteRegister/ToastShare\";\r\nimport NewTabSignUp from \"../tabSinUp/NewTabSignUp\";\r\nimport MobilesinupOtpModal from \"./MobilesinupOtpModal\";\r\nfunction SignUpMerchantForm({\r\n  initalValue,\r\n  handleChange,\r\n  mobileGenerateOtpMobile,\r\n  userIDD,\r\n  mobileVeridedInput,\r\n  getOtp,\r\n  mobileOtp,\r\n  emailVeridedInput,\r\n  emailgetOtp,\r\n  nextForm,\r\n  emailOtp,\r\n  submitOtpEmail,\r\n  formResiter,\r\n  setEmailVeridedInput,\r\n  setMobileOtp,\r\n  setMobileVerified,\r\n  handleCountryCode,\r\n  countryCode,\r\n  setEmailOtp,\r\n  setFormResiter,\r\n  loader1,\r\n  showMobileOtp,\r\n  handleClose2,\r\n  mobileExit,\r\n  setMobileExit,\r\n  veriFiedIconMobile,\r\n  setVeriFiedIconMobile,\r\n}) {\r\n  // console.log(countryCode);\r\n  // console.log(initalValue.mobileNo.length);\r\n\r\n  const [showEmailOtp, setShowEmailOtp] = useState(false);\r\n  const timerRef = useRef(null);\r\n\r\n  const [emailExit, setemailExit] = useState(\"\");\r\n\r\n  const [veriFiedIconEmail, setVeriFiedIconEmail] = useState(false);\r\n  const [isCheckboxDisabled, setIsCheckboxDisabled] = useState(true);\r\n\r\n  const handleClose3 = () => setShowEmailOtp(false);\r\n  const handleShow3 = () => setShowEmailOtp(true);\r\n\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setIsChecked(false);\r\n    setShow(false);\r\n    // setMobileVerified(true)\r\n    // setMobileOtp(false)\r\n    // setFormResiter(false)\r\n\r\n    window.location.reload();\r\n  };\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const [emailUser, setEmailUser] = useState();\r\n  const [loader2, setloader2] = useState(false);\r\n  const [loader3, setloader3] = useState(false);\r\n  const [loader4, setloader4] = useState(false);\r\n  const [loader5, setloader5] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState(null);\r\n  const [country, setCountry] = useState(null);\r\n  // console.log(country);\r\n\r\n  const [userId, setUserId] = useState();\r\n  // console.log(userId);\r\n  const [mobileId, setMobile] = useState();\r\n  // console.log(mobileId);\r\n\r\n  const [errorValue, setErrorValue] = useState({});\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [stateList, setStateList] = useState([]);\r\n  const [selectedState, setSelectedState] = useState(\"\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const [isTimerEnded, setIsTimerEnded] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(180);\r\n  const [resendLoading, setResendLoading] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message2, setMessage2] = useState(\"\");\r\n  const [error2, setError2] = useState(\"\");\r\n  const [otpMessage, setOtpMessage] = useState(\"\");\r\n  const [otpError, setOtpError] = useState(\"\");\r\n  const [selectedUserType, setSelectedUserType] = useState(\"Super Distributor\");\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, \"0\")}:${remainingSeconds\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  };\r\n  const [stateOptions, setStateOptions] = useState([]);\r\n  const length = 6;\r\n  const [otp, setOtp] = useState(new Array(length).fill(\"\"));\r\n  const [otp1, setOtp1] = useState(new Array(length).fill(\"\"));\r\n  const inputs = useRef([]);\r\n  const inputs1 = useRef([]);\r\n  const [step, setStep] = useState(1);\r\n\r\n  const nextStep = () => setStep(step + 1);\r\n  const prevStep = () => setStep(step - 1);\r\n\r\n  // console.log(initalValue.mobileNo.slice(3, 13));\r\n  // const user_id=data?.[0]?._id :''\r\n\r\n  const user_idcus = data?.[0]?._id || \"65f3fb87a6a2a92f979b47eb\";\r\n  const [resiter, setResister] = useState({\r\n    // email: '',\r\n    mobile: mobileId,\r\n    user_type_id: user_idcus,\r\n\r\n    name: \"\",\r\n    password: \"\",\r\n    refer_id: \"\",\r\n  });\r\n  console.log(\"register\", resiter);\r\n\r\n  const validation = (values) => {\r\n    const error = {};\r\n    const regexEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n    if (!isNameValid(values.name)) {\r\n      error.name = \"Name is Required!\";\r\n    }\r\n\r\n    // if (!values.email) {\r\n    //     error.email = \"Email is required\";\r\n    // } else if (!regexEmail.test(values.email)) {\r\n    //     error.email = \"Invalid Email\";\r\n    // }\r\n    if (!values.password) {\r\n      error.password = \"Password is Required!\";\r\n    }\r\n    if (!values.refer_id) {\r\n      error.refer_id = \"Refer Id Required!\";\r\n    }\r\n    if (!selectedState) {\r\n      error.state = \"State is Required!\";\r\n    }\r\n    return error;\r\n  };\r\n\r\n  // console.log(otp);\r\n\r\n  let str = \"\";\r\n  for (let index = 0; index < otp.length; index++) {\r\n    const element = otp[index];\r\n    str = str + element;\r\n  }\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      getOtp();\r\n    }\r\n  };\r\n  const handleKeyPress2 = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      SubmitEmail();\r\n    }\r\n  };\r\n  console.log(str);\r\n\r\n  const otpChandleChange = (index, value) => {\r\n    const newOtp = [...otp];\r\n    if (value.length == 2) {\r\n      return;\r\n    }\r\n    newOtp[index] = value;\r\n    setOtp(newOtp);\r\n\r\n    if (value && inputs.current[index + 1]) {\r\n      inputs.current[index + 1].focus();\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (index, e) => {\r\n    if (e.key === \"Backspace\" && !otp[index] && inputs.current[index - 1]) {\r\n      inputs.current[index - 1].focus();\r\n    }\r\n  };\r\n\r\n  const handleEnterPress = (e) => {\r\n    if (e.key === \"Enter\" && otp.every((value) => value.length === 1)) {\r\n      submitOtp();\r\n    }\r\n  };\r\n\r\n  // const otpChandleChange = (e) => {\r\n  //     const clone = { ...otp }\r\n  //     const vlaue = e.target.value\r\n  //     const name = e.target.name\r\n  //     clone[name] = vlaue\r\n  //     setOtp(clone)\r\n  // }\r\n\r\n  const handleResiter = (e) => {\r\n    const clone = { ...resiter };\r\n    let value = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    if (name === \"name\") {\r\n      // Only allow letters and spaces for the name field\r\n      value = value.replace(/[^a-zA-Z\\s]/g, \"\");\r\n    }\r\n\r\n    clone[name] = value;\r\n    setResister(clone);\r\n  };\r\n\r\n  const handleResiter2 = (e) => {\r\n    const clone = { ...resiter, user_type_id: e };\r\n    const selectedUser = data.find((item) => item._id === e);\r\n    if (selectedUser) {\r\n      setSelectedUserType(selectedUser.user_type);\r\n    }\r\n  };\r\n\r\n  const toastSuccessMessage = (message) => {\r\n    toast.success(`${message}`, {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n    });\r\n  };\r\n\r\n  const toastSuccessMessage1 = (message) => {\r\n    toast.error(`${message}`, {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n    });\r\n  };\r\n  const resetOtpState = () => {\r\n    setTimeLeft(180);\r\n    setIsTimerEnded(false);\r\n    setOtpMessage(\"\");\r\n    setOtpError(\"\");\r\n    setOtp(new Array(length).fill(\"\"));\r\n    setOtp1(new Array(length).fill(\"\"));\r\n  };\r\n\r\n  const tabChange = (i, id) => {\r\n    setUserId(id);\r\n    const clone = { ...resiter, user_type_id: id };\r\n    // console.log(clone);\r\n    setResister(clone);\r\n    setCount(i);\r\n    const selectedUser = data.find((item) => item._id === id);\r\n    if (selectedUser) {\r\n      setSelectedUserType(selectedUser.user_type);\r\n    }\r\n  };\r\n\r\n  const handlemobileotpclose = () => {\r\n    handleClose2();\r\n\r\n    setTimeLeft(180);\r\n    setIsTimerEnded(false);\r\n    setMessage2(\"\");\r\n    setError2(\"\");\r\n    setOtp(new Array(length).fill(\"\"));\r\n  };\r\n  const submitOtp = async () => {\r\n    // debugger\r\n    setloader2(true);\r\n    try {\r\n      const res = await isVerifiedMobileOtp({ otp: str, user_id: userIDD });\r\n      // console.log(res?.data?.data.user);\r\n      setMobile(res?.data?.data?.user);\r\n      if (res?.data?.statusCode == \"200\") {\r\n        getUserDetails(res?.data?.user);\r\n        toastSuccessMessage(res.data.data.message);\r\n        // debugger\r\n        setTimeout(() => {\r\n          setEmailVeridedInput(true);\r\n          setMobileOtp(false);\r\n          setMobileVerified(false);\r\n        }, 2000);\r\n        handlemobileotpclose();\r\n        setVeriFiedIconMobile(true);\r\n        setMobileExit(\"\");\r\n      }\r\n      setloader2(false);\r\n\r\n      if (res?.data?.error == true) {\r\n        toastSuccessMessage1(res?.data?.message);\r\n      }\r\n      // console.log(res);\r\n    } catch (error) {\r\n      setloader2(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    setloader5(true);\r\n    const cloen = {\r\n      ...resiter,\r\n      mobile: mobileId,\r\n      email: emailUser,\r\n      state: selectedState,\r\n    };\r\n    console.log(\"cloen\", cloen);\r\n\r\n    event.preventDefault();\r\n    setErrorValue(validation(cloen));\r\n\r\n    try {\r\n      const res = await registerUser(cloen);\r\n      if (res?.statusCode == \"200\") {\r\n        toastSuccessMessage(\"User created Successfully\");\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/login-area\");\r\n        }, 2000);\r\n      }\r\n      if (res?.statusCode == 402) {\r\n        toastSuccessMessage1(res?.message);\r\n      }\r\n      setloader5(false);\r\n    } catch (error) {\r\n      setloader5(true);\r\n      // console.log(error);\r\n      // toastSuccessMessage(res?.data?.message)\r\n    }\r\n  };\r\n\r\n  const [emailInitial, setEmailInitial] = useState({\r\n    deviceId: \"\",\r\n    emailId: \"\",\r\n  });\r\n  const isValidEmail = (email) => {\r\n    const emailRegex =\r\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleEmail = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    // Update emailInitial state\r\n    const cloneEmail = { ...emailInitial };\r\n    cloneEmail[name] = value;\r\n    setEmailInitial(cloneEmail);\r\n\r\n    // Update emailUser state\r\n    setEmailUser(value);\r\n\r\n    if (value.trim() === \"\") {\r\n      setemailExit(\"\");\r\n      setVeriFiedIconEmail(false);\r\n      setErrorMessageEmail(\"\"); // Clear the error message when input is empty\r\n    } else {\r\n      // Clear the \"Valid email field is required\" message when user starts typing\r\n      setErrorMessageEmail(\"\");\r\n    }\r\n\r\n    // You might want to add basic email validation here\r\n    // and only call isEmailExitt if the email looks valid\r\n    if (isValidEmail(value)) {\r\n      isEmailExitt(value);\r\n    }\r\n  };\r\n\r\n  const [debouncedValue, setDebouncedValue] = useState(emailInitial.emailId);\r\n\r\n  const [errorMessageEmail, setErrorMessageEmail] = useState();\r\n\r\n  const isEmailExitt = async (value) => {\r\n    try {\r\n      const res = await isEmailExits2(value);\r\n      if (res?.data?.isExist == true) {\r\n        // alert('Email Does Not Exit')\r\n        setemailExit(\"Email ID Already Exists\");\r\n      }\r\n      if (res?.data?.isExist == false) {\r\n        setemailExit(\"\");\r\n        SubmitEmail();\r\n      }\r\n    } catch (error) {}\r\n  };\r\n  const isNameValid = (name) => {\r\n    return name.trim().length > 0;\r\n  };\r\n\r\n  const SubmitEmail = async () => {\r\n    setloader3(true);\r\n    try {\r\n      const res = await emailSinup(emailInitial);\r\n\r\n      if (res?.data?.error === false) {\r\n        window.localStorage.setItem(\"emailToken\", res?.data?.data.user);\r\n        setEmailVeridedInput(false);\r\n        setEmailOtp(true);\r\n        setErrorMessageEmail(\"\");\r\n      }\r\n\r\n      if (res?.data?.error === true) {\r\n        setErrorMessageEmail(res?.data?.message);\r\n      }\r\n      setloader3(false);\r\n    } catch (error) {\r\n      setloader3(false);\r\n    }\r\n  };\r\n\r\n  const length1 = 6;\r\n\r\n  // console.log(otp);\r\n\r\n  let str1 = \"\";\r\n  for (let index = 0; index < otp1.length; index++) {\r\n    const element = otp1[index];\r\n    str1 = str1 + element;\r\n  }\r\n\r\n  console.log(str1);\r\n\r\n  const otpChandleChange1 = (index, value) => {\r\n    const newOtp = [...otp1];\r\n    if (value.length == 2) {\r\n      return;\r\n    }\r\n    newOtp[index] = value;\r\n    setOtp1(newOtp);\r\n\r\n    if (value && inputs1.current[index + 1]) {\r\n      inputs1.current[index + 1].focus();\r\n    }\r\n  };\r\n\r\n  const handleEnterPressEmail = (e) => {\r\n    if (e.key === \"Enter\" && otp1.every((value) => value.length === 1)) {\r\n      submitEmailOtp();\r\n    }\r\n  };\r\n\r\n  const submitEmailOtp = async () => {\r\n    setloader4(true);\r\n    const otpEmailData = {\r\n      otp: str1,\r\n      user_id: window.localStorage.getItem(\"emailToken\"),\r\n    };\r\n    try {\r\n      const res = await emailSinupOtp(otpEmailData);\r\n      setEmailUser(res?.data?.data.user);\r\n      // console.log(res?.data?.data.user);\r\n      if (res.data.error == false) {\r\n        toastSuccessMessage(res?.data?.message);\r\n        setVeriFiedIconEmail(true);\r\n        setemailExit(\"\");\r\n        setFormResiter(true);\r\n        setShowEmailOtp(false);\r\n        setEmailVeridedInput(false);\r\n        setEmailOtp(false);\r\n      }\r\n      if (res.data.error == true) {\r\n        toastSuccessMessage1(res?.data?.message);\r\n      }\r\n      setloader4(false);\r\n    } catch (error) {\r\n      setloader4(false);\r\n    }\r\n  };\r\n  const inputRef = useRef(null);\r\n\r\n  const handlePaste = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleMouseDown = (event) => {\r\n    if (document.activeElement === inputRef.current) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const handleSelect = (event) => {\r\n    const input = inputRef.current;\r\n    if (input) {\r\n      const start = input.selectionStart;\r\n      const end = input.selectionEnd;\r\n\r\n      if (start < 3) {\r\n        event.preventDefault();\r\n        if (end > 3) {\r\n          input.setSelectionRange(3, end);\r\n        } else {\r\n          input.setSelectionRange(3, 3);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFocus = (event) => {\r\n    if (inputRef.current) {\r\n      inputRef.current.setSelectionRange(3, inputRef.current.value.length);\r\n    }\r\n  };\r\n  const handleCheckboxChange = (event) => {\r\n    setIsChecked(event.target.checked);\r\n    handleShow();\r\n  };\r\n\r\n  const handleStateChange = (e) => {\r\n    setSelectedState(e.target.value);\r\n  };\r\n  const handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const [location, setLocation] = useState({ latitude: null, longitude: null });\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendOnboardingRequest = async () => {\r\n    let currentLocation = { ...location };\r\n\r\n    // If location is not set, try to get it one more time\r\n    if (!currentLocation.latitude || !currentLocation.longitude) {\r\n      await new Promise((resolve) => {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            currentLocation = {\r\n              latitude: position.coords.latitude,\r\n              longitude: position.coords.longitude,\r\n            };\r\n            setLocation(currentLocation);\r\n            resolve();\r\n          },\r\n          () => {\r\n            console.warn(\"Unable to get location.\");\r\n            resolve();\r\n          },\r\n          { timeout: 5000, maximumAge: 0 }\r\n        );\r\n      });\r\n    }\r\n\r\n    const onboardingData = {\r\n      name: resiter.name,\r\n      email: emailInitial.emailId,\r\n      mobileNo: initalValue.mobileNo,\r\n      state: selectedState,\r\n    };\r\n\r\n    if (currentLocation.latitude && currentLocation.longitude) {\r\n      onboardingData.latitude = currentLocation.latitude;\r\n      onboardingData.longitude = currentLocation.longitude;\r\n    }\r\n\r\n    try {\r\n      const response = await onboardingRequest(onboardingData);\r\n      console.log(\"Onboarding request sent:\", response);\r\n    } catch (error) {\r\n      console.error(\"Error sending onboarding request:\", error);\r\n    }\r\n  };\r\n\r\n  const disabledButtonStyle = {\r\n    cursor: \"none\",\r\n    backgroundColor: \"#d3d3d3\",\r\n  };\r\n\r\n  const handleResendOTP = async (type) => {\r\n    setResendLoading(true);\r\n    setOtpError(\"\");\r\n    setOtpMessage(\"\");\r\n\r\n    try {\r\n      let response;\r\n      // if (type === 'mobile') {\r\n      response = await resendOtpslogin({ user_id: userIDD });\r\n      // } else {\r\n      //     // Assuming you have a similar function for email OTP resend\r\n      //     response = await resendEmailOtp({user_id: window.localStorage.getItem('emailToken')});\r\n      // }\r\n\r\n      if (response.status === 200) {\r\n        setOtpMessage(\"OTP has been resent successfully.\");\r\n        resetOtpState();\r\n      } else {\r\n        setOtpError(\"Failed to resend OTP.\");\r\n      }\r\n    } catch (error) {\r\n      setOtpError(\"Failed to resend OTP.\");\r\n    } finally {\r\n      setResendLoading(false);\r\n    }\r\n  };\r\n  const otpHandleChange = (index, value, setOtpFunction, inputsRef) => {\r\n    if (value.length > 1) return;\r\n    const newOtp = [...(setOtpFunction === setOtp ? otp : otp1)];\r\n    newOtp[index] = value;\r\n    setOtpFunction(newOtp);\r\n\r\n    if (value && inputsRef.current[index + 1]) {\r\n      inputsRef.current[index + 1].focus();\r\n    }\r\n  };\r\n  const handleOtpSubmit = async (type) => {\r\n    setResendLoading(true);\r\n    setOtpError(\"\");\r\n    setOtpMessage(\"\");\r\n\r\n    try {\r\n      let response;\r\n      if (type === \"mobile\") {\r\n        response = await isVerifiedMobileOtp({\r\n          otp: otp.join(\"\"),\r\n          user_id: userIDD,\r\n        });\r\n      } else {\r\n        response = await emailSinupOtp({\r\n          otp: otp1.join(\"\"),\r\n          user_id: window.localStorage.getItem(\"emailToken\"),\r\n        });\r\n      }\r\n\r\n      if (response.data.error === false) {\r\n        setOtpMessage(response.data.message);\r\n        if (type === \"mobile\") {\r\n          setMobile(response.data.data.user);\r\n          setEmailVeridedInput(true);\r\n          setMobileOtp(false);\r\n          setMobileVerified(false);\r\n          setVeriFiedIconMobile(true);\r\n          setMobileExit(\"\");\r\n        } else {\r\n          setEmailUser(response.data.data.user);\r\n          setVeriFiedIconEmail(true);\r\n          setemailExit(\"\");\r\n          setFormResiter(true);\r\n          setShowEmailOtp(false);\r\n          setEmailVeridedInput(false);\r\n          setEmailOtp(false);\r\n        }\r\n        handleCloseOtpModal(type);\r\n      } else {\r\n        setOtpError(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      setOtpError(\"Failed to verify OTP.\");\r\n    } finally {\r\n      setResendLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCloseOtpModal = (type) => {\r\n    if (type === \"mobile\") {\r\n      handleClose2();\r\n    } else {\r\n      setShowEmailOtp(false);\r\n    }\r\n    resetOtpState();\r\n  };\r\n  useEffect(() => {\r\n    // Fetch initial data\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const [countryRes, userTypeRes] = await Promise.all([\r\n          CountryList(),\r\n          userType(),\r\n        ]);\r\n        setCountry(countryRes?.data);\r\n        setData(userTypeRes?.data);\r\n        setUserId(userTypeRes?.data?.[0]?._id);\r\n      } catch (error) {\r\n        console.error(\"Error fetching initial data:\", error);\r\n      }\r\n    };\r\n\r\n    // Fetch states\r\n    const fetchStates = async () => {\r\n      try {\r\n        const response = await axios.get(`${baseUrl}state/country/101`);\r\n        if (response.data.error === false) {\r\n          const states = response.data.data.map((state) => ({\r\n            value: state._id,\r\n            name: state.name,\r\n          }));\r\n          setStateOptions(states);\r\n        } else {\r\n          console.error(\"Error fetching states:\", response.data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching states:\", error);\r\n      }\r\n    };\r\n\r\n    const getGeolocation = () => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            setLocation({\r\n              latitude: position.coords.latitude,\r\n              longitude: position.coords.longitude,\r\n            });\r\n            console.log(\"location\", location);\r\n          },\r\n          (error) => {\r\n            setError(error.message);\r\n            console.error(\"Geolocation error:\", error.message);\r\n          }\r\n        );\r\n      } else {\r\n        toastErrorMessage(\"Geolocation is not supported by this browser.\");\r\n        console.error(\"Geolocation is not supported by this browser.\");\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n    fetchStates();\r\n    getGeolocation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setResister((prev) => ({\r\n      ...prev,\r\n      password: initalValue.mobileNo.slice(3, 13),\r\n    }));\r\n  }, [initalValue.mobileNo]);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(emailInitial.emailId);\r\n    }, 2000);\r\n\r\n    return () => clearTimeout(handler);\r\n  }, [emailInitial.emailId]);\r\n\r\n  useEffect(() => {\r\n    if (debouncedValue) {\r\n      isEmailExitt(debouncedValue);\r\n    }\r\n  }, [debouncedValue]);\r\n\r\n  useEffect(() => {\r\n    if (isChecked) {\r\n      sendOnboardingRequest();\r\n    }\r\n  }, [isChecked]);\r\n\r\n  useEffect(() => {\r\n    const areFieldsFilled =\r\n      resiter.name &&\r\n      selectedState &&\r\n      initalValue.mobileNo.length === 13 &&\r\n      emailInitial.emailId;\r\n    setIsCheckboxDisabled(!areFieldsFilled);\r\n  }, [resiter.name, selectedState, initalValue.mobileNo, emailInitial.emailId]);\r\n\r\n  useEffect(() => {\r\n    setOtp(new Array(length).fill(\"\"));\r\n  }, [showMobileOtp]);\r\n\r\n  useEffect(() => {\r\n    setOtp1(new Array(length).fill(\"\"));\r\n  }, [showEmailOtp]);\r\n  console.log(\"selectedUserType\", selectedUserType);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"my-3\">\r\n        <MobilesinupOtpModal\r\n          show={showMobileOtp}\r\n          onHide={() => handleCloseOtpModal(\"mobile\")}\r\n          isTimerEnded={isTimerEnded}\r\n          resendLoading={resendLoading}\r\n          timeLeft={timeLeft}\r\n          otp={otp}\r\n          inputs={inputs}\r\n          otpMessage={otpMessage}\r\n          otpError={otpError}\r\n          handleResendOtp={handleResendOTP}\r\n          formatTime={formatTime}\r\n          otpHandleChange={otpHandleChange}\r\n          handleKeyDown={handleKeyDown}\r\n          handleOtpSubmit={handleOtpSubmit}\r\n          setOtp={setOtp}\r\n          logintoken={userIDD}\r\n        />\r\n        <Modal\r\n          show={showEmailOtp}\r\n          onHide={() => handleCloseOtpModal(\"email\")}\r\n          centered\r\n          className=\"email-optp-modle\"\r\n          style={{\r\n            zIndex: 1050,\r\n          }}\r\n        >\r\n          <Modal.Body\r\n            style={{\r\n              backgroundColor: `var(--bs-primary1)`,\r\n              color: `var(--bs-primary2)`,\r\n              border: \"2px solid var(--bs-primary3)\",\r\n              transform: \"translateZ(0)\",\r\n            }}\r\n          >\r\n            <div className=\"set-head\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"headinf-otp\">\r\n                    <h2>Email OTP Verification</h2>\r\n                    <p className=\"set-lage\">\r\n                      Enter 6 Digit Number Verification Code On Your Email ID!\r\n                    </p>\r\n                  </div>\r\n                  {isTimerEnded ? (\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-resend-otp\"\r\n                        onClick={() => handleResendOTP(\"email\")}\r\n                        disabled={resendLoading}\r\n                      >\r\n                        {resendLoading ? (\r\n                          <span\r\n                            className=\"spinner-border spinner-border-sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                        ) : (\r\n                          \"Resend OTP\"\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"verification-timer\">\r\n                        OTP expires in {formatTime(timeLeft)}{\" \"}\r\n                        <span\r\n                          className=\"resend-otp\"\r\n                          onClick={() => handleResendOTP(\"email\")}\r\n                        >\r\n                          Resend OTP\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"otp-inputs\">\r\n                        {otp1.map((value, index) => (\r\n                          <input\r\n                            key={index}\r\n                            type=\"number\"\r\n                            maxLength=\"1\"\r\n                            value={value}\r\n                            onChange={(e) =>\r\n                              otpHandleChange(\r\n                                index,\r\n                                e.target.value,\r\n                                setOtp1,\r\n                                inputs1\r\n                              )\r\n                            }\r\n                            onKeyDown={(e) => handleKeyDown(index, e, inputs1)}\r\n                            ref={(input) => (inputs1.current[index] = input)}\r\n                            className=\"otp-input\"\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-submit-otp\"\r\n                          onClick={() => handleOtpSubmit(\"email\")}\r\n                          disabled={\r\n                            resendLoading || otp1.some((digit) => digit === \"\")\r\n                          }\r\n                        >\r\n                          {resendLoading ? (\r\n                            <span\r\n                              className=\"spinner-border spinner-border-sm\"\r\n                              role=\"status\"\r\n                              aria-hidden=\"true\"\r\n                            ></span>\r\n                          ) : (\r\n                            \"Submit OTP\"\r\n                          )}\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  {otpMessage && (\r\n                    <div className=\"alert alert-success mt-3\">{otpMessage}</div>\r\n                  )}\r\n                  {otpError && (\r\n                    <div className=\"alert alert-danger mt-3\">{otpError}</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n        {formResiter ? (\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 mb-2\">\r\n                <div className=\"input-group \">\r\n                  <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                    <FaRegUser />\r\n                  </span>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Your Name\"\r\n                    name=\"name\"\r\n                    value={resiter.name}\r\n                    onChange={handleResiter}\r\n                  />\r\n                </div>\r\n                <p style={{ color: \"red\", marginBottom: \"2px\" }}>\r\n                  {errorValue.name}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-12 mb-2 \">\r\n                {/* <label htmlFor=\"\">Mobile <span style={{ color: 'red' }}>*</span></label> */}\r\n                <div className=\"input-group input-group-set-mob\">\r\n                  <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                    <FaMobileScreenButton />\r\n                  </span>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Mobile Number\"\r\n                    ref={inputRef}\r\n                    onMouseDown={handleMouseDown}\r\n                    onSelect={handleSelect}\r\n                    onPaste={handlePaste}\r\n                    name=\"mobileNo\"\r\n                    onKeyDown={handleKeyPress}\r\n                    value={initalValue.mobileNo}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {veriFiedIconMobile && (\r\n                    <div className=\"setVerufied\">\r\n                      <MdVerified />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {mobileExit && <p className=\"text-danger\">{mobileExit}</p>}\r\n              </div>\r\n              <div className=\"col-12 mb-2 \">\r\n                <div className=\"input-group input-group-set-mob\">\r\n                  <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                    <MdEmail />\r\n                  </span>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Email\"\r\n                    name=\"emailId\"\r\n                    onKeyDown={handleKeyPress2}\r\n                    value={emailInitial.emailId}\r\n                    onChange={handleEmail}\r\n                    autocomplete=\"new-email\"\r\n                  />\r\n                  {veriFiedIconEmail && (\r\n                    <div className=\"setVerufied\">\r\n                      <MdVerified />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {errorMessageEmail && (\r\n                  <p style={{ color: \"red\" }}>{errorMessageEmail}</p>\r\n                )}\r\n                {emailExit && <p style={{ color: \"red\" }}>{emailExit}</p>}\r\n              </div>\r\n              <div className=\"col-12 mb-2\">\r\n                <div className=\"input-group \">\r\n                  <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                    <RiLockPasswordFill />\r\n                  </span>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Your Password\"\r\n                    name=\"password\"\r\n                    disabled\r\n                    value={resiter.password}\r\n                    onChange={handleResiter}\r\n                  />\r\n                </div>\r\n                <p style={{ color: \"red\", marginBottom: \"2px\" }}>\r\n                  {errorValue.name}\r\n                </p>\r\n              </div>\r\n              <NewTabSignUp\r\n                data={data}\r\n                count={count}\r\n                tabChange={tabChange}\r\n                resiter={resiter}\r\n                handleResiter2={handleResiter2}\r\n              />\r\n              <div className=\"col-lg-6 col-md-6 col-sm-12 form-group mb-2\">\r\n                <div className=\"input-group\">\r\n                  <select\r\n                    id=\"myState\"\r\n                    name=\"state_id\"\r\n                    value={selectedState}\r\n                    onChange={handleStateChange}\r\n                    className=\"form-select form-control\"\r\n                  >\r\n                    <option value=\"\" disabled>\r\n                      Select State{\" \"}\r\n                    </option>\r\n                    {stateOptions\r\n                      .filter((state) =>\r\n                        state.name\r\n                          .toLowerCase()\r\n                          .includes(searchQuery.toLowerCase())\r\n                      )\r\n                      .map((state) => (\r\n                        <option key={state.value} value={state.value}>\r\n                          {state.name}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n                <span className=\"text-danger\">{errorValue.state}</span>\r\n              </div>\r\n              {selectedUserType !== \"zsm\" && (\r\n                <div className=\"col-lg-6 mb-2\">\r\n                  <div className=\"input-group\">\r\n                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                      <RiLockPasswordFill />\r\n                    </span>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Enter Refer ID\"\r\n                      name=\"refer_id\"\r\n                      value={resiter.refer_id}\r\n                      onChange={handleResiter}\r\n                    />\r\n                  </div>\r\n                  <p style={{ color: \"red\", marginBottom: \"2px\" }}>\r\n                    {errorValue.refer_id}\r\n                  </p>\r\n                </div>\r\n              )}\r\n\r\n              {selectedUserType !== \"zsm\" && (\r\n                <>\r\n                  <div className=\"col-lg-6 mb-2\">\r\n                    <div\r\n                      className=\"form-check form-check-form\"\r\n                      style={{ paddingLeft: \"2rem\" }}\r\n                    >\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        id=\"flexCheckDefault\"\r\n                        checked={isChecked}\r\n                        onChange={handleCheckboxChange}\r\n                        disabled={isCheckboxDisabled}\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"flexCheckDefault\"\r\n                      >\r\n                        Without Refer ID\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  disabled={\r\n                    !isNameValid(resiter.name) ||\r\n                    !resiter.name ||\r\n                    !resiter.password ||\r\n                    (!resiter.refer_id &&\r\n                      selectedUserType !== \"Super Distributortttttttt\" &&\r\n                      !isChecked) ||\r\n                    !isValidEmail(emailInitial.emailId) ||\r\n                    initalValue.mobileNo.length !== 13 ||\r\n                    errorMessageEmail\r\n                  }\r\n                  className={`btn ${\r\n                    !isNameValid(resiter.name) ||\r\n                    !resiter.name ||\r\n                    !resiter.password ||\r\n                    (!resiter.refer_id &&\r\n                      selectedUserType !== \"Super Distributorttttttttt\" &&\r\n                      !isChecked) ||\r\n                    !isValidEmail(emailInitial.emailId) ||\r\n                    initalValue.mobileNo.length !== 13 ||\r\n                    errorMessageEmail\r\n                      ? \"disableebuttoncls\"\r\n                      : \"btn-login\"\r\n                  }`}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  {loader5 && (\r\n                    <div\r\n                      style={{ height: \"16px\", width: \"16px\" }}\r\n                      className=\"spinner-border\"\r\n                      role=\"status\"\r\n                    >\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  )}\r\n                  REGISTER\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Modal\r\n          show={show}\r\n          onHide={handleClose}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          style={{\r\n            zIndex: 1050,\r\n          }}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title style={{ color: \"green\" }}>Thank You !</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            style={{\r\n              backgroundColor: \"#ffffff\",\r\n              transform: \"translateZ(0)\",\r\n              backfaceVisibility: \"hidden\",\r\n            }}\r\n          >\r\n            <div className=\"para-comor\">\r\n              <p>\r\n                Thank you for choosing BankMudraa!.Our enterprise team will\r\n                reach out to you shortly.\r\n              </p>\r\n              <p>\r\n                If you have any further questions, feel free to contact us at{\" \"}\r\n                <a href=\"mailto:support@bankMudraa.com\" target=\"blank\">\r\n                  support@bankMudraa.com\r\n                </a>{\" \"}\r\n                .\r\n              </p>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n      <div className=\"text-align-center mt-1\">\r\n        <div>\r\n          Have an account?{\" \"}\r\n          <Link\r\n            to=\"/login-area\"\r\n            className=\"text-decoration-underline\"\r\n            style={{ color: \"var(--bs-nav)\" }}\r\n          >\r\n            Login\r\n          </Link>{\" \"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default SignUpMerchantForm;\r\n","import { useState } from \"react\"\r\nimport MerchantLoginHeader from \"../../../common/merchantLoginHeader/MerchantLoginHeader\"\r\nimport SignUpMerchantForm from \"./signUpMerchantForm/SignUpMerchantForm\"\r\nimport { isMobileExits, sinupApi, userType } from \"../../../api/login/Login\"\r\nimport { toast } from \"react-toastify\"\r\nimport Footer from \"../../footer/footer\"\r\nimport AnimatedWrapper from \"../../../common/AnimateWrapper\"\r\nfunction SignUpMerchant() {\r\n    const [loader1, setloader1] = useState(false)\r\n    const [showMobileOtp, setShowMobileOtp] = useState(false);\r\n    const [mobileExit, setMobileExit] = useState()\r\n    const handleClose2 = () => setShowMobileOtp(false);\r\n    const handleShow2 = () => setShowMobileOtp(true);\r\n    const [mobileVeridedInput, setMobileVerified] = useState(true)\r\n    const [mobileOtp, setMobileOtp] = useState(false)\r\n    const [emailVeridedInput, setEmailVeridedInput] = useState(false)\r\n    const [emailOtp, setEmailOtp] = useState(false)\r\n    const [formResiter, setFormResiter] = useState(true);\r\n    const [countryCode, setCountryCode] = useState()\r\n    const [verifyotpValue, setVarifyOtpValue] = useState(null);\r\n    const [userIDD, setUserID] = useState()\r\n    const [countryCode1, setCountryCode1] = useState(10)\r\n    // console.log(userIDD);\r\n\r\n    const [initalValue, setInitialValue] = useState({\r\n        mobileNo: '+91',\r\n        emailId: ''\r\n    })\r\n    const [veriFiedIconMobile, setVeriFiedIconMobile] = useState(false)\r\n    // console.log(initalValue);\r\n\r\n    const handleChange = (e) => {\r\n        const clone = { ...initalValue }\r\n        const input = e.target.value.replace(/[^0-9+]/g, '');\r\n        const vlaue = input\r\n        const name = e.target.name\r\n\r\n        // clone[name] = vlaue\r\n\r\n        if (e.target.value.length == 2) {\r\n            return\r\n        }\r\n        let newValue = { ...initalValue };\r\n        if (name === \"mobileNo\") {\r\n            setMobileExit('');\r\n            setVeriFiedIconMobile(false);\r\n\r\n\r\n            if (input.length <= 13) {\r\n                newValue = { ...newValue, [name]: input };\r\n            }\r\n        } else {\r\n            newValue = { ...newValue, [name]: input };\r\n        }\r\n\r\n\r\n\r\n        setInitialValue(newValue);\r\n\r\n        if (newValue.mobileNo?.length === 13) {\r\n            isMobileExit(newValue.mobileNo);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const handleCountryCode = (e) => {\r\n        setCountryCode(e.target.value);\r\n        const clone = { ...initalValue, mobileNo: e.target.value }\r\n        setInitialValue(clone)\r\n\r\n    }\r\n\r\n\r\n    const isMobileExit = async (value) => {\r\n        try {\r\n            const res = await isMobileExits(value)\r\n            console.log(res?.data?.isExist);\r\n            if (res?.data?.isExist == true) {\r\n                // alert('Mobile Exit')\r\n\r\n                setMobileExit('Mobile Number Already Exists')\r\n\r\n            }\r\n            else {\r\n                setMobileExit('');\r\n\r\n                mobileGenerateOtpMobile(value);\r\n                handleShow2();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error checking mobile existence:', error);\r\n        }\r\n    }\r\n\r\n\r\n    const toastSuccessMessage = () => {\r\n        toast.success(`OTP Send Successfully.`, {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n        });\r\n    };\r\n\r\n    const mobileGenerateOtpMobile = async (value) => {\r\n        setloader1(true)\r\n        const clone = { ...initalValue, mobileNo: value }\r\n        try {\r\n            const res = await sinupApi(clone)\r\n            // console.log(res?.data);\r\n            setUserID(res?.data?.data?.user);\r\n            if (res?.data?.statusCode == '200') {\r\n                toastSuccessMessage();\r\n                setMobileVerified(false)\r\n                setMobileOtp(true)\r\n            }\r\n            setloader1(false)\r\n\r\n        } catch (error) {\r\n            setloader1(false)\r\n        }\r\n    }\r\n\r\n    const getOtp = () => {\r\n        mobileGenerateOtpMobile()\r\n    }\r\n\r\n    const emailgetOtp = () => {\r\n        // setEmailVeridedInput(false)\r\n        setEmailOtp(true)\r\n        setEmailVeridedInput(false)\r\n    }\r\n\r\n    const submitOtpEmail = () => {\r\n        setFormResiter(true)\r\n        setEmailVeridedInput(false)\r\n        setEmailOtp(false)\r\n    }\r\n\r\n    const nextForm = () => {\r\n        setFormResiter(true)\r\n        setEmailVeridedInput(false)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <MerchantLoginHeader /> */}\r\n            <div className=\"container-login100\">\r\n                <section className=\"my-4-4\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <AnimatedWrapper>\r\n                                <div className=\"col-lg-12 \">\r\n                                    <div className=\"login-area-sec glass-container custom-scrollbar\">\r\n                                        <h1 className=\"text-align-center\">Signup</h1>\r\n                                        <SignUpMerchantForm\r\n                                            mobileVeridedInput={mobileVeridedInput}\r\n                                            getOtp={getOtp}\r\n                                            mobileOtp={mobileOtp}\r\n                                            emailVeridedInput={emailVeridedInput}\r\n                                            emailgetOtp={emailgetOtp}\r\n                                            nextForm={nextForm}\r\n                                            emailOtp={emailOtp}\r\n                                            submitOtpEmail={submitOtpEmail}\r\n                                            formResiter={formResiter}\r\n                                            setEmailVeridedInput={setEmailVeridedInput}\r\n\r\n                                            setMobileOtp={setMobileOtp}\r\n                                            setMobileVerified={setMobileVerified}\r\n\r\n                                            initalValue={initalValue}\r\n                                            handleChange={handleChange}\r\n                                            mobileGenerateOtpMobile={mobileGenerateOtpMobile}\r\n                                            userIDD={userIDD}\r\n\r\n                                            handleCountryCode={handleCountryCode}\r\n                                            countryCode={countryCode}\r\n\r\n                                            setEmailOtp={setEmailOtp}\r\n                                            setFormResiter={setFormResiter}\r\n                                            loader1={loader1}\r\n\r\n                                            showMobileOtp={showMobileOtp}\r\n                                            handleClose2={handleClose2}\r\n                                            mobileExit={mobileExit}\r\n                                            setMobileExit={setMobileExit}\r\n                                            veriFiedIconMobile={veriFiedIconMobile}\r\n                                            setVeriFiedIconMobile={setVeriFiedIconMobile}\r\n\r\n\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </AnimatedWrapper>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n            <Footer notIsFixed={true}/>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default SignUpMerchant","import SignUpMerchant from \"../../../components/merchantLoginArea/sinupMerchant/SinUpMerchant\"\r\nfunction SinUpMerchantPage() {\r\n    return (\r\n        <>\r\n                <SignUpMerchant /> \r\n        </>\r\n    )\r\n}\r\nexport default SinUpMerchantPage"],"names":["_ref","data","count","tabChange","register","handleResiter2","initialUserTypeId","selectedOption","setSelectedOption","useState","errorValue","setErrorValue","useEffect","length","index","findIndex","item","_id","_jsxs","className","children","_jsx","id","name","value","onChange","e","selectedId","target","prev","user_type","disabled","selected","map","show","onHide","otp","inputs","otpMessage","otpError","handleResendOTP","otpHandleChange","handleKeyDown","handleOtpSubmit","setOtp","storedMobileNo","logintoken","isTimerEnded","setIsTimerEnded","timeLeft","setTimeLeft","resendLoading","setResendLoading","isResendDisabled","setIsResendDisabled","timerRef","useRef","startTimer","useCallback","current","clearInterval","setInterval","prevTime","handleResendOtp","async","_response$data","response","resendOtpslogin","customer_mobile","user_id","_response$data2","_response$data3","_response$data3$data","console","log","statusCode","toastSuccessMessage","message","Array","fill","toastErrorMessage","error","Modal","centered","style","zIndex","Body","backgroundColor","color","border","transform","type","onClick","role","_Fragment","seconds","minutes","Math","floor","remainingSeconds","concat","toString","padStart","formatTime","cursor","pointerEvents","maxLength","onKeyDown","ref","input","some","digit","_data$","initalValue","handleChange","mobileGenerateOtpMobile","userIDD","mobileVeridedInput","getOtp","mobileOtp","emailVeridedInput","emailgetOtp","nextForm","emailOtp","submitOtpEmail","formResiter","setEmailVeridedInput","setMobileOtp","setMobileVerified","handleCountryCode","countryCode","setEmailOtp","setFormResiter","loader1","showMobileOtp","handleClose2","mobileExit","setMobileExit","veriFiedIconMobile","setVeriFiedIconMobile","showEmailOtp","setShowEmailOtp","emailExit","setemailExit","veriFiedIconEmail","setVeriFiedIconEmail","isCheckboxDisabled","setIsCheckboxDisabled","isChecked","setIsChecked","setShow","emailUser","setEmailUser","loader2","setloader2","loader3","setloader3","loader4","setloader4","loader5","setloader5","navigate","useNavigate","setData","country","setCountry","userId","setUserId","mobileId","setMobile","setCount","stateList","setStateList","selectedState","setSelectedState","searchQuery","setSearchQuery","loading","setLoading","message2","setMessage2","error2","setError2","setOtpMessage","setOtpError","selectedUserType","setSelectedUserType","stateOptions","setStateOptions","otp1","setOtp1","inputs1","step","setStep","user_idcus","resiter","setResister","mobile","user_type_id","password","refer_id","str","element","key","focus","handleResiter","clone","replace","toast","success","position","autoClose","toastSuccessMessage1","resetOtpState","emailInitial","setEmailInitial","deviceId","emailId","isValidEmail","email","test","debouncedValue","setDebouncedValue","errorMessageEmail","setErrorMessageEmail","isEmailExitt","_res$data6","_res$data7","res","isEmailExits2","isExist","SubmitEmail","isNameValid","trim","_res$data8","_res$data10","emailSinup","_res$data9","_res$data11","window","localStorage","setItem","user","str1","inputRef","location","setLocation","latitude","longitude","setError","status","setOtpFunction","inputsRef","newOtp","isVerifiedMobileOtp","join","emailSinupOtp","getItem","handleCloseOtpModal","_userTypeRes$data","_userTypeRes$data$","countryRes","userTypeRes","Promise","all","CountryList","userType","fetchInitialData","axios","get","baseUrl","states","state","fetchStates","navigator","geolocation","getCurrentPosition","coords","mobileNo","slice","handler","setTimeout","clearTimeout","currentLocation","resolve","warn","timeout","maximumAge","onboardingData","onboardingRequest","sendOnboardingRequest","areFieldsFilled","MobilesinupOtpModal","FaRegUser","placeholder","marginBottom","FaMobileScreenButton","onMouseDown","event","document","activeElement","preventDefault","onSelect","start","selectionStart","end","selectionEnd","setSelectionRange","onPaste","MdVerified","MdEmail","cloneEmail","autocomplete","RiLockPasswordFill","NewTabSignUp","i","selectedUser","find","filter","toLowerCase","includes","paddingLeft","checked","htmlFor","cloen","values","validation","registerUser","height","width","handleClose","reload","Header","closeButton","Title","backfaceVisibility","href","Link","to","setloader1","setShowMobileOtp","setCountryCode","verifyotpValue","setVarifyOtpValue","setUserID","countryCode1","setCountryCode1","setInitialValue","isMobileExit","_res$data","_res$data2","isMobileExits","_res$data3","_res$data3$data","_res$data4","sinupApi","AnimatedWrapper","SignUpMerchantForm","_newValue$mobileNo","newValue","Footer","notIsFixed","SignUpMerchant"],"sourceRoot":""}