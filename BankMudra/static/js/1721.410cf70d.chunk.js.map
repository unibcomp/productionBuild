{"version":3,"file":"static/js/1721.410cf70d.chunk.js","mappings":"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","sources":["pages/admin/userlist/UserlistOtp.js","pages/admin/userlist/SubUserTable.js","pages/admin/userlist/Userlistzsm.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { verifyotprevsertrans, generateOtpForResendReverseTpin } from \"../../../api/login/Login\";\r\nimport { toast } from 'react-toastify';\r\nimport \"./Userlist.css\";\r\nconst OtpVerificationPage = ({ userId, onClose, longitude, latitude, transferAmount ,open, walletShowHeader ,fetchData,resetModalStates}) => {\r\n  const [otp, setOtp] = useState(new Array(6).fill(''));\r\n  const [timeLeft, setTimeLeft] = useState(120);\r\n  const [isTimerEnded, setIsTimerEnded] = useState(false);\r\n  const [resendLoading, setResendLoading] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const inputs = useRef([]);\r\n  const timerRef = useRef(null);\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const startTimer = useCallback(() => {\r\n    if (timerRef.current) clearInterval(timerRef.current);\r\n    \r\n    setTimeLeft(120);\r\n    setIsTimerEnded(false);\r\n\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft((prevTime) => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(timerRef.current);\r\n          setIsTimerEnded(true);\r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const resetTimer = useCallback(() => {\r\n    if (timerRef.current) clearInterval(timerRef.current);\r\n    setTimeLeft(0);\r\n    setIsTimerEnded(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      startTimer();\r\n    } else {\r\n      resetTimer();\r\n    }\r\n    return () => clearInterval(timerRef.current);\r\n  }, [open, startTimer, resetTimer]);\r\n\r\n  const handleClose = useCallback(() => {\r\n    resetTimer();\r\n    setOtp(new Array(6).fill(''));\r\n    setMessage('');\r\n    setError('');\r\n    onClose();\r\n  }, [onClose, resetTimer]);\r\n\r\n  const otpHandleChange = useCallback((index, value) => {\r\n    const newOtp = [...otp];\r\n    newOtp[index] = value.slice(0, 1);\r\n    setOtp(newOtp);\r\n\r\n    if (value && index < 5 && inputs.current[index + 1]) {\r\n      inputs.current[index + 1].focus();\r\n    }\r\n  }, [otp]);\r\n\r\n  const handleKeyDown = useCallback((e, index) => {\r\n    if (e.key === 'Backspace' && !otp[index] && index > 0) {\r\n      // Move focus to the previous input and clear its value\r\n      const newOtp = [...otp];\r\n      newOtp[index - 1] = '';\r\n      setOtp(newOtp);\r\n      inputs.current[index - 1].focus();\r\n    }\r\n  }, [otp]);\r\n\r\n  const handleResendOTP = useCallback(async () => {\r\n    setResendLoading(true);\r\n    setError('');\r\n    setMessage('');\r\n\r\n    try {\r\n      const response = await generateOtpForResendReverseTpin({ token: userId, amount: Number(transferAmount), });\r\n      if (response.status == 200) {\r\n        setMessage('OTP has been resent successfully.');\r\n        startTimer();\r\n        setOtp(new Array(6).fill(''));\r\n      } else {\r\n        setError('Failed to resend OTP.');\r\n      }\r\n    } catch (error) {\r\n      setError('Failed to resend OTP.');\r\n    } finally {\r\n      setResendLoading(false);\r\n    }\r\n  }, [userId, startTimer, transferAmount]);\r\n\r\n  const handleSubmitOTP = useCallback(async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    setError('');\r\n\r\n    try {\r\n      const response = await verifyotprevsertrans({ \r\n        token: userId,\r\n        otp: otp.join(''),\r\n        lat: latitude,\r\n        long: longitude\r\n      });\r\n      if (response?.data?.statusCode == 200) {\r\n        setMessage(response?.data?.message  || 'OTP verified successfully.');\r\n        toast.success(response?.data?.message || 'OTP verified successfully.');\r\n        onClose(); \r\n        if (walletShowHeader) walletShowHeader();\r\n        if (fetchData) fetchData();\r\n      if (resetModalStates) resetModalStates();\r\n\r\n        // Call onClose to close the page/modal\r\n      } else {\r\n        setError(response?.data?.message ||  response?.data|| 'Failed to verify OTP.');\r\n        toast.error(response?.data?.message || response?.data || 'Failed to verify OTP.');\r\n      }\r\n    } catch (error) {\r\n      setError('Failed to verify OTP.');\r\n      toast.error('Failed to verify OTP.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [userId, otp, onClose, latitude, longitude]);\r\n\r\n  return (\r\n    <div className={`modal fade modal-cssclasss mediaqurymodalpop ${open ? 'show d-block' : ''}`} tabIndex=\"-1\" role=\"dialog\">\r\n    <div className=\"modal-dialog\" role=\"document\" style={{ zIndex: 1050 }}>\r\n      <div className=\"modal-content modal-content-otp\">\r\n        <div className=\"modal-header text-center\">\r\n          <h5 className=\"modal-title modaltitle-otp\">OTP Verification</h5>\r\n          <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={handleClose}></button>\r\n        </div>\r\n        <div className=\"modal-body\" style={{\r\n          backgroundColor: '#ffffff',\r\n          transform: 'translateZ(0)',\r\n          backfaceVisibility: 'hidden',\r\n        }}>\r\n          {isTimerEnded ? (\r\n            <>\r\n              <p>Please Enter 6-digit Code Sent To Your Registered Mobile Number!</p>\r\n              <button type=\"button\" className=\"btn btn-resend-otp\" onClick={handleResendOTP}>\r\n                {resendLoading ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : 'Resend OTP'}\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p>Please Enter 6-digit Code Sent To Your Registered Mobile Number!</p>\r\n              <div className=\"verification-timer\">Verification Code: {formatTime(timeLeft)} seconds <span className=\"resend-otp\"\r\n                //  style={{\r\n                //   cursor: isTimerEnded ? 'pointer' : 'default',\r\n                //   color: isTimerEnded ? 'blue' : 'gray',\r\n                //   pointerEvents: isTimerEnded ? 'auto' : 'none',\r\n                // }} \r\n              onClick={handleResendOTP}>Resend OTP</span></div>\r\n              <div className=\"otp-inputs\">\r\n                {otp.map((value, index) => (\r\n                  <input\r\n                    key={index}\r\n                    type=\"password\"\r\n                    maxLength=\"1\"\r\n                    value={value}\r\n                    onChange={(e) => otpHandleChange(index, e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, index)}\r\n                    ref={(input) => (inputs.current[index] = input)}\r\n                    className=\"otp-input\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-submit-otp\"\r\n                onClick={handleSubmitOTP}\r\n                disabled={otp.some(digit => digit === '') || loading}\r\n              >\r\n                {loading ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : 'Submit OTP'}\r\n              </button>\r\n              {message && <div className=\"alert alert-success mt-3\">{message}</div>}\r\n              {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpVerificationPage;","import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Form } from 'react-bootstrap';\r\nimport { FaChevronDown, FaChevronUp, FaEye, FaUsers } from 'react-icons/fa';\r\nimport { Pagination } from 'antd';\r\n\r\nconst SubUserTable = ({ \r\n  users,\r\n  totalCount,\r\n  onUserClick,\r\n  onTransferClick,\r\n  onReverseTransferClick,\r\n  onReportClick,\r\n  onPageChange,\r\n  handleReportClickmainreportasmzsm,\r\n  level = 0,\r\n  initialPage = 1,\r\n  initialPageSize = 10\r\n}) => {\r\n  const [currentPage, setCurrentPage] = useState(initialPage);\r\n  const [pageSize, setPageSize] = useState(initialPageSize);\r\n  const [subUserPages, setSubUserPages] = useState({});\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(initialPage);\r\n    setPageSize(initialPageSize);\r\n  }, [initialPage, initialPageSize]);\r\n\r\n  const handlePageChange = async (page, size) => {\r\n    setCurrentPage(page);\r\n    if (size !== pageSize) {\r\n      setPageSize(size);\r\n    }\r\n    // Call the parent's onPageChange with the updated page and size\r\n    await onPageChange(page, size);\r\n  };\r\n\r\n  const handleSubUserPageChange = async (userId, page, size) => {\r\n    setSubUserPages(prev => ({\r\n      ...prev,\r\n      [userId]: { page, size }\r\n    }));\r\n    // This will be handled by the SubUserRow component\r\n  };\r\n\r\n  if (!users?.length) {\r\n    return (\r\n      <div className=\"text-center py-4\">\r\n        <FaUsers size={24} className=\"mb-2\" />\r\n        <p>No downstream members available</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"border rounded my-2\">\r\n      <div className=\"bg-light p-2 d-flex justify-content-between align-items-center border-bottom\">\r\n        <h6 className=\"mb-0\">Downstream Members (Level {level + 1})</h6>\r\n        {/* <Form.Select \r\n          style={{ width: '150px' }}\r\n          value={pageSize}\r\n          onChange={e => handlePageChange(1, Number(e.target.value))}\r\n        >\r\n          <option value={10}>10 per page</option>\r\n          <option value={20}>20 per page</option>\r\n          <option value={50}>50 per page</option>\r\n          <option value={100}>100 per page</option>\r\n        </Form.Select> */}\r\n      </div>\r\n\r\n      <Table hover className=\"mb-0\">\r\n        <thead className=\"bg-light\">\r\n          <tr>\r\n            <th>S.No</th>\r\n            <th>Refer ID</th>\r\n            <th>Name</th>\r\n            <th>User Type</th>\r\n            <th>Mobile no</th>\r\n            <th>Email Id</th>\r\n            <th>Status</th>\r\n            <th>Downstream</th>\r\n            <th>Actions</th>\r\n            <th>Wallet</th>\r\n            <th>Report</th>\r\n            {/* <th>Wallet Report</th> */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user, index) => (\r\n            <SubUserRow \r\n              key={user._id}\r\n              user={user}\r\n              index={index + ((currentPage - 1) * pageSize)}\r\n              onUserClick={onUserClick}\r\n              onTransferClick={onTransferClick}\r\n              onReverseTransferClick={onReverseTransferClick}\r\n              onReportClick={onReportClick}\r\n              level={level}\r\n              currentPage={subUserPages[user._id]?.page || 1}\r\n              pageSize={subUserPages[user._id]?.size || 10}\r\n              onPageChange={(page, size) => handleSubUserPageChange(user._id, page, size)}\r\n              handleReportClickmainreportasmzsm={handleReportClickmainreportasmzsm}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {totalCount > pageSize && (\r\n        <div className=\"p-3 border-top\">\r\n          <Pagination\r\n            current={currentPage}\r\n            total={totalCount}\r\n            pageSize={pageSize}\r\n            onChange={(page) => handlePageChange(page, pageSize)}\r\n            showSizeChanger={true}\r\n            onShowSizeChange={(current, size) => handlePageChange(1, size)}\r\n            showQuickJumper={true}\r\n            showTotal={(total, range) => `${range[0]}-${range[1]} of ${total} items`}\r\n            className=\"justify-content-end\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SubUserRow = ({\r\n  user,\r\n  index,\r\n  onUserClick,\r\n  onTransferClick,\r\n  onReverseTransferClick,\r\n  onReportClick,\r\n  level,\r\n  currentPage,\r\n  pageSize,\r\n  onPageChange,\r\n  handleReportClickmainreportasmzsm\r\n}) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [subUsers, setSubUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [subUserTotalCount, setSubUserTotalCount] = useState(0);\r\n\r\n  const fetchSubUsers = async (page, size) => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await onUserClick(user._id, page, size);\r\n      if (result?.data) {\r\n        setSubUsers(result.data);\r\n        setSubUserTotalCount(result.totalCount);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching sub-users:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleExpand = async () => {\r\n    if (!isExpanded && !subUsers.length) {\r\n      await fetchSubUsers(currentPage, pageSize);\r\n    }\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  const handleSubUserPageChange = async (page, size) => {\r\n    await fetchSubUsers(page, size);\r\n    onPageChange(page, size);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <tr>\r\n        <td>{index + 1}</td>\r\n        <td>{user?.refer_id}</td>\r\n        <td>{user?.name}</td>\r\n        <td>\r\n          <span className=\"badge bg-primary\">{user?.user_type}</span>\r\n        </td>\r\n        <td>{user?.mobile}</td>\r\n        <td>{user?.email}</td>\r\n        <td>\r\n          <span className={`badge ${user.is_approved ? 'bg-success' : 'bg-warning'}`}>\r\n            {user?.is_approved ? 'Approved' : 'Pending'}\r\n          </span>\r\n        </td>\r\n        <td>\r\n        {user.user_type !== \"Retailer\" && (\r\n    <Button\r\n      variant=\"link\"\r\n      onClick={handleExpand}\r\n      disabled={loading}\r\n      className=\"d-flex align-items-center\"\r\n    >\r\n      {loading ? 'Loading...' : 'View'}\r\n      {isExpanded ? <FaChevronUp className=\"ms-1\" /> : <FaChevronDown className=\"ms-1\" />}\r\n    </Button>\r\n  )}\r\n        </td>\r\n        <td>\r\n          <div className=\"d-flex gap-2\">\r\n            <Button \r\n              variant=\"outline-primary\" \r\n              size=\"sm\"\r\n              onClick={() => onTransferClick(user)}\r\n            >\r\n              Transfer\r\n            </Button>\r\n            <Button \r\n              variant=\"outline-secondary\" \r\n              size=\"sm\"\r\n              onClick={() => onReverseTransferClick(user)}\r\n            >\r\n              Reverse\r\n            </Button>\r\n          </div>\r\n        </td>\r\n        <td>₹{user?.main_wallet || 0}</td>\r\n        <td>\r\n          <Button variant=\"link\" onClick={() => onReportClick(user._id)}>\r\n            <FaEye />\r\n          </Button>\r\n        </td>\r\n        <td>\r\n          <Button variant=\"warning\" onClick={() => handleReportClickmainreportasmzsm(user._id)}>\r\n            Wallet Report\r\n          </Button>\r\n        </td> \r\n      </tr>\r\n      \r\n      {isExpanded && (\r\n        <tr>\r\n          <td colSpan=\"11\" className=\"p-0\">\r\n            <div \r\n              className=\"ps-4 border-start border-primary\" \r\n              style={{ marginLeft: `${level * 20}px` }}\r\n            >\r\n              {loading ? (\r\n                <div className=\"text-center py-3\">Loading...</div>\r\n              ) : subUsers.length > 0 ? (\r\n                <SubUserTable\r\n                  users={subUsers}\r\n                  totalCount={subUserTotalCount}\r\n                  onUserClick={onUserClick}\r\n                  onTransferClick={onTransferClick}\r\n                  onReverseTransferClick={onReverseTransferClick}\r\n                  onReportClick={onReportClick}\r\n                  onPageChange={handleSubUserPageChange}\r\n                  level={level + 1}\r\n                  initialPage={currentPage}\r\n                  initialPageSize={pageSize}\r\n                  handleReportClickmainreportasmzsm={handleReportClickmainreportasmzsm}\r\n                />\r\n              ) : (\r\n                <div className=\"text-center py-3\">No downstream members available</div>\r\n              )}\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport { SubUserTable, SubUserRow };","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Table, Button, Card, Form, Row, Col, Modal } from 'react-bootstrap';\r\nimport { FaEye, FaChevronDown, FaChevronUp, FaUsers } from 'react-icons/fa';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Popconfirm } from 'antd';\r\nimport { Pagination } from \"antd\"\r\nimport OtpVerificationPage from './UserlistOtp';\r\n\r\n// Import necessary API functions\r\nimport { getDownstreamList, fundtransferToRefer, confirmReverseTransfer, Getprofile, getDownstreamListReport, WalletsShow } from '../../../api/login/Login';\r\nimport Loader from '../../../common/loader/Loader';\r\nimport \"./Userlistzsm2.css\"\r\nimport { SubUserTable } from './SubUserTable';\r\n\r\n\r\nfunction Userlistzsm({ walletShowHeader, position }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [totalCount, setTotalCount] = useState(0);\r\n    const [page, setPage] = useState(0);\r\n    const [count, setCount] = useState(10);\r\n    const [showTransferModal, setShowTransferModal] = useState(false);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [expandedUserId, setExpandedUserId] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const navigate = useNavigate();\r\n    const [transferAmount, setTransferAmount] = useState('');\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [walletData, setWalletData] = useState({});\r\n\r\n    const [filterData, setFilterData] = useState({\r\n        userId: '',\r\n        name: '',\r\n        email: '',\r\n        mobile: '',\r\n        is_approved: '',\r\n        refer_id: '',\r\n        userType: '' // New filter for user type\r\n    });\r\n\r\n    const [isTransferValid, setIsTransferValid] = useState(false);\r\n    const storedUserType = localStorage.getItem('userType');\r\n    const storedUserTypeId = localStorage.getItem('userTypeId');\r\n    const [showTpinModal, setShowTpinModal] = useState(false);\r\n    const [showReverseTpinModal, setShowReverseTpinModal] = useState(false);\r\n    const [tpin, setTpin] = useState('');\r\n    const [tpinError, setTpinError] = useState('');\r\n    const [showReverseTransferModal, setShowReverseTransferModal] = useState(false);\r\n    const [reverseTransferAmount, setReverseTransferAmount] = useState('');\r\n    const [showOtpModal, setShowOtpModal] = useState(false);\r\n    const [latitude, setLatitude] = useState(null);\r\n    const [longitude, setLongitude] = useState(null);\r\n    const [locationError, setLocationError] = useState(null);\r\n    const [maskedTpin, setMaskedTpin] = useState('');\r\n    const [walletlockdata, setLockWAletData] = useState({});\r\n    const [isPopconfirmOpen, setIsPopconfirmOpen] = useState(false);\r\n    const [storetoken, setStoreToken] = useState();\r\n    const [isGettingLocation, setIsGettingLocation] = useState(false);\r\n    const tableRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            if (tableRef.current) {\r\n                const { top } = tableRef.current.getBoundingClientRect();\r\n                if (top <= 0) {\r\n                    tableRef.current.classList.add('sticky-header');\r\n                } else {\r\n                    tableRef.current.classList.remove('sticky-header');\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, []);\r\n    useEffect(() => {\r\n        fetchData();\r\n        walletShow();\r\n        getDataProfile();\r\n    }, [currentPage, count]);\r\n\r\n    const fetchData = async (page = currentPage, size = pageSize) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await getDownstreamList(page - 1, size, '', filterData);\r\n            setData(response?.data?.data || []);\r\n            setTotalCount(response?.data?.totalCount || 0);\r\n            setCurrentPage(page);\r\n            setPageSize(size);\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n            toast.error('Failed to fetch users');\r\n            setData([]);\r\n            setTotalCount(0);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        walletShow();\r\n        getDataProfile();\r\n    }, [currentPage, pageSize]);\r\n\r\n    const handlePageChange = (page, pageSize) => {\r\n        setCurrentPage(page);\r\n        setPageSize(pageSize);\r\n        fetchData(page, pageSize);\r\n    };\r\n\r\n    const handleTransferClick = async (user) => {\r\n        setSelectedUser(user);\r\n        \r\n        setShowTransferModal(true);\r\n    };\r\n\r\n    //   const handleUserClick = async (userId, page = 1, pageSize = 10) => {\r\n    //     setLoading(true);\r\n    //     try {\r\n    //       const response = await getDownstreamList(page - 1, pageSize, userId);\r\n    //       if (response.data.statusCode == \"200\") {\r\n    //         return {\r\n    //           data: response.data.data || [],\r\n    //           totalCount: response.data.totalCount || 0\r\n    //         };\r\n    //       } else {\r\n    //         toast.error(response.data.message || 'Failed to fetch sub-users');\r\n    //       }\r\n    //     } catch (error) {\r\n    //       console.error('Error fetching sub-users:', error);\r\n    //       toast.error('Failed to fetch sub-users. Please try again.');\r\n    //     } finally {\r\n    //       setLoading(false);\r\n    //     }\r\n    //     return { data: [], totalCount: 0 };\r\n    //   };\r\n    const handleUserClick = async (userId, page = 1, pageSize = 10) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await getDownstreamList(page - 1, pageSize, userId);\r\n            if (response.data.statusCode == \"200\") {\r\n                const updatedData = data.map(user => {\r\n                    if (user._id === userId) {\r\n                        return {\r\n                            ...user,\r\n                            subUsers: response.data.data || [],\r\n                            subUsersTotalCount: response.data.totalCount || 0\r\n                        };\r\n                    }\r\n                    return user;\r\n                });\r\n                setData(updatedData);\r\n                return {\r\n                    data: response.data.data || [],\r\n                    totalCount: response.data.totalCount || 0\r\n                };\r\n            } else {\r\n                toast.error(response.data.message || 'Failed to fetch sub-users');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching sub-users:', error);\r\n            toast.error('Failed to fetch sub-users. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n        return { data: [], totalCount: 0 };\r\n    };\r\n\r\n\r\n\r\n    const handleFilterChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFilterData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleFilterSubmit = (e) => {\r\n        e.preventDefault();\r\n        setPage(0);\r\n        fetchData();\r\n    };\r\n\r\n    const resetFilter = () => {\r\n        setFilterData({\r\n            userId: '',\r\n            name: '',\r\n            email: '',\r\n            mobile: '',\r\n            is_approved: '',\r\n            refer_id: '',\r\n            userType: ''\r\n        });\r\n        setCurrentPage(1);\r\n        fetchData();\r\n    };\r\n\r\n    const walletShow = async () => {\r\n        try {\r\n            const res = await WalletsShow();\r\n            setWalletData(res?.data?.data);\r\n        } catch (error) {\r\n            console.error('Error fetching wallet data:', error);\r\n        }\r\n    };\r\n\r\n    const getDataProfile = async () => {\r\n        try {\r\n            const res = await Getprofile();\r\n            setLockWAletData(res?.data?.data);\r\n        } catch (error) {\r\n            console.error('Error fetching profile data:', error);\r\n        }\r\n    };\r\n\r\n    const getCurrentLocation = () => {\r\n        return new Promise((resolve, reject) => {\r\n            if (latitude && longitude) {\r\n                resolve(true);\r\n            } else if (position.latitude && position.longitude) {\r\n                setLatitude(position.latitude);\r\n                setLongitude(position.longitude);\r\n                setLocationError(null);\r\n                resolve(true);\r\n            } else if (\"geolocation\" in navigator) {\r\n                setIsGettingLocation(true);\r\n                navigator.geolocation.getCurrentPosition(\r\n                    (position) => {\r\n                        setLatitude(position.coords.latitude);\r\n                        setLongitude(position.coords.longitude);\r\n                        setLocationError(null);\r\n                        setIsGettingLocation(false);\r\n                        resolve(true);\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"Geolocation error:\", error);\r\n                        setLocationError(\"Unable to retrieve your location. Please ensure location services are enabled.\");\r\n                        setIsGettingLocation(false);\r\n                        reject(error);\r\n                    },\r\n                    {\r\n                        enableHighAccuracy: true,\r\n                        timeout: 10000,\r\n                        maximumAge: 0\r\n                    }\r\n                );\r\n            } else {\r\n                setLocationError(\"Geolocation is not supported by your browser\");\r\n                reject(new Error(\"Geolocation not supported\"));\r\n            }\r\n        });\r\n    }\r\n\r\n    // const getCurrentLocation = () => {\r\n    //     return new Promise((resolve, reject) => {\r\n    //         if (latitude && longitude) {\r\n    //             resolve(true);\r\n    //         } else if (position.latitude && position.longitude) {\r\n    //             setLatitude(position.latitude);\r\n    //             setLongitude(position.longitude);\r\n    //             setLocationError(null);\r\n    //             resolve(true);\r\n    //         } else if (\"geolocation\" in navigator) {\r\n    //             setIsGettingLocation(true);\r\n    //             navigator.geolocation.getCurrentPosition(\r\n    //                 (position) => {\r\n    //                     setLatitude(position.coords.latitude);\r\n    //                     setLongitude(position.coords.longitude);\r\n    //                     setLocationError(null);\r\n    //                     setIsGettingLocation(false);\r\n    //                     resolve(true);\r\n    //                 },\r\n    //                 (error) => {\r\n    //                     console.error(\"Geolocation error:\", error);\r\n    //                     setLocationError(\"Location information is not available. Please try again.\");\r\n    //                     toast.error(\"Location information is not available. Please try again.\");\r\n    //                     setIsGettingLocation(false);\r\n    //                     reject(error);\r\n    //                 },\r\n    //                 {\r\n    //                     enableHighAccuracy: true,\r\n    //                     timeout: 10000,\r\n    //                     maximumAge: 0\r\n    //                 }\r\n    //             );\r\n    //         } else {\r\n    //             setLocationError(\"Location information is not available. Please try again.\");\r\n    //             toast.error(\"Location information is not available. Please try again.\");\r\n    //             reject(new Error(\"Geolocation not supported\"));\r\n    //         }\r\n    //     });\r\n    // }\r\n    const handleTransferAmountChange = (e) => {\r\n        const amount = e.target.value;\r\n        setTransferAmount(amount);\r\n        setIsTransferValid(Number(amount) >= 100 && Number(amount) <= Number(walletData?.main_wallet - walletlockdata?.locking_amt));\r\n    };\r\n\r\n    const handleReverseTransferClick = (user) => {\r\n        setSelectedUser(user);\r\n        // await getCurrentLocation();\r\n        setShowReverseTransferModal(true);\r\n    };\r\n\r\n    const handleReverseTransferAmountChange = (e) => {\r\n        const amount = e.target.value;\r\n        setReverseTransferAmount(amount);\r\n    };\r\n\r\n    const handleTransferSubmit = async () => {\r\n        try {\r\n            await getCurrentLocation();\r\n\r\n            if (locationError) {\r\n                toast.error(locationError);\r\n                toast.error(\"Location information is not available. Please try again.\");\r\n                return;\r\n            }\r\n\r\n          \r\n\r\n            const response = await fundtransferToRefer({\r\n                transferTo: selectedUser._id,\r\n                amount: Number(transferAmount),\r\n                tpin: tpin,\r\n                trans_type: \"transfer\",\r\n                lat: latitude,\r\n                long: longitude\r\n            });\r\n\r\n            if (response.data.statusCode == \"200\") {\r\n                toast.success('Money transferred successfully');\r\n                setShowTpinModal(false);\r\n                resetModalStates();\r\n           \r\n                walletShow();\r\n                if (walletShowHeader) walletShowHeader();\r\n                if (fetchData) fetchData();\r\n            } else if (response.data.statusCode == \"403\") {\r\n                setTpinError(response?.data?.message);\r\n                toast.error(response?.data?.message);\r\n            } else {\r\n                toast.error(response.data.message || 'Transfer failed. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error transferring money:', error);\r\n            if (error.name === 'GeolocationPositionError') {\r\n                toast.error(\"Unable to access location. Please enable location services and try again.\");\r\n            } else {\r\n                toast.error('Transfer failed. Please try again.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleReverseTransferSubmit = async () => {\r\n        try {\r\n            await getCurrentLocation();\r\n\r\n            if (locationError) {\r\n                toast.error(locationError);\r\n                return;\r\n            }\r\n\r\n            const response = await fundtransferToRefer({\r\n                transferTo: selectedUser._id,\r\n                amount: Number(reverseTransferAmount),\r\n                tpin: tpin,\r\n                trans_type: \"refund\",\r\n                lat: latitude,\r\n                long: longitude\r\n            });\r\n\r\n            if (response.data.statusCode == \"200\") {\r\n                const token = response.data.data.token;\r\n                setStoreToken(token);\r\n                setShowReverseTpinModal(false);\r\n                setShowOtpModal(true);\r\n               \r\n            } else if (response.data.statusCode == \"403\") {\r\n                setTpinError(response?.data?.message);\r\n                toast.error(response?.data?.message);\r\n            } else {\r\n                toast.error(response.data.message || 'Reverse transfer failed. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error reverse transferring money:', error);\r\n            toast.error('Reverse transfer failed. Please try again.');\r\n        }\r\n    };\r\n\r\n    // const resetModalStates = () => {\r\n    //     setTransferAmount('');\r\n    //     setReverseTransferAmount('');\r\n    //     setTpin('');\r\n    //     setMaskedTpin('');\r\n    //     setTpinError('');\r\n    //     setIsTransferValid(false);\r\n    //     setIsPopconfirmOpen(false);\r\n    // };\r\n\r\n    const handleReportClick = (userId) => {\r\n        navigate(`/user-report/${userId}`);\r\n    };\r\n\r\n    const handleReportClickmainreportasmzsm = (userId) => {\r\n        navigate(`/main-report/${userId}`);\r\n    };\r\n\r\n    const renderUserRow = (user, index, level = 0, parentIndex = null) => {\r\n        const indent = level * 20; // 20px indent for each level\r\n        const hasSubUsers = user.subUsers && user.subUsers.length > 0;\r\n        const isExpanded = expandedUserId === user._id;\r\n\r\n        return (\r\n            <React.Fragment key={user._id}>\r\n                <tr className={level > 0 ? 'nested-row' : ''}>\r\n                    <td style={{ paddingLeft: `${indent}px` }}>\r\n                        {index + 1 + (page * count)}\r\n                    </td>\r\n                    <td>{user.refer_id}</td>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.userType}</td>\r\n                    <td className={user.is_approved ? 'approvedstatusindownstrip' : 'pendingstatusindownstrip'}>\r\n                        {user.is_approved ? 'Approved' : 'Pending'}\r\n                    </td>\r\n                    <td>\r\n                        <Button\r\n                            variant=\"link\"\r\n                            onClick={() => handleUserClick(user._id, parentIndex)}\r\n                            className=\"d-flex align-items-center\"\r\n                        >\r\n                            View Downstream\r\n                            {isExpanded ?\r\n                                <FaChevronUp className=\"ms-1\" /> :\r\n                                <FaChevronDown className=\"ms-1\" />\r\n                            }\r\n                        </Button>\r\n                    </td>\r\n                    <td>\r\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={() => handleTransferClick(user)}>\r\n                            Transfer Money\r\n                        </Button>\r\n                    </td>\r\n                    <td>\r\n                        <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => handleReverseTransferClick(user)}>\r\n                            Reverse Transfer\r\n                        </Button>\r\n                    </td>\r\n                    <td>{user?.main_wallet || 0}</td>\r\n                    <td>\r\n                        <Button variant=\"link\" onClick={() => handleReportClick(user._id)}>\r\n                            <FaEye className=\"text-primary\" />\r\n                        </Button>\r\n                    </td>\r\n                    {/* <td>\r\n                        <Button variant=\"link\" onClick={() => handleReportClickmainreportasmzsm(user._id)}>\r\n                            <FaEye className=\"text-primary\" />\r\n                        </Button>\r\n                    </td> */}\r\n                </tr>\r\n                {isExpanded && hasSubUsers && (\r\n                    <tr>\r\n                        <td colSpan=\"10\" className=\"p-0\">\r\n                            <Table className=\"mb-0\">\r\n                                <tbody>\r\n                                    {user.subUsers.map((subUser, subIndex) =>\r\n                                        renderUserRow(subUser, subIndex, level + 1, index)\r\n                                    )}\r\n                                </tbody>\r\n                            </Table>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n                {isExpanded && (!hasSubUsers || user.subUsers.length === 0) && (\r\n                    <tr>\r\n                        <td colSpan=\"10\">\r\n                            <div className=\"text-center py-3\">No downstream members available</div>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const resetModalStates = () => {\r\n        setShowTransferModal(false);\r\n        setShowTpinModal(false);\r\n        setShowReverseTransferModal(false);\r\n        setShowReverseTpinModal(false);\r\n        setShowOtpModal(false);\r\n        setTransferAmount('');\r\n        setReverseTransferAmount('');\r\n        setTpin('');\r\n        setMaskedTpin('');\r\n        setTpinError('');\r\n        setIsTransferValid(false);\r\n        setIsPopconfirmOpen(false);\r\n        setSelectedUser(null);\r\n    };\r\n    return (\r\n        <>\r\n            {loading && <Loader />}\r\n            <div className=\"container-fluid\">\r\n                <div className='PageHeading'>\r\n\r\n                <h1 className=\"h3 mb-2 text-gray-800\">Downstream Users</h1>\r\n                </div>\r\n\r\n                {/* <Card className=\"shadow mb-4\">\r\n                    <Card.Header className=\"py-3 bg-primary text-white\">\r\n                        <h6 className=\"m-0 font-weight-bold\">Filter</h6>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form onSubmit={handleFilterSubmit}>\r\n                            <Row>\r\n                                <Col md={3}>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Refer ID</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"refer_id\"\r\n                                            value={filterData.refer_id}\r\n                                            onChange={handleFilterChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            value={filterData.name}\r\n                                            onChange={handleFilterChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            value={filterData.email}\r\n                                            onChange={handleFilterChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Mobile</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"mobile\"\r\n                                            value={filterData.mobile}\r\n                                            onChange={handleFilterChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={3}>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>User Type</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            name=\"userType\"\r\n                                            value={filterData.userType}\r\n                                            onChange={handleFilterChange}\r\n                                        >\r\n                                            <option value=\"\">All</option>\r\n                                            {storedUserType === \"zsm\" && <option value=\"asm\">ASM</option>}\r\n                                            <option value=\"Super Distributor\">Super Distributor</option>\r\n                                            <option value=\"Distributor\">Distributor</option>\r\n                                            <option value=\"Retailer\">Retailer</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col md={9} className=\"d-flex align-items-end justify-content-end\">\r\n                                    <Button variant=\"primary\" type=\"submit\" className=\"me-2\">\r\n                                        Apply Filter\r\n                                    </Button>\r\n                                    <Button variant=\"warning\" onClick={resetFilter}>\r\n                                        Reset\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card> */}\r\n\r\n                {/* User List Table */}\r\n                <Card className=\"shadow mb-4 mt-4\">\r\n                    <Card.Header className=\"py-3 d-flex justify-content-between align-items-center \">\r\n                        <h6 className=\"m-0 font-weight-bold\">User List</h6>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <div className=\"table-responsive\">\r\n                            <SubUserTable\r\n                                users={data}\r\n                                totalCount={totalCount}\r\n                                onUserClick={handleUserClick}\r\n                                onTransferClick={handleTransferClick}\r\n                                onReverseTransferClick={handleReverseTransferClick}\r\n                                onReportClick={handleReportClick}\r\n                                onPageChange={handlePageChange}\r\n                                initialPage={currentPage}\r\n                                initialPageSize={pageSize}\r\n                                handleReportClickmainreportasmzsm={handleReportClickmainreportasmzsm}\r\n                            />\r\n                        </div>\r\n                        {totalCount > 0 && (\r\n                            <Pagination\r\n                                current={currentPage}\r\n                                total={totalCount}\r\n                                pageSize={count}\r\n                                onChange={handlePageChange}\r\n                                showSizeChanger={false}\r\n                                className=\"mt-3 justify-content-end\"\r\n                            />\r\n                        )}\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n\r\n            {/* Transfer Modal */}\r\n            <Modal show={showTransferModal} onHide={() => { setShowTransferModal(false); resetModalStates(); }}>\r\n                <Modal.Header closeButton className='d-flex justify-content-between'>\r\n                    <div className='modal-title h5'>Transfer Money</div>\r\n                    <span id=\"baldiv\" style={{ marginLeft: '20%' }}>\r\n                    Available Balance: {Math.max(0, (walletData?.main_wallet || 0) - (walletlockdata?.locking_amt || 0))}\r\n                    </span>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Refer ID</Form.Label>\r\n                            <Form.Control type=\"text\" value={selectedUser?.refer_id || ''} readOnly />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" value={selectedUser?.name || ''} readOnly />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Mobile</Form.Label>\r\n                            <Form.Control type=\"text\" value={selectedUser?.mobile || ''} readOnly />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Amount</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Enter amount (minimum 100)\"\r\n                                required\r\n                                value={transferAmount}\r\n                                onChange={handleTransferAmountChange}\r\n                            />\r\n                            {!isTransferValid && transferAmount !== '' && (\r\n                                <Form.Text className=\"text-danger\">\r\n                                    {Number(transferAmount) < 100\r\n                                        ? 'Amount must be at least 100 rupees'\r\n                                        : 'Insufficient balance'}\r\n                                </Form.Text>\r\n                            )}\r\n                        </Form.Group>\r\n                        <div className='text-center'>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                onClick={() => {\r\n                                    if (Number(transferAmount) < 100) {\r\n                                        toast.error('Amount must be at least 100 rupees');\r\n                                    } else {\r\n                                        setShowTransferModal(false);\r\n                                        setShowTpinModal(true);\r\n                                    }\r\n                                }}\r\n                                disabled={!isTransferValid}\r\n                            >\r\n                                Transfer\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* TPIN Modal */}\r\n            <Modal show={showTpinModal} onHide={() => { setShowTpinModal(false); resetModalStates(); }}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Enter TPIN</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>TPIN</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Enter your TPIN\"\r\n                                value={tpin}\r\n                                onChange={(e) => {\r\n                                    const newValue = e.target.value.replace(/[^0-9]/g, '').slice(0, 4);\r\n                                    setTpin(newValue);\r\n                                    setMaskedTpin('*'.repeat(newValue.length));\r\n                                }}\r\n                                maxLength={4}\r\n                            />\r\n                            {locationError && <Form.Text className=\"text-danger\">{locationError}</Form.Text>}\r\n                            {tpinError && <Form.Text className=\"text-danger\">{tpinError}</Form.Text>}\r\n                        </Form.Group>\r\n                        <div className='text-center'>\r\n                            <Popconfirm\r\n                                title=\"Are you sure you want to transfer this money?\"\r\n                                onConfirm={handleTransferSubmit}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                                onCancel={() => setIsPopconfirmOpen(false)}\r\n                                open={isPopconfirmOpen}\r\n                                okButtonProps={{ disabled: tpin.length !== 4 || locationError }}\r\n                            >\r\n                                <Button onClick={() => setIsPopconfirmOpen(true)} variant=\"primary\" disabled={tpin.length !== 4 || locationError}>\r\n                                    Submit\r\n                                </Button>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* Reverse Transfer Modal */}\r\n            <Modal show={showReverseTransferModal} onHide={() =>{ setShowReverseTransferModal(false) ; resetModalStates(); }  }>\r\n                <Modal.Header closeButton className='d-flex justify-content-between'>\r\n                    <div className='modal-title h5'>Reverse Transfer</div>\r\n                    <span id=\"baldiv\" style={{ marginLeft: '20%' }}>\r\n                       Available Balance: {selectedUser?.main_wallet || 0}\r\n                    </span>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Refer ID</Form.Label>\r\n                            <Form.Control type=\"text\" value={selectedUser?.refer_id || ''} readOnly />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" value={selectedUser?.name || ''} readOnly />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Mobile</Form.Label>\r\n                            <Form.Control type=\"text\" value={selectedUser?.mobile || ''} readOnly />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Amount</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Enter amount (minimum 100)\"\r\n                                required\r\n                                value={reverseTransferAmount}\r\n                                onChange={handleReverseTransferAmountChange}\r\n                            />\r\n                            {Number(reverseTransferAmount) > Number(selectedUser?.main_wallet) && (\r\n                                <Form.Text className=\"text-danger\">\r\n                                    Insufficient balance\r\n                                </Form.Text>\r\n                            )}\r\n                            {Number(reverseTransferAmount) < 100 && reverseTransferAmount !== '' && (\r\n                                <Form.Text className=\"text-danger\">\r\n                                    Amount must be at least 100 rupees\r\n                                </Form.Text>\r\n                            )}\r\n                        </Form.Group>\r\n                        <div className='text-center'>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                onClick={() => {\r\n                                    setShowReverseTransferModal(false);\r\n                                    setShowReverseTpinModal(true);\r\n                                }}\r\n                                disabled={Number(reverseTransferAmount) > Number(selectedUser?.main_wallet) || Number(reverseTransferAmount) < 100}\r\n                            >\r\n                                Reverse Transfer\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* Reverse TPIN Modal */}\r\n            <Modal show={showReverseTpinModal} onHide={() => {setShowReverseTpinModal(false);  resetModalStates();   }}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Enter TPIN for Reverse Transfer</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>TPIN</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Enter your TPIN\"\r\n                                value={tpin}\r\n                                onChange={(e) => {\r\n                                    const newValue = e.target.value.replace(/[^0-9]/g, '').slice(0, 4);\r\n                                    setTpin(newValue);\r\n                                    setMaskedTpin('*'.repeat(newValue.length));\r\n                                }}\r\n                                maxLength={4}\r\n                            />\r\n                            {locationError && <Form.Text className=\"text-danger\">{locationError}</Form.Text>}\r\n                            {tpinError && <Form.Text className=\"text-danger\">{tpinError}</Form.Text>}\r\n                        </Form.Group>\r\n                        <div className='text-center'>\r\n                            <Popconfirm\r\n                                title=\"Are you sure you want to reverse transfer this money?\"\r\n                                onConfirm={handleReverseTransferSubmit}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                                onCancel={() => setIsPopconfirmOpen(false)}\r\n                                open={isPopconfirmOpen}\r\n                                okButtonProps={{ disabled: tpin.length !== 4 || locationError }}\r\n                            >\r\n                                <Button onClick={() => setIsPopconfirmOpen(true)} variant=\"primary\" disabled={tpin.length !== 4 || locationError}>\r\n                                    Submit\r\n                                </Button>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* OTP Verification Modal */}\r\n            <OtpVerificationPage\r\n                open={showOtpModal}\r\n                userId={storetoken}\r\n                onClose={() => setShowOtpModal(false) }\r\n                longitude={longitude}\r\n                latitude={latitude}\r\n                transferAmount={reverseTransferAmount}\r\n                walletShowHeader={walletShowHeader}\r\n                fetchData={ fetchData}\r\n                resetModalStates={resetModalStates}\r\n            />\r\n\r\n          \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Userlistzsm;"],"names":["_ref","userId","onClose","longitude","latitude","transferAmount","open","walletShowHeader","fetchData","resetModalStates","otp","setOtp","useState","Array","fill","timeLeft","setTimeLeft","isTimerEnded","setIsTimerEnded","resendLoading","setResendLoading","loading","setLoading","message","setMessage","error","setError","inputs","useRef","timerRef","startTimer","useCallback","current","clearInterval","setInterval","prevTime","resetTimer","useEffect","handleClose","otpHandleChange","index","value","newOtp","slice","focus","handleKeyDown","e","key","handleResendOTP","async","generateOtpForResendReverseTpin","token","amount","Number","status","handleSubmitOTP","_response$data","response","verifyotprevsertrans","join","lat","long","_response$data2","_response$data3","_response$data4","_response$data5","data","statusCode","toast","success","_jsx","className","concat","tabIndex","role","children","style","zIndex","_jsxs","type","onClick","backgroundColor","transform","backfaceVisibility","_Fragment","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","formatTime","map","maxLength","onChange","target","onKeyDown","ref","input","disabled","some","digit","SubUserTable","users","totalCount","onUserClick","onTransferClick","onReverseTransferClick","onReportClick","onPageChange","handleReportClickmainreportasmzsm","level","initialPage","initialPageSize","currentPage","setCurrentPage","pageSize","setPageSize","subUserPages","setSubUserPages","handlePageChange","page","size","length","Table","hover","user","_subUserPages$user$_i","_subUserPages$user$_i2","SubUserRow","_id","prev","handleSubUserPageChange","Pagination","total","showSizeChanger","onShowSizeChange","showQuickJumper","showTotal","range","FaUsers","_ref2","isExpanded","setIsExpanded","subUsers","setSubUsers","subUserTotalCount","setSubUserTotalCount","fetchSubUsers","result","console","React","refer_id","name","user_type","mobile","email","is_approved","Button","variant","FaChevronUp","FaChevronDown","main_wallet","FaEye","colSpan","marginLeft","position","setData","setTotalCount","setPage","count","setCount","showTransferModal","setShowTransferModal","selectedUser","setSelectedUser","expandedUserId","setExpandedUserId","navigate","useNavigate","setTransferAmount","walletData","setWalletData","filterData","setFilterData","userType","isTransferValid","setIsTransferValid","showTpinModal","setShowTpinModal","localStorage","getItem","showReverseTpinModal","setShowReverseTpinModal","tpin","setTpin","tpinError","setTpinError","showReverseTransferModal","setShowReverseTransferModal","reverseTransferAmount","setReverseTransferAmount","showOtpModal","setShowOtpModal","setLatitude","setLongitude","locationError","setLocationError","maskedTpin","setMaskedTpin","walletlockdata","setLockWAletData","isPopconfirmOpen","setIsPopconfirmOpen","storetoken","setStoreToken","isGettingLocation","setIsGettingLocation","tableRef","handleScroll","top","getBoundingClientRect","classList","add","remove","window","addEventListener","removeEventListener","walletShow","getDataProfile","arguments","undefined","getDownstreamList","handleTransferClick","handleUserClick","updatedData","subUsersTotalCount","_res$data","res","WalletsShow","_res$data2","Getprofile","getCurrentLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","enableHighAccuracy","timeout","maximumAge","Error","handleReverseTransferClick","handleReportClick","Loader","Card","Header","Body","Modal","show","onHide","closeButton","id","max","locking_amt","Form","Group","Label","Control","readOnly","placeholder","required","Text","Title","newValue","replace","repeat","Popconfirm","title","onConfirm","fundtransferToRefer","transferTo","trans_type","okText","cancelText","onCancel","okButtonProps","_response$data6","OtpVerificationPage"],"sourceRoot":""}