{"version":3,"file":"static/js/7254.b523fece.chunk.js","mappings":"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","sources":["components/compeleteRegister/ToastShare.jsx","pages/admin/cashDiposit/aepsDipositPurchage/AepsDipositPurchage.js","components/admin/cashDiposit/CashDeposit.js","pages/admin/cashDiposit/casDepositTab/CasDepositTab.js","pages/admin/cashDiposit/index.js"],"sourcesContent":["import { toast } from \"react-toastify\";\r\n\r\n  export const toastSuccessMessage = (str) => {\r\n    toast.success(`${str}`, {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n    });\r\n  };\r\n  // Function to show error toast message\r\n export const toastErrorMessage = (str) => {\r\n    toast.error(`${str}`, {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n    });\r\n  };","\r\n\r\nfunction AepsDipositPurchge({ activeMessage, buyMessage, head }) {\r\n    return (\r\n        <>\r\n            <div className=\"PageHeading\"><h1>{head}</h1></div>\r\n            <div className=\"ContentArea\"><div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    {/* <span>Search</span> */}\r\n                    {activeMessage && <p className=\"alert alert-2 py-1 px-2 d-inline-block\"><b>Note :</b> <strong>{activeMessage}</strong> </p>}\r\n                    {buyMessage && <p className=\"alert alert-2 py-1 px-2 d-inline-block\"><b>Note :</b> <strong>{buyMessage}</strong> </p>}\r\n                </div>\r\n            </div >\r\n            </div >\r\n        </>\r\n    )\r\n}\r\nexport default AepsDipositPurchge","import { useEffect, useState } from \"react\";\r\nimport Loader from \"../../../common/loader/Loader\"\r\nimport Select from \"react-select\";\r\nimport { aepsBankList, bankListApi, cashDeposite, cassDepositApi } from \"../../../api/login/Login\";\r\nimport { MdCurrencyRupee } from \"react-icons/md\";\r\nimport { capturefingerprint } from \"../../../common/fingurePrintJs/FingurePrint\";\r\nimport {  toast } from \"react-toastify\";\r\nimport { toastSuccessMessage } from \"../../compeleteRegister/ToastShare\";\r\nimport AepsModalSucess from \"../../../common/aepsModleSucess/AepsModleSucess\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CashDeposit({apiAepsType,walletShowHeader }) {\r\n    console.log(\"apiAepsType\",apiAepsType)\r\n    const [loading, setLoading] = useState(false);\r\n    const [bankData, setBankData] = useState(null)\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [selected, setSelected] = useState(null);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [dataModal, setDataModal] = useState(null)\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n     \r\n    const navigate = useNavigate();\r\n\r\n    \r\n    const [Capturediasable, setCapturediasable] = useState(true);\r\n    const [isAmountValid, setIsAmountValid] = useState(false);\r\n    const [diabaleCustomerBtn, setdiabaleCustomerBtn] = useState(true)\r\n\r\n    const [position, setPosition] = useState({ latitude: null, longitude: null });\r\n    // console.log(position);\r\n\r\n    const [dataCapture, setDataCapture] = useState()\r\n\r\n    const [errors, setErrors] = useState({\r\n        mobilenumber: '',\r\n        adhaarnumber: '',\r\n        amount: ''\r\n    });\r\n\r\n    const [initialValue, setInitialValue] = useState({\r\n        accessmodetype: 'site',\r\n        latitude: '',\r\n        longitude: '',\r\n        mobilenumber: '',\r\n        adhaarnumber: '',\r\n        nationalbankidentification: '',\r\n        requestremarks: 'Aeps Balance Enquiry',\r\n        user_id: '',\r\n        is_iris: 'NO',\r\n        data: '',\r\n        amount: ''\r\n    })\r\n\r\n    const validateAmount = (amount) => {\r\n        // Convert to number if it's not already\r\n        const numAmount = typeof amount === 'string' ? parseInt(amount) : amount;\r\n        \r\n        // Check if amount is a number\r\n        if (isNaN(numAmount)) {\r\n            return {\r\n                isValid: false,\r\n                error: 'Please enter a valid number'\r\n            };\r\n        }\r\n\r\n        // Check minimum and maximum amount\r\n        if (numAmount < 100) {\r\n            return {\r\n                isValid: false,\r\n                error: 'Minimum amount is ₹100'\r\n            };\r\n        }\r\n\r\n        if (numAmount > 10000) {\r\n            return {\r\n                isValid: false,\r\n                error: 'Maximum amount is ₹10,000'\r\n            };\r\n        }\r\n\r\n        // Check if amount is a multiple of 50\r\n        if (numAmount % 50 !== 0) {\r\n            return {\r\n                isValid: false,\r\n                error: 'Amount must be a multiple of ₹50'\r\n            };\r\n        }\r\n\r\n        // If all checks pass\r\n        return {\r\n            isValid: true,\r\n            error: ''\r\n        };\r\n    };\r\n\r\n    const changeHandle = (e, str) => {\r\n        const cloneInitail = { ...initialValue }\r\n        const value = e.target.value\r\n        const name = e.target.name\r\n        \r\n        let newErrors = { ...errors };\r\n\r\n        if (name === 'mobilenumber') {\r\n            if (value.length !== 10) {\r\n                newErrors.mobilenumber = 'Mobile number must be 10 digits long';\r\n            } else {\r\n                newErrors.mobilenumber = '';\r\n            }\r\n        }\r\n\r\n        if (name === 'adhaarnumber') {\r\n            if (value.length !== 12) {\r\n                newErrors.adhaarnumber = 'Aadhaar number must be 12 digits long';\r\n            } else {\r\n                newErrors.adhaarnumber = '';\r\n            }\r\n        }\r\n\r\n        if (name === 'amount') {\r\n           // Use the comprehensive validation\r\n           const amountValidation = validateAmount(value);\r\n            \r\n           // Update state based on validation\r\n           setIsAmountValid(amountValidation.isValid);\r\n        \r\n           \r\n           // Set error message\r\n           if (!amountValidation.isValid) {\r\n               newErrors.amount = amountValidation.error;\r\n           } else {\r\n               newErrors.amount = '';\r\n               // Clear any preset amount selection when manually entering\r\n               setSelected(null);\r\n           }\r\n        }\r\n\r\n        cloneInitail[name] = value\r\n        if ('mobilenumber' == str && value.length == 11) {\r\n            return\r\n        }\r\n        if ('adhaarnumber' == str && value.length == 13) {\r\n            return\r\n        }\r\n\r\n        setInitialValue(cloneInitail)\r\n        setErrors(newErrors);\r\n    }\r\n\r\n    const bankList = async () => {\r\n        try {\r\n            const res = await cassDepositApi()\r\n            console.log(res?.data);\r\n            const maped = res?.data?.data?.map((item) => {\r\n                return { ...item, label: item.bankName }\r\n            })\r\n\r\n            // console.log(maped);\r\n            setBankData(maped)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n    const [showBanak, setShowBank] = useState()\r\n    // console.log(showBanak);\r\n\r\n    const bankChange = (e) => {\r\n        console.log(e);\r\n        const clone = { ...initialValue }\r\n        // if (name == 'bank_id') {\r\n        const findIfac = bankData.find((item) => {\r\n            // console.log(item);\r\n            return item?.bankID == e.bankID\r\n        })\r\n\r\n        // let abc = findIfac?.ifsc_code\r\n        // let bankName = findIfac?.bank_name\r\n\r\n        // const clone2 = { ...clone, ifsc: abc == 'NULL' ? \"\" : abc, bank_name: bankName }\r\n\r\n        // setInitialValue(clone2)\r\n\r\n        setShowBank(e)\r\n\r\n    }\r\n\r\n\r\n\r\n    const Capturefingerherw = async () => {\r\n        try {\r\n            const fingerData = new capturefingerprint('http://127.0.0.1:11100/rd/capture', result)\r\n            console.log(fingerData);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const result = (data) => {\r\n        console.log(data);\r\n        // console.log(data.pid_data);\r\n\r\n        const prolog = data?.pid_data;\r\n        var parser = new DOMParser();\r\n        const XmlStr = prolog + \"<bookz/>\";\r\n        var xmlz = parser.parseFromString(XmlStr, \"application/xml\");\r\n        // console.log(window.btoa((new XMLSerializer()).serializeToString(xmlz)));\r\n\r\n\r\n        if (data?.errCode == '0') {\r\n            toastSuccessMessage('Finger Capture Successfully.')\r\n            setCapturediasable(false)\r\n        }\r\n        if (data?.errCode == '700') {\r\n            toastSuccessMessage1('Finger Capture Not Successfully.')\r\n        }\r\n\r\n        if (data?.httpSuccess == true) {\r\n            setDataCapture(window.btoa((new XMLSerializer()).serializeToString(xmlz)))\r\n        }\r\n    }\r\n\r\n\r\n   \r\n\r\n\r\n\r\n    const toastSuccessMessage1 = (str) => {\r\n        toast.error(`${str}`, {\r\n            position: \"top-center\",\r\n            autoClose: 4000,\r\n        });\r\n    };\r\n    const onHide22 = () => {\r\n        navigate('/aeps-OnBoarded');\r\n        setModalShow(false);\r\n      };\r\n\r\n\r\n\r\n    const submitData = async () => {\r\n        setIsSubmitting(true);\r\n        const clone = { ...initialValue, nationalbankidentification: showBanak?.iinno, latitude: position.latitude, longitude: position.longitude, data: dataCapture, user_id: window.localStorage.getItem('userIdToken'),bank:apiAepsType }\r\n        console.log(clone);\r\n        try {\r\n            const res = await cashDeposite(clone)\r\n            console.log(res);\r\n            if (res?.data?.error == true) {\r\n                toastSuccessMessage1(res?.data?.message || res?.message || \"Transction failed\")\r\n            }\r\n            if (res?.data?.error == false) {\r\n                toastSuccessMessage(res?.data?.message)\r\n                setDataModal(res?.data)\r\n                setModalShow(true)\r\n                setInitialValue({\r\n                    accessmodetype: 'site',\r\n                    latitude: position.latitude,\r\n                    longitude: position.longitude,\r\n                    mobilenumber: '',\r\n                    adhaarnumber: '',\r\n                    nationalbankidentification: '',\r\n                    requestremarks: 'Aeps Balance Enquiry',\r\n                    user_id: '',\r\n                    is_iris: 'NO',\r\n                    data: '',\r\n                    amount: ''\r\n                });\r\n                if (walletShowHeader) walletShowHeader();\r\n                setShowBank(null);\r\n            setSelected(null);\r\n            setDataCapture(null);\r\n            setCapturediasable(true);\r\n            setdiabaleCustomerBtn(true);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            toastSuccessMessage1(\"An error occurred while processing your request.\");\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (\"geolocation\" in navigator) {\r\n            navigator.geolocation.getCurrentPosition(function (position) {\r\n                setPosition({\r\n                    latitude: position.coords.latitude,\r\n                    longitude: position.coords.longitude,\r\n                });\r\n            });\r\n        } else {\r\n            alert('Geolocation is not available in your browser.')\r\n        }\r\n\r\n    }, []);\r\n    useEffect(() => {\r\n        bankList()\r\n    }, [])\r\n\r\n    const handleCheckboxChange = (event) => {\r\n        // console.log('event', event);\r\n        setIsChecked(event.target.checked);\r\n\r\n    };\r\n\r\n    const amounts = [500, 1000, 1500, 2000, 2500, 3000, 5000, 10000];\r\n\r\n    const handleSelect = (index, amount) => {\r\n        // Validate the preset amount\r\n        const amountValidation = validateAmount(amount);\r\n        \r\n        if (amountValidation.isValid) {\r\n            const clone = { ...initialValue, amount: amount }\r\n            setInitialValue(clone)\r\n            setSelected(index);\r\n            setIsAmountValid(true);\r\n           \r\n            \r\n            // Clear any previous amount-related errors\r\n            setErrors(prev => ({ \r\n                ...prev, \r\n                amount: '' \r\n            }));\r\n        } else {\r\n            // If preset amount is invalid for some reason\r\n            setErrors(prev => ({ \r\n                ...prev, \r\n                amount: amountValidation.error \r\n            }));\r\n            setIsAmountValid(false);\r\n            setCapturediasable(true);\r\n        }\r\n    };\r\n\r\n\r\n    const handlechageDevice = (e) => {\r\n        // console.log(e?.target?.value);\r\n\r\n        if (e?.target?.value == 1) {\r\n            Capturefingerherw()\r\n        }\r\n    }\r\n\r\n    const isCaptureFingerEnabled = () => {\r\n        // Enable if either preset amount is selected or manually entered amount is valid\r\n        return (selected !== null || isAmountValid) && \r\n               initialValue.adhaarnumber && \r\n               initialValue.mobilenumber && \r\n               showBanak;\r\n    };\r\n    const isSubmitEnabled = () => {\r\n        return !Capturediasable && \r\n               initialValue.mobilenumber && \r\n               initialValue.adhaarnumber && \r\n               showBanak && \r\n               isAmountValid && \r\n               !isSubmitting;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {loading && <Loader />}\r\n            {/* <div className=\"PageHeading\">\r\n                <h1>Aeps Cash Deposit</h1>\r\n            </div> */}\r\n\r\n            {/* <div className=\"ContentArea\"> */}\r\n            <div className=\"card\">\r\n                <div className=\"card-header\"><span>Aeps Cash Deposit</span></div>\r\n                <div className=\"card-body\">\r\n                <form action=\"#\" method=\"post\" name=\"frmCallAction\" id=\"frmCallAction\">\r\n    <div className=\"form-row\">\r\n        <div className=\"col-lg-6\">\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"txtNumId\">Customer Mobile Number <span style={{ color: 'red' }}>*</span></label>\r\n                <input \r\n                    type=\"number\" \r\n                    name=\"mobilenumber\" \r\n                    id=\"account_no\"  \r\n                    className={`form-control ${initialValue.mobilenumber && (errors.mobilenumber ? 'is-invalid' : '')}`}\r\n                    placeholder=\"Enter Customer Mobile\"  \r\n                    value={initialValue.mobilenumber} \r\n                    onChange={(e) => changeHandle(e, 'mobilenumber')} \r\n                />\r\n                {errors.mobilenumber && <div className=\"invalid-feedback\">{errors.mobilenumber}</div>}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"txtNumId\">Customer Aadhaar Number <span style={{ color: 'red' }}>*</span></label>\r\n                <input \r\n                    type=\"number\" \r\n                    name=\"adhaarnumber\" \r\n                    id=\"account_no\" \r\n                    className={`form-control ${initialValue.adhaarnumber && (errors.adhaarnumber ? 'is-invalid' : '')}`} \r\n                    placeholder=\"Enter Customer Aadhaar\" \r\n                    value={initialValue.adhaarnumber} \r\n                    onChange={(e) => changeHandle(e, 'adhaarnumber')} \r\n                />\r\n                {errors.adhaarnumber && <div className=\"invalid-feedback\">{errors.adhaarnumber}</div>}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"ddldb\">Select bank <span style={{ color: 'red' }}>*</span></label>\r\n                <Select\r\n                    value={showBanak}\r\n                    name=\"showBanak\"\r\n                    options={bankData}\r\n                    className=\"games-dropdown-2 customsection\"\r\n                    classNamePrefix=\"select\"\r\n                    onChange={bankChange}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group grid-sed\">\r\n                <label htmlFor=\"txtUserId\">Scan Finger Print <span style={{ color: 'red' }}>*</span></label>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-success\" \r\n                    // disabled={!isAmountValid || !initialValue?.adhaarnumber || !initialValue?.mobilenumber || !showBanak} \r\n                    disabled={!isCaptureFingerEnabled()}\r\n                    onClick={Capturefingerherw}\r\n                >\r\n                    Capture Finger\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-6\">\r\n            <label htmlFor=\"ddldb\">Amount</label>\r\n            <div className=\"form-group Amount-group\">\r\n                {amounts.map((amount, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`Amount-set ${selected === index ? 'selected' : 'first-color'}`}\r\n                        onClick={() => handleSelect(index, amount)}\r\n                    >\r\n                        <p style={{ margin: '0px' }}>\r\n                            <MdCurrencyRupee /> <span>{amount}</span>\r\n                        </p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"txtNumId\">OR Enter Amount <span style={{ color: 'red' }}>*</span></label>\r\n                <input  \r\n                    className={`form-control ${initialValue.amount && (errors.amount ? 'is-invalid' : 'is-valid')}`}\r\n                    id=\"txtNumId\" \r\n                    name=\"amount\" \r\n                    type=\"number\" \r\n                    placeholder=\"Enter Amount multiple of Fifty\" \r\n                    value={initialValue?.amount} \r\n                    onChange={changeHandle} \r\n                />\r\n                {errors.amount && <div className=\"invalid-feedback\">{errors.amount}</div>}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-12 text-align-center\">\r\n            <label>&nbsp;</label>\r\n            <button \r\n                type=\"button\" \r\n                className=\"btn btn-primary\"  \r\n                // disabled={!initialValue.adhaarnumber || !initialValue.amount || !initialValue.mobilenumber || !showBanak || errors.mobilenumber || errors.adhaarnumber || isSubmitting || Capturediasable }  \r\n                disabled={!isSubmitEnabled()}\r\n                onClick={submitData}\r\n            >\r\n                {isSubmitting ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : 'Submit'}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</form>\r\n                </div>\r\n\r\n            </div>\r\n            {/* <div className=\"card mt-2\" style={{ overflow: 'auto' }}>\r\n                    <div className=\"card-body\">\r\n                        <ReactHTMLTableToExcel\r\n                            id=\"test-table-xls-button\"\r\n                            className=\"download-table-xls-button btn btn-success cusxel\"\r\n                            table=\"table-to-xlsx\"\r\n                            filename=\"tablexls\"\r\n                            sheet=\"tablexls\"\r\n                            buttonText=\"Download Excel sheet\" />\r\n                        <div className=\"GridUi no-header-footer-grid mt-3\" id=\"all_transaction\">\r\n                            <div id=\"rechargehistorytbl_wrapper\" className=\"dataTables_wrapper\">\r\n\r\n                                <table id=\"rechargehistorytbl\" className=\"table table-striped table-bordered table-hover display fixed_headers dataTable\" style={{ width: 1250 }} role=\"grid\" aria-describedby=\"rechargehistorytbl_info\">\r\n                                    <thead>\r\n                                        <tr role=\"row\">\r\n                                            <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"rechargehistorytbl\" rowSpan={1} colSpan={1} aria-sort=\"ascending\" aria-label=\"Sr No: activate to sort column descending\">\r\n                                                Sr No\r\n                                            </th>\r\n                                            <th className=\"sorting\" tabIndex={0} aria-controls=\"rechargehistorytbl\" rowSpan={1} colSpan={1} aria-label=\"Recharge ID: activate to sort column ascending\">\r\n                                                Recharge ID\r\n                                            </th>\r\n                                            <th className=\"sorting\" tabIndex={0} aria-controls=\"rechargehistorytbl\" rowSpan={1} colSpan={1} aria-label=\"Txn Id: activate to sort column ascending\">\r\n                                                Txn Id\r\n                                            </th>\r\n                                            <th className=\"sorting\" tabIndex={0} aria-controls=\"rechargehistorytbl\" rowSpan={1} colSpan={1} aria-label=\"Recharge  DateTime: activate to sort column ascending\">\r\n                                                Recharge <br />\r\n                                                DateTime</th>\r\n                                            <th className=\"sorting\" tabIndex={0} aria-controls=\"rechargehistorytbl\" rowSpan={1} colSpan={1} aria-label=\"Company Name: activate to sort column ascending\">\r\n                                                Company Name</th>\r\n                                            <th className=\"sorting\" tabIndex={0} aria-controls=\"rechargehistorytbl\" rowSpan={1} colSpan={1} aria-label=\"Mobile No: activate to sort column ascending\">\r\n                                                Mobile No\r\n                                            </th>\r\n                                            <th className=\"sorting\" tabIndex={0} aria-controls=\"rechargehistorytbl\" rowSpan={1} colSpan={1} aria-label=\"Amount: activate to sort column ascending\">\r\n                                                Amount\r\n                                            </th>\r\n                                            <th className=\"sorting\" tabIndex={0} aria-controls=\"rechargehistorytbl\" rowSpan={1} colSpan={1} aria-label=\"Debit Amount: activate to sort column ascending\">\r\n                                                Debit Amount\r\n                                            </th>\r\n                                            <th className=\"action_th sorting_disabled\" rowSpan={1} colSpan={1} aria-label=\"Status\">Status</th><th className=\"action_th sorting_disabled\" rowSpan={1} colSpan={1} aria-label=\"Complain\">Complain</th></tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr className=\"odd\"><td valign=\"top\" colSpan={10} className=\"dataTables_empty\">No data available in table</td></tr></tbody>\r\n\r\n                                </table>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n            {/* </div > */}\r\n            <AepsModalSucess\r\n            show={modalShow}\r\n            onHide={() => onHide22()}\r\n            adharPay=\"Cash Deposite\"\r\n            dataModal={dataModal}\r\n        />\r\n           \r\n        </>\r\n    )\r\n}\r\nexport default CashDeposit","import { Nav, Tab, Tabs } from \"react-bootstrap\";\r\nimport BlanceEnquiry from \"../../../../components/admin/aepsOnboarding/comleteOnBoarding/blanceEnquiry/BlanceEnquiry\";\r\nimport { useState, useEffect } from \"react\";\r\nimport CashDeposit from \"../../../../components/admin/cashDiposit/CashDeposit\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Alert from \"antd/es/alert/Alert\";\r\n\r\nfunction CasDepositTab({balanceEnquiryPermission, depositPermission, isInstantpayOnBoarded, apiAepsType, walletShowHeader }) {\r\n    const [active, setActive] = useState(true);\r\n    const [activeKey, setActiveKey] = useState(\"Cash Deposit\");\r\n\r\n    // Set initial active tab based on availability\r\n    useEffect(() => {\r\n        if (!isInstantpayOnBoarded) {\r\n            // When not onboarded, Cash Deposit is available\r\n            setActiveKey(\"Cash Deposit\");\r\n        } else {\r\n            // When onboarded, only Balance Enquiry is available\r\n            setActiveKey(\"Balance Enquiry\");\r\n        }\r\n    }, [isInstantpayOnBoarded]);\r\n\r\n      \r\n    \r\n\r\n    const handleTabSelect = (key) => {\r\n        setActiveKey(key);\r\n        setActive(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n        {depositPermission ?\r\n            <div className=\"ContentArea\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <span>AEPS Services</span>\r\n                    </div>\r\n                    <div className=\"row p-4\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"aeps-tab-section\">\r\n                                <Tabs\r\n                                    activeKey={activeKey}\r\n                                    id=\"aeps-services-tabs\"\r\n                                    className=\"mb-3\"\r\n                                    onSelect={handleTabSelect}\r\n                                >\r\n                                    {/* {balanceEnquiryPermission &&\r\n                                    <Tab \r\n                                        eventKey=\"Balance Enquiry\" \r\n                                        title=\"Balance Enquiry\"\r\n                                    > \r\n                                        <BlanceEnquiry \r\n                                            active={active} \r\n                                            apiAepsType={apiAepsType} \r\n                                        />\r\n                                         \r\n                                    </Tab> } */}\r\n                                    \r\n                                    {(!isInstantpayOnBoarded && depositPermission) && (\r\n                                        <Tab \r\n                                            eventKey=\"Cash Deposit\" \r\n                                            title=\"Cash Deposit\"\r\n                                        >\r\n                                            <CashDeposit \r\n                                                active={active} \r\n                                                apiAepsType={apiAepsType} \r\n                                                walletShowHeader={walletShowHeader} \r\n                                            />\r\n                                        </Tab>\r\n                                    )}\r\n                                </Tabs>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> :\r\n             <Alert message=\"Services is Disable by Admin\" type=\"warning\" showIcon /> }\r\n          \r\n        </>\r\n    );\r\n}\r\n\r\nexport default CasDepositTab;","import { useEffect, useState } from \"react\"\r\nimport { aepsOnboard, getActiveaepsVendorList, getActiveVendorServiceList, UserPermissionAeps } from \"../../../api/login/Login\"\r\nimport CashDeposit from \"../../../components/admin/cashDiposit/CashDeposit\"\r\nimport AepsDipositPurchge from \"./aepsDipositPurchage/AepsDipositPurchage\"\r\nimport CasDepositTab from \"./casDepositTab/CasDepositTab\"\r\nimport PermissionAepsOnboarding from \"../../../components/admin/aepsOnboarding/permissionAepsOnboarding/PermissionAepsOnboarding\"\r\nimport SuggestOnboarding from \"../../../components/admin/aepsOnboarding/suggetsOnboarding/SuggestOnboarding\"\r\nimport BankPermission from \"../../../components/admin/aepsOnboarding/bankPermission/BankPermission\"\r\nimport AuthResister from \"../../../components/admin/aepsOnboarding/authResister/AuthResister\"\r\nimport DailyAuth from \"../../../components/admin/aepsOnboarding/dailyAuth/DailyAuth\"\r\nimport { toast, ToastContainer } from \"react-toastify\"\r\nimport Bank4aepsverify from \"../aepsOnboarding/Bank4aepsverify\"\r\nimport { toastSuccessMessage } from \"../../../components/compeleteRegister/ToastShare\"\r\nimport { Snackbar, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Loader from \"../../../common/loader/Loader\"\r\nimport {  Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Button, Modal } from '@mui/material';\r\nimport { Alert } from \"antd\"\r\n\r\nfunction CashDepositPage({ profiledata,walletShowHeader }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [aepsType, setAepsType] = useState('Aeps2');\r\n    // const apiAepsType = aepsType === 'Aeps2' ? 'aeps2' : 'aeps4';\r\n    const apiAepsType = aepsType === 'Aeps2' ? 'aeps2' : aepsType === 'Aeps4' ? 'aeps4' : '';\r\n    const [bankverify, setbankverify] = useState(false);\r\n    const [bankServerDown, setBankServerDown] = useState(false);\r\n    const [merchnadecode, setMerchantCode] = useState(null);\r\n     const [vendorList , setVendorList] = useState({})\r\n    const [aepsData, setAepsData] = useState({\r\n        Aeps2: {\r\n            isPlanPurchased: false,\r\n            isOnboarded: false,\r\n            hasBankPermission: false,\r\n            isAuthRegistered: false,\r\n            hasDailyAuth: false,\r\n\r\n            permissions: {\r\n                deposite: false,\r\n                balanceEnquiry: false,\r\n            }\r\n        },\r\n        Aeps4: {\r\n            isPlanPurchased: false,\r\n            isOnboarded: false,\r\n            hasBankPermission: false,\r\n            isAuthRegistered: false,\r\n            hasDailyAuth: false ,\r\n            permissions: {\r\n                deposite: false,\r\n                balanceEnquiry: false,\r\n            }\r\n        }\r\n    });\r\n    const [error, setError] = useState({\r\n        show: false,\r\n        message: '',\r\n        type: 'error'\r\n    });\r\n\r\n    const handleCloseSnackbar = () => {\r\n        setError({ ...error, show: false });\r\n    };\r\n\r\n    const showError = (message, type = 'error') => {\r\n        setError({\r\n            show: true,\r\n            message,\r\n            type\r\n        });\r\n    };\r\n    const showSuccess = (message, type = 'success') => {\r\n        setError({\r\n            show: true,\r\n            message,\r\n            type\r\n        });\r\n    };\r\n\r\n    const checkBankPermission = (aepsData, type) => {\r\n        if (!aepsData?.bankActiveStatus) return false;\r\n        \r\n        return type === 'Aeps2' \r\n            ? (aepsData.bankActiveStatus.Bank2 || aepsData.bankActiveStatus.Bank3)\r\n            : aepsData.bankActiveStatus.Bank4;\r\n    };\r\n\r\n    const fetchPermissions = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await UserPermissionAeps();\r\n            const activeService = await   getActiveVendorServiceList()\r\n\r\n            if (response?.data?.statusCode == '200') {\r\n                const data = response.data.data;\r\n                setMerchantCode(data.merchantCode);\r\n\r\n                \r\n\r\n                const newAepsData = {\r\n                    Aeps2: {\r\n                        isPlanPurchased: data.is_active && data.is_buy,\r\n                        isOnboarded: data.Aeps2?.is_onboarding || false,\r\n                        hasBankPermission: checkBankPermission(data.Aeps2, 'Aeps2'),\r\n                        isAuthRegistered: data.Aeps2?.authRegistered || false,\r\n                        hasDailyAuth: data.Aeps2?.dailyAuth || false ,\r\n                        permissions: {\r\n                            deposite: activeService?.data?.data?.some(service => service.bank === \"aeps2\" && service.slug === \"CD\" && service.status),\r\n                            balanceEnquiry: data.is_active && data.is_buy &&  activeService?.data?.data?.some(service => service.bank === \"aeps2\" && service.slug === \"BE\" && service.status)\r\n                        }\r\n                        \r\n                    },\r\n                    Aeps4: {\r\n                        isPlanPurchased: data.is_active && data.is_buy,\r\n                        isOnboarded: data.Aeps4?.is_onboarding || false,\r\n                        hasBankPermission: checkBankPermission(data.Aeps4, 'Aeps4'),\r\n                        isAuthRegistered: data.Aeps4?.authRegistered || false,\r\n                        hasDailyAuth: data.Aeps4?.dailyAuth || false ,\r\n                        permissions: {\r\n                           \r\n                            balanceEnquiry: data.is_active && data.is_buy &&  activeService?.data?.data?.some(service => service.bank === \"aeps4\" && service.slug === \"BE\" && service.status)\r\n                        }\r\n                    }\r\n                };\r\n\r\n                setAepsData(newAepsData);\r\n\r\n                if (!newAepsData.Aeps2.isOnboarded && newAepsData.Aeps4.isOnboarded) {\r\n                    setAepsType('Aeps4');\r\n                }\r\n            } else if (response?.data?.statusCode === '00127') {\r\n                setBankServerDown(true);\r\n            } else if (response?.data?.statusCode === '007') {\r\n                setbankverify(true);\r\n            } else {\r\n                showError(response?.data?.message || response?.message );\r\n            }\r\n        } catch (error) {\r\n            showError(error.message || 'Failed to fetch permissions');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAepsTypeChange = (event) => {\r\n        setAepsType(event.target.value);\r\n    };\r\n\r\n    const handleOnboarding = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = {\r\n                user_id: localStorage.getItem('userIdToken'),\r\n                bank: apiAepsType\r\n            };\r\n            \r\n            const response = await aepsOnboard(data);\r\n            \r\n            if (response?.data?.statusCode == 200) {\r\n                window.open(response.data.data.url, '_blank');\r\n                showError(response?.data?.message || response?.message || 'Onboarding successful', 'success');\r\n                await fetchPermissions();\r\n            } else {\r\n                throw new Error(response?.data?.message || 'Onboarding failed');\r\n            }\r\n        } catch (error) {\r\n            showError(error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPermissions();\r\n        getVendorList()\r\n    }, []);\r\n\r\n      const getVendorList = async() => {\r\n           try {\r\n              let res = await getActiveaepsVendorList()\r\n               setVendorList(res?.data)\r\n               let activeType1 = res?.data?.data?.defaultAepsApiObj?.slug === 'aeps2' \r\n               ? 'Aeps2' \r\n               : (res?.data?.data?.defaultAepsApiObj?.slug ? 'Aeps2' : '');\r\n    \r\n               console.log(activeType1 , \"ativvetype\")\r\n               setAepsType(activeType1)\r\n    \r\n                  // Update isInstantpayOnBoarded based on selected AEPS type\r\n        // if (activeType1 === 'aeps4') {\r\n        //     setIsInstantpayOnBoarded(true);  // Set true when Aeps4 is selected\r\n        // } \r\n        // if (activeType1 === 'aeps2') {\r\n        //     setIsInstantpayOnBoarded(false);  // Set true when Aeps4 is selected\r\n        // } \r\n    \r\n        \r\n              \r\n           } catch (error) {\r\n            \r\n           }\r\n      }\r\n\r\n    const renderCurrentStep = () => {\r\n        const currentAepsData = aepsData[aepsType];\r\n\r\n           if(aepsType === '')\r\n             {\r\n                return <>\r\n                <Alert message=\"Services is Disable by Admin\" type=\"warning\" showIcon />\r\n                </>\r\n             }\r\n\r\n        if (!currentAepsData.isPlanPurchased) {\r\n            return <PermissionAepsOnboarding />;\r\n        }\r\n\r\n        if (!currentAepsData.isOnboarded) {\r\n            return <SuggestOnboarding onBoardingApiCall={handleOnboarding} apiAepsType={apiAepsType} permissionAeps={fetchPermissions} setbankverify={setbankverify}   isInstantpayOnBoarded={aepsType === 'Aeps4'}  merchnadecode={merchnadecode}/>;\r\n        }\r\n        \r\n        if (!currentAepsData.hasBankPermission) {\r\n            return (\r\n                <BankPermission \r\n                    profiledata={profiledata} \r\n                    onDailyAuthComplete={() => fetchPermissions()} \r\n                    apiAepsType={apiAepsType} \r\n                    merchnadecode={merchnadecode}\r\n                />\r\n            );\r\n        }\r\n        \r\n\r\n        if (!currentAepsData.isAuthRegistered) {\r\n            return <AuthResister onDailyAuthComplete={() => fetchPermissions()}   apiAepsType={apiAepsType} />;\r\n        }\r\n\r\n        if (!currentAepsData.hasDailyAuth) {\r\n            return <DailyAuth onDailyAuthComplete={() => fetchPermissions()}   apiAepsType={apiAepsType}/>;\r\n        }\r\n\r\n        return <CasDepositTab \r\n         isInstantpayOnBoarded={aepsType === 'Aeps4'} \r\n         apiAepsType={apiAepsType}\r\n         depositPermission={currentAepsData.permissions.deposite}\r\n         balanceEnquiryPermission={currentAepsData.permissions.balanceEnquiry}\r\n        walletShowHeader={walletShowHeader}   />;\r\n    };\r\n\r\n    return (\r\n        <div className=\"cash-deposit-page\">\r\n            {loading && <Loader/>}\r\n            \r\n            <div className=\"aeps-type-selector\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column',marginTop:'2%' }}>\r\n    <FormControl component=\"fieldset\" style={{ width: '100%', maxWidth: '400px' }}>\r\n        <FormLabel>Select AEPS Type</FormLabel>\r\n        {vendorList?.data?.aepsApi?.some((item)=> item?.slug === 'aeps2') && \r\n        <RadioGroup value={aepsType} onChange={handleAepsTypeChange} style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <FormControlLabel\r\n                value=\"Aeps2\"\r\n                control={<Radio />}\r\n                label={\r\n                    <>\r\n                        AEPS 2 \r\n                        {aepsData.Aeps2.isOnboarded && (\r\n                            <span style={{ color: 'green', marginLeft: '8px' }}>\r\n                                ✔ (Onboarded)\r\n                            </span>\r\n                        )}\r\n                    </>\r\n                }\r\n            />\r\n            {/* <FormControlLabel\r\n                value=\"Aeps4\"\r\n                control={<Radio />}\r\n                label={\r\n                    <>\r\n                        AEPS 4\r\n                        {aepsData.Aeps4.isOnboarded && (\r\n                            <span style={{ color: 'green', marginLeft: '8px' }}>\r\n                                ✔ (Onboarded)\r\n                            </span>\r\n                        )}\r\n                    </>\r\n                }\r\n            /> */}\r\n        </RadioGroup> }\r\n    </FormControl>\r\n</div>\r\n\r\n\r\n            {renderCurrentStep()}\r\n\r\n            <Bank4aepsverify\r\n                show={bankverify}\r\n                onHide={() => setbankverify(false)} \r\n                permissionAeps={fetchPermissions}\r\n            />\r\n\r\n            {bankServerDown && (\r\n                <div style={{ \r\n                    textAlign: 'center', \r\n                    padding: '20px', \r\n                    backgroundColor: '#ffcccc', \r\n                    borderRadius: '5px',\r\n                    margin: '20px auto',\r\n                    maxWidth: '400px'\r\n                }}>\r\n                    <h2 style={{ color: '#cc0000' }}>Bank Server is Down</h2>\r\n                    <p>We apologize for the inconvenience. Please try again later.</p>\r\n                </div>\r\n            )}\r\n\r\n            <Snackbar\r\n                open={error.show}\r\n                autoHideDuration={6000}\r\n                onClose={handleCloseSnackbar}\r\n                message={error.message}\r\n                action={\r\n                    <IconButton size=\"small\" onClick={handleCloseSnackbar}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CashDepositPage;"],"names":["toastSuccessMessage","str","toast","success","concat","position","autoClose","toastErrorMessage","error","_ref","activeMessage","buyMessage","head","_jsxs","_Fragment","children","_jsx","className","apiAepsType","walletShowHeader","console","log","loading","setLoading","useState","bankData","setBankData","isChecked","setIsChecked","selected","setSelected","modalShow","setModalShow","dataModal","setDataModal","isSubmitting","setIsSubmitting","navigate","useNavigate","Capturediasable","setCapturediasable","isAmountValid","setIsAmountValid","diabaleCustomerBtn","setdiabaleCustomerBtn","setPosition","latitude","longitude","dataCapture","setDataCapture","errors","setErrors","mobilenumber","adhaarnumber","amount","initialValue","setInitialValue","accessmodetype","nationalbankidentification","requestremarks","user_id","is_iris","data","validateAmount","numAmount","parseInt","isNaN","isValid","changeHandle","e","cloneInitail","value","target","name","newErrors","length","amountValidation","showBanak","setShowBank","Capturefingerherw","async","fingerData","capturefingerprint","result","XmlStr","pid_data","xmlz","DOMParser","parseFromString","errCode","toastSuccessMessage1","httpSuccess","window","btoa","XMLSerializer","serializeToString","useEffect","navigator","geolocation","getCurrentPosition","coords","alert","_res$data","_res$data$data","res","cassDepositApi","maped","map","item","label","bankName","bankList","Loader","action","method","id","htmlFor","style","color","type","placeholder","onChange","Select","options","classNamePrefix","find","bankID","disabled","onClick","index","handleSelect","clone","prev","margin","MdCurrencyRupee","iinno","localStorage","getItem","bank","_res$data2","_res$data4","cashDeposite","_res$data3","_res$data5","message","role","AepsModalSucess","show","onHide","adharPay","balanceEnquiryPermission","depositPermission","isInstantpayOnBoarded","active","setActive","activeKey","setActiveKey","Tabs","onSelect","key","Tab","eventKey","title","CashDeposit","Alert","showIcon","_vendorList$data","_vendorList$data$aeps","profiledata","aepsType","setAepsType","bankverify","setbankverify","bankServerDown","setBankServerDown","merchnadecode","setMerchantCode","vendorList","setVendorList","aepsData","setAepsData","Aeps2","isPlanPurchased","isOnboarded","hasBankPermission","isAuthRegistered","hasDailyAuth","permissions","deposite","balanceEnquiry","Aeps4","setError","handleCloseSnackbar","showError","arguments","undefined","checkBankPermission","bankActiveStatus","Bank2","Bank3","Bank4","fetchPermissions","_response$data","_response$data2","_response$data3","response","UserPermissionAeps","activeService","getActiveVendorServiceList","statusCode","_data$Aeps","_data$Aeps2","_data$Aeps3","_activeService$data","_activeService$data$d","_activeService$data2","_activeService$data2$","_data$Aeps4","_data$Aeps5","_data$Aeps6","_activeService$data3","_activeService$data3$","merchantCode","newAepsData","is_active","is_buy","is_onboarding","authRegistered","dailyAuth","some","service","slug","status","_response$data4","handleOnboarding","_response$data5","aepsOnboard","_response$data7","_response$data6","Error","open","url","getVendorList","_res$data$data$defaul","_res$data2$data","_res$data2$data$defau","getActiveaepsVendorList","activeType1","defaultAepsApiObj","display","justifyContent","alignItems","flexDirection","marginTop","FormControl","component","width","maxWidth","FormLabel","aepsApi","RadioGroup","event","FormControlLabel","control","Radio","marginLeft","renderCurrentStep","currentAepsData","CasDepositTab","DailyAuth","onDailyAuthComplete","AuthResister","BankPermission","SuggestOnboarding","onBoardingApiCall","permissionAeps","PermissionAepsOnboarding","Bank4aepsverify","textAlign","padding","backgroundColor","borderRadius","Snackbar","autoHideDuration","onClose","IconButton","size","CloseIcon"],"sourceRoot":""}